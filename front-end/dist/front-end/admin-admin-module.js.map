{"version":3,"sources":["webpack:///./src/app/admin/admin-report-details/admin-report-details.component.html","webpack:///./src/app/admin/admin-report-details/admin-report-details.component.scss","webpack:///./src/app/admin/admin-report-details/admin-report-details.component.ts","webpack:///./src/app/admin/admin-routing.module.ts","webpack:///./src/app/admin/admin.component.html","webpack:///./src/app/admin/admin.component.scss","webpack:///./src/app/admin/admin.component.ts","webpack:///./src/app/admin/admin.module.ts","webpack:///./src/app/admin/all-reports/all-report-list/all-report-list.component.html","webpack:///./src/app/admin/all-reports/all-report-list/all-report-list.component.scss","webpack:///./src/app/admin/all-reports/all-report-list/all-report-list.component.ts","webpack:///./src/app/admin/all-reports/all-reports.component.html","webpack:///./src/app/admin/all-reports/all-reports.component.scss","webpack:///./src/app/admin/all-reports/all-reports.component.ts","webpack:///./src/app/admin/all-users/all-user-list/all-user-list.component.html","webpack:///./src/app/admin/all-users/all-user-list/all-user-list.component.scss","webpack:///./src/app/admin/all-users/all-user-list/all-user-list.component.ts","webpack:///./src/app/admin/all-users/all-users.component.html","webpack:///./src/app/admin/all-users/all-users.component.scss","webpack:///./src/app/admin/all-users/all-users.component.ts","webpack:///./src/app/admin/organization-details/organization-details.component.html","webpack:///./src/app/admin/organization-details/organization-details.component.scss","webpack:///./src/app/admin/organization-details/organization-details.component.ts","webpack:///./src/app/admin/organization/organization-list/organization-list.component.html","webpack:///./src/app/admin/organization/organization-list/organization-list.component.scss","webpack:///./src/app/admin/organization/organization-list/organization-list.component.ts","webpack:///./src/app/admin/organization/organization.component.html","webpack:///./src/app/admin/organization/organization.component.scss","webpack:///./src/app/admin/organization/organization.component.ts","webpack:///./src/app/admin/user-details/user-details.component.html","webpack:///./src/app/admin/user-details/user-details.component.scss","webpack:///./src/app/admin/user-details/user-details.component.ts","webpack:///./src/app/shared/common-view/report-list/report-list.component.html","webpack:///./src/app/shared/common-view/report-list/report-list.component.scss","webpack:///./src/app/shared/common-view/report-list/report-list.component.ts","webpack:///./src/app/shared/common-view/user-list/user-list.component.html","webpack:///./src/app/shared/common-view/user-list/user-list.component.scss","webpack:///./src/app/shared/common-view/user-list/user-list.component.ts","webpack:///./src/app/shared/pipes/datarules-list.pipe.ts","webpack:///./src/app/shared/pipes/org-list.pipe.ts","webpack:///./src/app/shared/pipes/pagination.pipe.ts","webpack:///./src/app/shared/pipes/report-list.pipe.ts","webpack:///./src/app/shared/pipes/search-name.pipe.ts","webpack:///./src/app/shared/pipes/user-list.pipe.ts","webpack:///./src/app/shared/services/datarules.service.ts"],"names":[],"mappings":"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","file":"admin-admin-module.js","sourcesContent":["module.exports = \"<div *ngIf=\\\"(organization != null && user!= null && report != null) || (organization != null && !userView && report != null)\\\">\\r\\n\\r\\n  <div class=\\\"breadcrumb-container\\\">\\r\\n    <!-- Breadcrumbs for report when navigation from organization list -->\\r\\n    <div class=\\\"breadcrumb\\\" *ngIf=\\\"!userView && organizationID != undefined\\\"> <span routerLink=\\\"../../../\\\"> <i class=\\\"material-icons\\\">\\r\\n          business </i> Organization List </span> &nbsp;&nbsp;   <i class=\\\"material-icons arrow\\\">     keyboard_arrow_right   </i>   <i style=\\\"margin-left: -14px\\\" class=\\\"material-icons arrow\\\">     keyboard_arrow_right   </i>&nbsp;&nbsp; <span routerLink=\\\"../../\\\">\\r\\n        {{organization.name}}</span>\\r\\n      &nbsp;&nbsp;   <i class=\\\"material-icons arrow\\\">     keyboard_arrow_right   </i>   <i style=\\\"margin-left: -14px\\\" class=\\\"material-icons arrow\\\">     keyboard_arrow_right   </i>&nbsp;&nbsp; <span class=\\\"active\\\"> {{report.name}}   ({{report.organization.name}})</span> </div>\\r\\n\\r\\n    <!-- Breadcrumbs for report when navigation from user under organization list -->\\r\\n    <div class=\\\"breadcrumb\\\" *ngIf=\\\"userView && organizationID != undefined\\\"> <span routerLink=\\\"../../../../../\\\"> <i class=\\\"material-icons\\\">\\r\\n        business </i> Organization List </span>\\r\\n      &nbsp;&nbsp;   <i class=\\\"material-icons arrow\\\">     keyboard_arrow_right   </i>   <i style=\\\"margin-left: -14px\\\" class=\\\"material-icons arrow\\\">     keyboard_arrow_right   </i>&nbsp;&nbsp; <span routerLink=\\\"../../../../\\\">\\r\\n        {{organization.name}}</span>\\r\\n      &nbsp;&nbsp;   <i class=\\\"material-icons arrow\\\">     keyboard_arrow_right   </i>   <i style=\\\"margin-left: -14px\\\" class=\\\"material-icons arrow\\\">     keyboard_arrow_right   </i>&nbsp;&nbsp; <span routerLink=\\\"../../\\\"> {{user.name}} </span> &nbsp;&nbsp;   <i class=\\\"material-icons arrow\\\">     keyboard_arrow_right   </i>   <i style=\\\"margin-left: -14px\\\" class=\\\"material-icons arrow\\\">     keyboard_arrow_right   </i>&nbsp;&nbsp; <span class=\\\"active\\\"> {{report.name}}\\r\\n        ({{report.organization.name}})</span></div>\\r\\n\\r\\n    <!-- Breadcrumbs for report when navigation from user under user list -->\\r\\n    <div class=\\\"breadcrumb\\\" *ngIf=\\\"organizationID === undefined && userID != undefined\\\"> <span routerLink=\\\"../../../../\\\"> <i class=\\\"material-icons\\\">\\r\\n        person_outline </i> User List </span>\\r\\n      &nbsp;&nbsp;   <i class=\\\"material-icons arrow\\\">     keyboard_arrow_right   </i>   <i style=\\\"margin-left: -14px\\\" class=\\\"material-icons arrow\\\">     keyboard_arrow_right   </i>&nbsp;&nbsp; <span routerLink=\\\"../../\\\"> {{user.name}} </span> &nbsp;&nbsp;   <i class=\\\"material-icons arrow\\\">     keyboard_arrow_right   </i>   <i style=\\\"margin-left: -14px\\\" class=\\\"material-icons arrow\\\">     keyboard_arrow_right   </i>&nbsp;&nbsp; <span class=\\\"active\\\"> {{report.name}}\\r\\n        ({{report.organization.name}})</span></div>\\r\\n\\r\\n    <!-- Breadcrumbs for report when navigation from report list -->\\r\\n    <div class=\\\"breadcrumb\\\" *ngIf=\\\"organizationID === undefined && userID === undefined\\\"> <span routerLink=\\\"../../\\\"> <i class=\\\"material-icons\\\">\\r\\n        assessment </i>  Report List </span>\\r\\n      &nbsp;&nbsp;   <i class=\\\"material-icons arrow\\\">     keyboard_arrow_right   </i>   <i style=\\\"margin-left: -14px\\\" class=\\\"material-icons arrow\\\">     keyboard_arrow_right   </i>&nbsp;&nbsp; <span class=\\\"active\\\"> {{report.name}} ({{report.organization.name}})</span> </div>\\r\\n  </div>\\r\\n\\r\\n\\r\\n  <div class=\\\"main-content-view\\\">\\r\\n    <h3> {{report.name}}</h3>\\r\\n    <p>{{report.organization.name}}</p>\\r\\n    <p>{{report.date | date }}</p>\\r\\n    <p>{{report.datasource}}</p>\\r\\n    <p>{{report.link}}</p>\\r\\n    <hr>\\r\\n    <h4>Meta Data</h4>\\r\\n    <p>Created By: {{ report.createdBy}}</p>\\r\\n    <p>Updated By: {{ report.updatedBy}}</p>\\r\\n    <h5>Accessed By</h5>\\r\\n    <p *ngFor=\\\"let user of report.accessedBy\\\"> {{user.name}}</p>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"\"","import { UserService } from './../../shared/services/user.service';\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { ReportService } from '../../shared/services/report.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport * as UserViewModel from '../../shared/view-models/user.viewmodel';\r\nimport * as OrganizationViewModel from '../../shared/view-models/organization.viewmodel';\r\nimport * as ReportViewModel from '../../shared/view-models/report.viewmodel';\r\nimport { OrganizationService } from '../../shared/services/organization.service';\r\n\r\n@Component({\r\n  selector: 'app-admin-report-details',\r\n  templateUrl: './admin-report-details.component.html',\r\n  styleUrls: ['./admin-report-details.component.scss']\r\n})\r\nexport class AdminReportDetailsComponent implements OnInit, OnDestroy {\r\n\r\n  constructor(private reportService: ReportService, private route: ActivatedRoute, private userService: UserService, private organizationService: OrganizationService) { }\r\n\r\n  sub: any;\r\n  organizationID;\r\n  userID;\r\n  reportID;\r\n  organization: OrganizationViewModel.SimpleOrganization = null;\r\n  user: UserViewModel.SimpleUserView = undefined;\r\n  report: ReportViewModel.ReportWithMetaData = null;\r\n  userView: boolean;\r\n\r\n  async ngOnInit() {\r\n    this.sub = this.route.params.subscribe(params => {\r\n      this.organizationID = params['id'];\r\n      this.userID = params['userID'];\r\n      this.reportID = params['reportID'];\r\n    });\r\n\r\n    this.report = await this.reportService.getReport('reportID');\r\n    if (this.userID !== undefined) {\r\n      this.userView = true;\r\n      this.user = await this.userService.getUser('userID');\r\n    } else {\r\n      this.userView = false;\r\n    }\r\n    this.organization = await this.organizationService.getOrganizationById('orgID');\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.sub.unsubscribe();\r\n  }\r\n\r\n}\r\n","import { AllReportListComponent } from './all-reports/all-report-list/all-report-list.component';\r\nimport { OrganizationListComponent } from './organization/organization-list/organization-list.component';\r\nimport { AllUserListComponent } from './all-users/all-user-list/all-user-list.component';\r\nimport { AllUsersComponent } from './all-users/all-users.component';\r\nimport { AdminGuard } from './../auth/admin-guard.service';\r\nimport { AdminReportDetailsComponent } from './admin-report-details/admin-report-details.component';\r\nimport { UserDetailsComponent } from './user-details/user-details.component';\r\nimport { OrganizationDetailsComponent } from './organization-details/organization-details.component';\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule, CanActivate } from '@angular/router';\r\nimport { AdminComponent } from './admin.component';\r\nimport { OrganizationComponent } from './organization/organization.component';\r\nimport { AllReportsComponent } from './all-reports/all-reports.component';\r\n\r\nconst adminRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AdminComponent,\r\n    canActivate: [AdminGuard],\r\n    children: [\r\n      {\r\n        path: 'o',\r\n        component: OrganizationComponent,\r\n        children: [\r\n          { path: '', redirectTo: 'list' },\r\n          { path: 'list', component: OrganizationListComponent },\r\n          { path: ':id', component: OrganizationDetailsComponent },\r\n          { path: ':id/u/:userID', component: UserDetailsComponent },\r\n          { path: ':id/r/:reportID', component: AdminReportDetailsComponent },\r\n          {\r\n            path: ':id/u/:userID/r/:reportID',\r\n            component: AdminReportDetailsComponent\r\n          },\r\n        ]\r\n      },\r\n      {\r\n        path: 'users',\r\n        component: AllUsersComponent,\r\n        children: [\r\n          { path: '', redirectTo: 'list' },\r\n          { path: 'list', component: AllUserListComponent },\r\n          {\r\n            path: 'u/:userID',\r\n            component: UserDetailsComponent\r\n          },\r\n          {\r\n            path: 'u/:userID/r/:reportID',\r\n            component: AdminReportDetailsComponent\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        path: 'reports',\r\n        component: AllReportsComponent,\r\n        children: [\r\n          { path: '', redirectTo: 'list' },\r\n          { path: 'list', component: AllReportListComponent },\r\n          { path: 'r/:reportID', component: AdminReportDetailsComponent }\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(adminRoutes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AdminRoutingModule {}\r\n","module.exports = \"<div class=\\\"main\\\">\\n\\n  <!-- Side Navigation Menu-->\\n  <div class=\\\"side-nav\\\" [ngClass]=\\\"{'side-nav-minimized': minimized}\\\">\\n    <!-- Company Title and Logo goes Here-->\\n    <div class=\\\"company\\\">\\n      <div class=\\\"icon-container\\\">\\n        <div class=\\\"icon\\\">\\n          <img src=\\\"../../assets/company-icon.png\\\" alt=\\\"Smiley face\\\">\\n        </div>\\n      </div>\\n      <span class=\\\"name\\\"> Company </span>\\n    </div>\\n\\n    <!-- Side Navigation Menus -->\\n    <div class=\\\"menu-container\\\">\\n\\n      <!-- Menu # 1 -->\\n      <div class=\\\"menu\\\" routerLink=\\\"o\\\" routerLinkActive=\\\"menu-active\\\" >\\n        <i class=\\\"material-icons\\\">\\n          business\\n        </i>\\n        <span class=\\\"text\\\">\\n          Organizations\\n        </span>\\n      </div>\\n\\n      <!-- Menu # 2 -->\\n      <div class=\\\"menu\\\" routerLink=\\\"reports\\\" routerLinkActive=\\\"menu-active\\\">\\n        <i class=\\\"material-icons\\\">\\n          assessment\\n        </i>\\n        <span class=\\\"text\\\">\\n          Reports\\n        </span>\\n      </div>\\n\\n      <!-- Menu # 3 -->\\n      <div class=\\\"menu\\\" routerLink=\\\"users\\\" routerLinkActive=\\\"menu-active\\\">\\n        <i class=\\\"material-icons\\\">\\n          person_outline\\n        </i>\\n        <span class=\\\"text\\\">\\n          Users\\n        </span>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"right-content\\\" [ngClass]=\\\"{'right-content-minimized': minimized}\\\">\\n    <!-- Top Toolbar -->\\n    <mat-toolbar class=\\\"toolbar\\\">\\n      <button mat-button class=\\\"menu-icon\\\" (click)=\\\"toggleMenu()\\\">\\n        <i class=\\\"material-icons \\\">\\n          menu\\n        </i>\\n      </button>\\n    </mat-toolbar>\\n\\n    <!-- Main Content -->\\n    <div class=\\\"main-content\\\">\\n      <router-outlet></router-outlet>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"/* Tool bar top colour */\\n/* Main content colour */\\n/*************** SIDE NAVIGATION VARIABLES *******************/\\n/* Side nav color */\\n/********* ORGANIZATION DETAILS VARIABLES **********/\\n/*********** LIST CARD VARIABLES  ***********/\\n/********* BREADCRUMBS STYLING ******/\\n/******* FORMS STYLING & FILTERS ******/\\n/***** Filter Card ***/\\n.side-nav {\\n  width: 190px;\\n  height: 100%;\\n  background-color: #323232;\\n  position: fixed;\\n  transition: padding-left 0.5s;\\n  /* For Safari 3.1 to 6.0 */\\n  transition: width 0.5s;\\n  overflow: hidden;\\n  z-index: 40; }\\n.company {\\n  height: 64px; }\\n.company .icon-container {\\n    height: 64px;\\n    width: 64px;\\n    position: relative; }\\n.company .icon-container img {\\n      height: 45px;\\n      width: 45px;\\n      position: absolute;\\n      right: 0;\\n      left: 0;\\n      top: 0;\\n      bottom: 0;\\n      margin: auto auto; }\\n.company .name {\\n    position: absolute;\\n    top: 22px;\\n    font-size: 20px;\\n    font-weight: bold;\\n    color: white;\\n    left: 70px; }\\n.menu-container {\\n  position: relative; }\\n.menu-container .menu-active {\\n    background-color: #555555; }\\n.menu-container .menu:hover {\\n    cursor: pointer; }\\n.menu-container .menu {\\n    height: 50px;\\n    color: white; }\\n.menu-container .menu .material-icons {\\n      font-size: 30px;\\n      position: relative;\\n      top: 11px;\\n      left: 16px; }\\n.menu-container .menu .text {\\n      position: absolute;\\n      font-size: 17px;\\n      left: 64px;\\n      margin-top: 17px; }\\n.side-nav-minimized {\\n  width: 64px !important; }\\n.toolbar {\\n  background-color: #616161;\\n  color: white;\\n  z-index: 20;\\n  position: fixed; }\\n.toolbar .menu-icon {\\n    min-width: unset;\\n    padding: 0; }\\n.toolbar .menu-icon i {\\n      font-size: 2.5em; }\\n.right-content {\\n  margin-left: 190px;\\n  transition: margin-left 0.5s; }\\n.main-content {\\n  background-color: #f5f5f5;\\n  min-height: calc(100vh - 64px);\\n  padding-top: 64px;\\n  height: 100%;\\n  height: auto; }\\n.right-content-minimized {\\n  margin-left: 64px !important; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.scss']\n})\nexport class AdminComponent implements OnInit {\n  minimized = false;\n  constructor(private route: Router) { }\n\n  ngOnInit() {\n    this.route.navigate(['admin/o']);\n  }\n\n\n  toggleMenu() {\n    this.minimized = !this.minimized;\n    console.log('toggled');\n  }\n\n}\n","import { ReportListPipe } from './../shared/pipes/report-list.pipe';\r\nimport { SearchNamePipe } from './../shared/pipes/search-name.pipe';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AdminComponent } from './admin.component';\r\nimport { OrganizationListComponent } from './organization/organization-list/organization-list.component';\r\nimport { AngularMaterialModule } from '../../angular-material/angular-material.module';\r\nimport { AdminRoutingModule } from './admin-routing.module';\r\nimport { OrganizationDetailsComponent } from './organization-details/organization-details.component';\r\nimport { OrganizationComponent } from './organization/organization.component';\r\nimport { UserDetailsComponent } from './user-details/user-details.component';\r\nimport { AdminReportDetailsComponent } from './admin-report-details/admin-report-details.component';\r\nimport { UserListComponent } from '../shared/common-view/user-list/user-list.component';\r\nimport { ReportListComponent } from '../shared/common-view/report-list/report-list.component';\r\nimport { AllUsersComponent } from './all-users/all-users.component';\r\nimport { AllReportsComponent } from './all-reports/all-reports.component';\r\nimport { AllUserListComponent } from './all-users/all-user-list/all-user-list.component';\r\nimport { AllReportListComponent } from './all-reports/all-report-list/all-report-list.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { PaginationPipe } from '../shared/pipes/pagination.pipe';\r\nimport { OrgListPipe } from '../shared/pipes/org-list.pipe';\r\nimport { UserListPipe } from '../shared/pipes/user-list.pipe';\r\nimport { DataRulesListPipe } from '../shared/pipes/datarules-list.pipe';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AdminComponent,\r\n    OrganizationListComponent,\r\n    OrganizationDetailsComponent,\r\n    OrganizationComponent,\r\n    UserDetailsComponent,\r\n    AdminReportDetailsComponent,\r\n    UserListComponent,\r\n    ReportListComponent,\r\n    AllUsersComponent,\r\n    AllReportsComponent,\r\n    AllUserListComponent,\r\n    AllReportListComponent,\r\n    SearchNamePipe,\r\n    PaginationPipe,\r\n    OrgListPipe,\r\n    ReportListPipe,\r\n    UserListPipe,\r\n    DataRulesListPipe\r\n\r\n\r\n  ],\r\n  imports: [CommonModule, AdminRoutingModule, AngularMaterialModule, FormsModule, ReactiveFormsModule]\r\n})\r\nexport class AdminModule {}\r\n","module.exports = \"<div class=\\\"breadcrumb-container\\\">\\n    <div class=\\\"breadcrumb\\\"> <span class=\\\"active\\\"><i class=\\\"material-icons\\\">\\n        assessment </i> Report List</span></div>\\n  </div>\\n\\n  <div class=\\\"main-content-view\\\">\\n      <app-report-list [reports] = \\\"reports\\\" (reportID)=\\\"goToReport($event)\\\" style=\\\"display:flex; width: 100%; margin-bottom: 10px;\\\"></app-report-list>\\n\\n  </div>\\n\"","module.exports = \"\"","import { ReportService } from './../../../shared/services/report.service';\nimport { Component, OnInit } from '@angular/core';\nimport * as Filter from '../../../shared/view-models/filter.viewmodel';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport * as ReportViewModel from '../../../shared/view-models/report.viewmodel';\n@Component({\n  selector: 'app-all-report-list',\n  templateUrl: './all-report-list.component.html',\n  styleUrls: ['./all-report-list.component.scss']\n})\nexport class AllReportListComponent implements OnInit {\n  constructor(private route: ActivatedRoute, private router: Router, private reportService: ReportService) {}\n  reports: ReportViewModel.SimpleReport[];\n  async ngOnInit() {\n    try {\n      this.reports = await this.reportService.getReportByOrganization('orgID');\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  goToReport(reportID) {\n    this.router.navigate(['/admin/reports/r', reportID], { relativeTo: this.route });\n  }\n}\n","module.exports = \"<router-outlet></router-outlet>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-all-reports',\n  templateUrl: './all-reports.component.html',\n  styleUrls: ['./all-reports.component.scss']\n})\nexport class AllReportsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"breadcrumb-container\\\">\\n  <div class=\\\"breadcrumb\\\"> <span class=\\\"active\\\"> <i class=\\\"material-icons\\\">\\n        person_outline </i> User List</span></div>\\n</div>\\n\\n<div class=\\\"main-content-view\\\">\\n  <app-user-list [users]=\\\"users\\\" (userID)=\\\"goToUser($event)\\\" style=\\\"display:flex; width: 100%; margin-bottom: 10px;\\\"></app-user-list>\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { UserService } from '../../../shared/services/user.service';\nimport * as UserViewModel from '../../../shared/view-models/user.viewmodel';\n\n@Component({\n  selector: 'app-all-user-list',\n  templateUrl: './all-user-list.component.html',\n  styleUrls: ['./all-user-list.component.scss']\n})\nexport class AllUserListComponent implements OnInit {\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private userService: UserService\n  ) {}\n\n  users: UserViewModel.SimpleUserView[];\n  async ngOnInit() {\n    try {\n      this.users = await this.userService.getUsersByOrganization('All');\n    } catch (error) {\n      console.log('error');\n    }\n  }\n\n  goToUser(userId) {\n    this.router.navigate(['/admin/users/u', userId], {\n      relativeTo: this.route\n    });\n  }\n}\n","module.exports = \"<router-outlet></router-outlet>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport * as Filters from '../../shared/view-models/filter.viewmodel';\nimport { Router, ActivatedRoute } from '@angular/router';\n@Component({\n  selector: 'app-all-users',\n  templateUrl: './all-users.component.html',\n  styleUrls: ['./all-users.component.scss']\n})\nexport class AllUsersComponent implements OnInit {\n  constructor(private router: Router, private route: ActivatedRoute) {}\n\n  filters: Filters.UserFilter;\n\n  ngOnInit() {\n    this.filters = {\n      name: '',\n      organizationID: 'ALL',\n      role: '',\n      sort: ''\n    };\n  }\n\n  goToUser(userId) {\n    this.router.navigate(['./u', userId], { relativeTo: this.route });\n  }\n}\n","module.exports = \"<div *ngIf=\\\"organization != null\\\">\\r\\n  <div class=\\\"breadcrumb-container\\\">\\r\\n    <div> <span routerLink=\\\"../\\\"><i class=\\\"material-icons\\\"> business </i> Organization List </span> &nbsp;&nbsp; <i class=\\\"material-icons arrow\\\">\\r\\n        keyboard_arrow_right </i> <i style=\\\"margin-left: -14px\\\" class=\\\"material-icons arrow\\\"> keyboard_arrow_right </i>&nbsp;&nbsp; <span\\r\\n        class=\\\"active\\\">{{organization.name}}\\r\\n      </span> </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"main-content-view\\\">\\r\\n    <div class=\\\"full-content-view\\\">\\r\\n      <div class=\\\"details\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n          <div class=\\\"container\\\">\\r\\n            <h2 class=\\\"title\\\">{{organization.name}}</h2>\\r\\n            <h4 class=\\\"secondary\\\"><span *ngFor=\\\"let category of organization.categories\\\">{{category}} &nbsp; </span> </h4>\\r\\n            <p class=\\\"stats\\\">\\r\\n              <span class=\\\"left\\\"><i class=\\\"material-icons\\\">\\r\\n                  assessment\\r\\n                </i> {{organization.reportsCount}} Reports</span>\\r\\n              <span class=\\\"middle\\\"> <i class=\\\"material-icons\\\">\\r\\n                  person_outline\\r\\n                </i>{{organization.usersCount}} Users</span>\\r\\n              <span class=\\\"right\\\"> <i class=\\\"material-icons\\\">\\r\\n                  dns\\r\\n                </i> {{organization.datarulesCount}} Data Rules</span>\\r\\n            </p>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"tabs\\\">\\r\\n          <mat-tab-group (selectedIndexChange)=\\\"selected($event)\\\">\\r\\n            <mat-tab label=\\\"Reports\\\">\\r\\n              <app-report-list *ngIf=\\\"selectedTab === 0\\\" [reports]=\\\"reports\\\" (reportID)=\\\"goToReport($event)\\\" style=\\\"display:flex; width: 100%; margin-bottom: 10px;\\\"></app-report-list>\\r\\n            </mat-tab>\\r\\n            <mat-tab label=\\\"Users\\\">\\r\\n              <app-user-list *ngIf=\\\"selectedTab === 1\\\" [users]=\\\"users\\\" (userID)=\\\"goToUser($event)\\\" style=\\\"display:flex; width: 100%; margin-bottom: 10px;\\\"></app-user-list>\\r\\n            </mat-tab>\\r\\n            <mat-tab label=\\\"Data Rules\\\">\\r\\n              <div class=\\\"data-rules-section\\\" *ngIf=\\\"selectedTab === 2\\\">\\r\\n                <div class=\\\"left-main-content-view\\\">\\r\\n                  <mat-accordion *ngFor=\\\"let rule of rules | datarulesList : searchName : selectedDataSource : sortValue : pagination.currentPage; let i = index\\\">\\r\\n                    <mat-expansion-panel class=\\\"data-rules-card\\\">\\r\\n                      <mat-expansion-panel-header>\\r\\n                        <mat-panel-title>\\r\\n                          <h4 class=\\\"title\\\">{{rule.name}}</h4><br>\\r\\n                        </mat-panel-title>\\r\\n                        <mat-panel-description>\\r\\n                          <h5>{{rule.datasource.name}}</h5>\\r\\n                        </mat-panel-description>\\r\\n                      </mat-expansion-panel-header>\\r\\n                      <hr>\\r\\n                      <p>Created At: {{rule.date | date }}</p>\\r\\n                      <p>Identifier: {{rule.identifier}}</p>\\r\\n                      <p>Condition: {{rule.condition}}</p>\\r\\n                      <p>Token: {{rule.token}}</p>\\r\\n                      <div class=\\\"buttons\\\">\\r\\n                        <button mat-button color=\\\"danger\\\">Delete</button>\\r\\n                        <button mat-button color=\\\"primary\\\">Edit</button>\\r\\n                      </div>\\r\\n                    </mat-expansion-panel>\\r\\n                    <br>\\r\\n                  </mat-accordion>\\r\\n                </div>\\r\\n                <div class=\\\"right-main-content-view\\\">\\r\\n                  <!-- Filters -->\\r\\n                  <div class=\\\"filter\\\" >\\r\\n                      <form [formGroup]=\\\"filterForm\\\" (ngSubmit)=\\\"onSearch()\\\">\\r\\n                        <button class=\\\"reset\\\" mat-stroked-button (click)=\\\"searchFormReset()\\\">RESET</button>\\r\\n                        <p class=\\\"title\\\"> Filter by</p>\\r\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"search\\\">\\r\\n                          <mat-label class=\\\"label-color\\\">Name</mat-label>\\r\\n                          <input matInput type=\\\"text\\\" placeholder=\\\"Search Name\\\" formControlName=\\\"name\\\">\\r\\n                        </mat-form-field>\\r\\n                        <p class=\\\"title\\\" > Data Source</p>\\r\\n                        <mat-form-field  appearance=\\\"outline\\\"  class=\\\"select\\\">\\r\\n                          <mat-select  formControlName=\\\"selectedDataSource\\\">\\r\\n                            <mat-option value=\\\"All\\\" >All</mat-option>\\r\\n                            <mat-option *ngFor=\\\"let datasource of dataSources\\\" value=\\\"{{datasource.id}}\\\">{{datasource.name}}</mat-option>\\r\\n                          </mat-select>\\r\\n                        </mat-form-field>\\r\\n                        <br>\\r\\n                        <button mat-raised-button class=\\\"search\\\" type=\\\"submit\\\">Search</button>\\r\\n                      </form>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"sort\\\">\\r\\n                      <p class=\\\"title\\\"> Sort By</p>\\r\\n                      <mat-radio-group class=\\\"example-radio-group\\\" [(ngModel)]=\\\"sortValue\\\">\\r\\n                        <mat-radio-button *ngFor=\\\"let sort of sorts\\\" value=\\\"{{sort}}\\\" (click)=\\\"changeSort(sort)\\\" class=\\\"radio\\\">\\r\\n                          {{sort}}\\r\\n                        </mat-radio-button>\\r\\n                      </mat-radio-group>\\r\\n                      <p *ngIf=\\\"this.pagination\\\"> {{this.pagination.currentPage}}/{{this.pagination.totalPages}}</p>\\r\\n                      <button mat-raised-button (click)=\\\"previousPage()\\\">Previous Page</button>\\r\\n                      <button mat-raised-button (click)=\\\"nextPage()\\\">Next Page</button>\\r\\n\\r\\n                    </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </mat-tab>\\r\\n          </mat-tab-group>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"organization == null\\\">\\r\\n  <mat-spinner></mat-spinner>\\r\\n</div>\\r\\n\"","module.exports = \"/* Tool bar top colour */\\n/* Main content colour */\\n/*************** SIDE NAVIGATION VARIABLES *******************/\\n/* Side nav color */\\n/********* ORGANIZATION DETAILS VARIABLES **********/\\n/*********** LIST CARD VARIABLES  ***********/\\n/********* BREADCRUMBS STYLING ******/\\n/******* FORMS STYLING & FILTERS ******/\\n/***** Filter Card ***/\\n.tabs {\\n  background-color: white;\\n  margin: 20px 0;\\n  box-shadow: 2px 3px 4px rgba(101, 101, 101, 0.5); }\\n::ng-deep .tabs .mat-tab-header {\\n  box-shadow: 0 1px 4px rgba(101, 101, 101, 0.7) !important;\\n  border-bottom: none !important; }\\n::ng-deep .tabs .mat-tab-label {\\n  color: #3E3E3E;\\n  opacity: 1;\\n  font-size: 17px; }\\n::ng-deep .tabs .mat-tab-label-active {\\n  color: #0865ee; }\\n::ng-deep .tabs .mat-tab-body {\\n  padding: 10px; }\\n::ng-deep .mat-tab-group.mat-primary .mat-ink-bar,\\n::ng-deep .mat-tab-nav-bar.mat-primary .mat-ink-bar {\\n  background: #0865ee;\\n  height: 3px; }\\n.data-rules-card {\\n  border: 1px solid #D7D7D7;\\n  border-radius: 5px; }\\n.mat-tab {\\n  padding: 5px; }\\n.data-rules-section {\\n  max-width: 1080px;\\n  margin-bottom: 10px;\\n  display: flex; }\\n.data-rules-section .left-main-content-view {\\n    margin-top: 10px; }\\n.data-rules-section .left-main-content-view p {\\n      margin: 0;\\n      color: #3e3e3e;\\n      font-weight: 500; }\\n.data-rules-section .left-main-content-view .buttons {\\n      text-align: right; }\\n.data-rules-section .left-main-content-view hr {\\n      border-top: 1px solid #b4b4b4;\\n      margin-top: -10px; }\\n.data-rules-section .left-main-content-view .title {\\n      color: #E7554B; }\\n.data-rules-section .left-main-content-view .mat-expansion-panel-content {\\n      padding-top: 5px;\\n      border-top: 1px solid rgba(0, 0, 0, 0.12); }\\n.data-rules-section .left-main-content-view .mat-expansion-panel {\\n      border-radius: 3px; }\\n\"","import { DatarulesService } from './../../shared/services/datarules.service';\r\nimport { OrganizationService } from './../../shared/services/organization.service';\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport * as OrganizationViewModel from '../../shared/view-models/organization.viewmodel';\r\nimport * as Filter from '../../shared/view-models/filter.viewmodel';\r\nimport * as DataViewModel from '../../shared/view-models/data.viewmodel';\r\nimport { ReportService } from '../../shared/services/report.service';\r\nimport * as ReportViewModel from '../../shared/view-models/report.viewmodel';\r\nimport { UserService } from '../../shared/services/user.service';\r\nimport * as UserViewModel from '../../shared/view-models/user.viewmodel';\r\nimport { PaginationService } from '../../shared/services/pagination.service';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-organization-details',\r\n  templateUrl: './organization-details.component.html',\r\n  styleUrls: ['./organization-details.component.scss']\r\n})\r\nexport class OrganizationDetailsComponent implements OnInit, OnDestroy {\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private organizationService: OrganizationService,\r\n    private dataruleService: DatarulesService,\r\n    private reportService: ReportService,\r\n    private userService: UserService,\r\n    private paginationService: PaginationService\r\n  ) {}\r\n  // Subscription for route\r\n  sub: any;\r\n  // Organization Object\r\n  organization: OrganizationViewModel.OrganizationDetails;\r\n  // Organization ID\r\n  organizationID: string;\r\n  // reports\r\n  reports: ReportViewModel.SimpleReport[];\r\n  // rules array\r\n  rules: DataViewModel.DataRule[];\r\n  // users array\r\n  users: UserViewModel.SimpleUserView[];\r\n  selectedTab = 0;\r\n  dataSources: DataViewModel.DataSource[];\r\n  filterForm = new FormGroup({\r\n    name: new FormControl(''),\r\n    selectedDataSource: new FormControl('All')\r\n  });\r\n  formInitialize = false;\r\n  sorts = ['Latest', 'Alphabetical'];\r\n  sortValue = this.sorts[0];\r\n  searchName;\r\n  pageSubscription: Subscription;\r\n  pagination;\r\n  selectedDataSource = 'All';\r\n\r\n  async ngOnInit() {\r\n    try {\r\n      this.sub = this.route.params.subscribe(params => {\r\n        this.organizationID = params['id'];\r\n      });\r\n      // gets organization info\r\n      this.organization = await this.organizationService.getOrganizationById(\r\n        this.organizationID\r\n      );\r\n      // gets reports for this organization\r\n      this.reports = await this.reportService.getReportByOrganization('orgID');\r\n      // gets data rules for this organization\r\n      this.rules = await this.dataruleService.getDataRules(this.organizationID);\r\n      // gets users for this organization\r\n      this.users = await this.userService.getUsersByOrganization('orgID');\r\n      // get all data sources for this organization\r\n      this.dataSources = await this.dataruleService.getAllDataSourceForOrganization(\r\n        'orgID'\r\n      );\r\n      this.pageSubscription = this.paginationService.paginationChanged.subscribe(\r\n        pagination => {\r\n          this.pagination = pagination;\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  selected(event) {\r\n    this.selectedTab = event;\r\n    if (event === 2) {\r\n      this.paginationService.resetPage();\r\n    }\r\n  }\r\n  ngOnDestroy() {\r\n    this.sub.unsubscribe();\r\n    if (this.pageSubscription) {\r\n      this.pageSubscription.unsubscribe();\r\n\r\n    }\r\n  }\r\n\r\n  goToUser(userId) {\r\n    this.router.navigate(['./u', userId], { relativeTo: this.route });\r\n  }\r\n\r\n  goToReport(reportID) {\r\n    this.router.navigate(['./r', reportID], { relativeTo: this.route });\r\n  }\r\n\r\n  changeSort(sort) {\r\n    this.paginationService.resetPage();\r\n    this.sortValue = sort;\r\n  }\r\n\r\n  onSearch() {\r\n    console.log(this.filterForm.value);\r\n    this.paginationService.resetPage();\r\n    const temp = this.filterForm.value;\r\n    this.searchName = temp.name;\r\n    this.selectedDataSource = temp.selectedDataSource;\r\n  }\r\n\r\n  searchFormReset() {\r\n    this.filterForm.reset();\r\n    this.paginationService.resetPage();\r\n    this.filterForm.patchValue({ selectedDataSource: 'All' });\r\n  }\r\n\r\n    // Pagination Methods\r\n    nextPage() {\r\n      if (this.pagination.currentPage < this.pagination.totalPages) {\r\n        this.paginationService.changePage(this.pagination.currentPage + 1);\r\n      }\r\n    }\r\n    // Pagination Methods\r\n    previousPage() {\r\n      if (this.pagination.currentPage > 1) {\r\n        this.paginationService.changePage(this.pagination.currentPage - 1);\r\n      }\r\n    }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"breadcrumb-container\\\">\\r\\n  <div class=\\\"breadcrumb\\\"> <span class=\\\"active\\\"> <i class=\\\"material-icons\\\"> business </i> Organization List </span></div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"main-content-view\\\">\\r\\n  <div class=\\\"left-main-content-view\\\">\\r\\n    <div class=\\\"list\\\" *ngIf=\\\"pagination\\\">\\r\\n      <div  *ngFor=\\\"let organization of organizations  |   orgList:  search: selectedCategories : sortValue: pagination.currentPage \\\" class=\\\"card\\\">\\r\\n        <div class=\\\"container\\\" (click)=\\\"goToDetails(organization.id)\\\">\\r\\n          <h2 class=\\\"title\\\">{{organization.name}}</h2>\\r\\n          <h4 class=\\\"secondary\\\"><span *ngFor=\\\"let category of organization.categories, let i = index\\\">{{category}}<span *ngIf=\\\"i < organization.categories.length -1\\\">,&nbsp;&nbsp;</span>\\r\\n            </span> </h4>\\r\\n          <p class=\\\"stats\\\">\\r\\n            <span class=\\\"left\\\"><i class=\\\"material-icons\\\">\\r\\n                assessment\\r\\n              </i> {{organization.reportsCount}} Reports</span>\\r\\n            <span class=\\\"middle\\\"> <i class=\\\"material-icons\\\">\\r\\n                person_outline\\r\\n              </i>{{organization.usersCount}} Users</span>\\r\\n            <span class=\\\"right\\\"> <i class=\\\"material-icons\\\">\\r\\n                dns\\r\\n              </i> {{organization.datarulesCount}} Data Rules</span>\\r\\n          </p>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"right-main-content-view\\\">\\r\\n    <div class=\\\"filter\\\" style=\\\"margin-top: 13px\\\">\\r\\n      <form [formGroup]=\\\"filterForm\\\" (ngSubmit)=\\\"onSearch()\\\">\\r\\n        <button class=\\\"reset\\\" mat-stroked-button (click)=\\\"searchFormReset()\\\">RESET</button>\\r\\n        <p class=\\\"title\\\"> Filter by</p>\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"search\\\">\\r\\n          <mat-label class=\\\"label-color\\\">Name</mat-label>\\r\\n          <input matInput type=\\\"text\\\" placeholder=\\\"Search Name\\\" formControlName=\\\"name\\\">\\r\\n        </mat-form-field>\\r\\n        <p class=\\\"title\\\"> Company Type</p>\\r\\n        <div class=\\\"checkbox\\\" *ngFor=\\\"let category of categories\\\">\\r\\n          <mat-checkbox value=\\\"{{category}}\\\" formControlName=\\\"{{category}}\\\">{{category}}</mat-checkbox>\\r\\n        </div>\\r\\n        <br>\\r\\n        <button mat-raised-button class=\\\"search\\\" type=\\\"submit\\\">Search</button>\\r\\n      </form>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"sort\\\">\\r\\n      <p class=\\\"title\\\"> Sort By</p>\\r\\n      <mat-radio-group class=\\\"example-radio-group\\\" [(ngModel)]=\\\"sortValue\\\">\\r\\n        <mat-radio-button *ngFor=\\\"let sort of sorts\\\" value=\\\"{{sort}}\\\" (click)=\\\"changeSort(sort)\\\" class=\\\"radio\\\">\\r\\n          {{sort}}\\r\\n        </mat-radio-button>\\r\\n      </mat-radio-group>\\r\\n      <p *ngIf=\\\"this.pagination\\\"> {{this.pagination.currentPage}}/{{this.pagination.totalPages}}</p>\\r\\n      <button mat-raised-button (click)=\\\"previousPage()\\\">Previous Page</button>\\r\\n      <button mat-raised-button (click)=\\\"nextPage()\\\">Next Page</button>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"\"","import { PaginationService } from './../../../shared/services/pagination.service';\r\nimport { OrganizationService } from './../../../shared/services/organization.service';\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport * as OrganizationViewModel from '../../../shared/view-models/organization.viewmodel';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-organization-list',\r\n  templateUrl: './organization-list.component.html',\r\n  styleUrls: ['./organization-list.component.scss']\r\n})\r\nexport class OrganizationListComponent implements OnInit, OnDestroy {\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private organizationService: OrganizationService,\r\n    private paginationService: PaginationService\r\n  ) {}\r\n  sorts = ['Alphabetical', 'Most Reports', 'Most Users', 'Most Data Rules'];\r\n  // Array of all organizations\r\n  organizations: OrganizationViewModel.OrganizationDetails[];\r\n  searchValue = '';\r\n  // All categories\r\n  sortValue = this.sorts[0];\r\n  categories: string[] = [];\r\n  search = '';\r\n  selectedCategories: string[] = [];\r\n  viewChange = false;\r\n\r\n  pagination;\r\n  pageSubscription: Subscription;\r\n\r\n  // form group for filter\r\n  filterForm = new FormGroup({\r\n    name: new FormControl('')\r\n  });\r\n\r\n  async ngOnInit() {\r\n    // Gets all organizations OnInit\r\n    try {\r\n      this.organizations = await this.organizationService.getAllOrganizations();\r\n      await this.getAllCategories(this.organizations);\r\n      for (const category of this.categories) {\r\n        this.filterForm.addControl(category, new FormControl(''));\r\n      }\r\n      this.pageSubscription = this.paginationService.paginationChanged.subscribe((pagination) => {\r\n        this.pagination = pagination;\r\n      });\r\n      this.paginationService.getPagination();\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  // Go to organization details\r\n  goToDetails(id) {\r\n    this.router.navigate(['../', id], { relativeTo: this.route });\r\n  }\r\n\r\n  // Get all categories with no repetition\r\n  getAllCategories(orgs: OrganizationViewModel.OrganizationDetails[]) {\r\n    orgs.forEach(org => {\r\n      org.categories.forEach(category => {\r\n        if (!this.categories.includes(category)) {\r\n          this.categories.push(category);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  // changes sort preferences\r\n  changeSort(sort) {\r\n    this.sortValue = sort;\r\n    this.paginationService.changePage(1);\r\n  }\r\n\r\n  // On Search, will search stuff\r\n  onSearch() {\r\n    this.selectedCategories = [];\r\n    console.log(this.filterForm.value);\r\n    const temp = this.filterForm.value;\r\n    for (const category of this.categories) {\r\n      if (category in temp) {\r\n        if (temp[category]) {\r\n          this.selectedCategories.push(category);\r\n        }\r\n      }\r\n    }\r\n    this.search = temp.name;\r\n    this.paginationService.changePage(1);\r\n  }\r\n\r\n  searchFormReset() {\r\n    this.filterForm.reset();\r\n  }\r\n\r\n  // Pagination Methods\r\n  nextPage() {\r\n    if (this.pagination.currentPage < this.pagination.totalPages) {\r\n      this.paginationService.changePage(this.pagination.currentPage + 1);\r\n    }\r\n  }\r\n\r\n  previousPage() {\r\n    if (this.pagination.currentPage > 1) {\r\n      this.paginationService.changePage(this.pagination.currentPage - 1);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.pageSubscription.unsubscribe();\r\n  }\r\n}\r\n","module.exports = \"<router-outlet></router-outlet>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-organization',\n  templateUrl: './organization.component.html',\n  styleUrls: ['./organization.component.scss']\n})\nexport class OrganizationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div *ngIf=\\\"organization != null && user != null\\\">\\r\\n\\r\\n  <div class=\\\"breadcrumb-container\\\">\\r\\n    <!-- Breadcrumbs for user details under user list-->\\r\\n    <div *ngIf=\\\"this.orgID === undefined\\\">\\r\\n      <div class=\\\"breadcrumb\\\"> <span routerLink=\\\"../../\\\"><i class=\\\"material-icons\\\">\\r\\n            person_outline </i> User List </span> &nbsp;&nbsp; <i class=\\\"material-icons arrow\\\"> keyboard_arrow_right </i> <i style=\\\"margin-left: -14px\\\"\\r\\n          class=\\\"material-icons arrow\\\"> keyboard_arrow_right </i>&nbsp;&nbsp; <span class=\\\"active\\\"> {{user.name}} </span> </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- Breadcrumbs for user details under organization list-->\\r\\n    <div *ngIf=\\\"this.orgID != undefined\\\">\\r\\n      <div class=\\\"breadcrumb\\\"> <span routerLink=\\\"../../../\\\"><i class=\\\"material-icons\\\">\\r\\n            business </i> Organization List </span> &nbsp;&nbsp; <i class=\\\"material-icons arrow\\\"> keyboard_arrow_right </i> <i style=\\\"margin-left: -14px\\\"\\r\\n          class=\\\"material-icons arrow\\\"> keyboard_arrow_right </i>&nbsp;&nbsp; <span routerLink=\\\"../../\\\"> {{organization.name}}</span>\\r\\n        &nbsp;&nbsp; <i class=\\\"material-icons arrow\\\"> keyboard_arrow_right </i> <i style=\\\"margin-left: -14px\\\" class=\\\"material-icons arrow\\\">\\r\\n          keyboard_arrow_right </i>&nbsp;&nbsp; <span class=\\\"active\\\"> {{user.name}} </span> </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"main-content-view\\\">\\r\\n    <div class=\\\"full-content-view\\\">\\r\\n\\r\\n\\r\\n      <div class=\\\"details\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n          <div class=\\\"container\\\">\\r\\n            <h2 class=\\\"title\\\"> {{user.name}}</h2>\\r\\n            <h4 class=\\\"secondary\\\">Viewer</h4>\\r\\n            <p class=\\\"content\\\">Email: {{user.googleId}}</p>\\r\\n            <p class=\\\"content\\\">Secondary Email: {{user.secondaryEmail }}}</p>\\r\\n            <p class=\\\"content\\\"> Accesses: <span *ngFor=\\\"let org of user.organizations\\\"> {{org.name}} </span></p>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div>\\r\\n        <h3 class=\\\"list-title\\\">Report List</h3>\\r\\n        <app-report-list style=\\\"display:flex; width: 100%;\\\" [reports]=\\\"reports\\\" (reportID)=\\\"goToReport($event)\\\"></app-report-list>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"/* Tool bar top colour */\\n/* Main content colour */\\n/*************** SIDE NAVIGATION VARIABLES *******************/\\n/* Side nav color */\\n/********* ORGANIZATION DETAILS VARIABLES **********/\\n/*********** LIST CARD VARIABLES  ***********/\\n/********* BREADCRUMBS STYLING ******/\\n/******* FORMS STYLING & FILTERS ******/\\n/***** Filter Card ***/\\n.list-title {\\n  color: #3e3e3e;\\n  margin-bottom: 5px; }\\n\"","import { ReportService} from './../../shared/services/report.service';\r\nimport { OrganizationService } from './../../shared/services/organization.service';\r\nimport { UserService } from './../../shared/services/user.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport * as UserViewModel from '../../shared/view-models/user.viewmodel';\r\nimport * as OrganizationViewModel from '../../shared/view-models/organization.viewmodel';\r\nimport * as ReportViewModel from '../../shared/view-models/report.viewmodel';\r\n\r\n\r\n@Component({\r\n  selector: 'app-user-details',\r\n  templateUrl: './user-details.component.html',\r\n  styleUrls: ['./user-details.component.scss']\r\n})\r\nexport class UserDetailsComponent implements OnInit {\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private userService: UserService,\r\n    private organizationService: OrganizationService,\r\n    private reportService: ReportService\r\n  ) {}\r\n\r\n  sub: any;\r\n  userID: string;\r\n  orgID: string;\r\n  reports: ReportViewModel.SimpleReport[];\r\n\r\n  organization: OrganizationViewModel.SimpleOrganization; // Name of the org from previous view for breadcrumbs purposes\r\n  user: UserViewModel.User;\r\n\r\n async ngOnInit() {\r\n   try{\r\n    this.sub =  this.route.params.subscribe(params => {\r\n      this.orgID = params['id'];\r\n      this.userID =  params['userID'];\r\n    });\r\n    this.organization = await this.organizationService.getOrganizationById(this.orgID);\r\n    this.user = await this.userService.getUser(this.userID);\r\n    this.reports = await this.reportService.getReportByOrganizations(['orgIDs']);\r\n   } catch (error) {\r\n     console.log(error);\r\n   }\r\n\r\n  }\r\n\r\n  // Gets the name of the organization for breadcrumbs & user acceses\r\n  private getOrganization(id) {\r\n    return this.organizationService.getOrganizationById(id);\r\n  }\r\n\r\n   // Gets the user details\r\n  private getUserDetails(id) {\r\n    return this.userService.getUser(id);\r\n  }\r\n\r\n\r\n  public goToReport(reportID) {\r\n    this.router.navigate(['./r', reportID], { relativeTo: this.route });\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"<div class=\\\"left-main-content-view\\\" >\\r\\n  <div *ngIf=\\\"reports != null\\\">\\r\\n    <div class=\\\"list\\\">\\r\\n      <div *ngFor=\\\"let report of reports | reportList: searchName: selectedOrganization : sortValue :  pagination.currentPage\\\" class=\\\"card\\\">\\r\\n        <div class=\\\"container\\\" (click)=\\\"reportClicked(report.id)\\\">\\r\\n          <h4 class=\\\"title\\\"><strong> {{report.name}}</strong></h4>\\r\\n          <p class=\\\"secondary\\\">{{report.organization.name}}</p>\\r\\n          <p class=\\\"content\\\"> {{report.date | date}} </p>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"right-main-content-view\\\" *ngIf=\\\"formInitialize\\\">\\r\\n  <div class=\\\"filter\\\" >\\r\\n    <form [formGroup]=\\\"filterForm\\\" (ngSubmit)=\\\"onSearch()\\\">\\r\\n      <button class=\\\"reset\\\" mat-stroked-button (click)=\\\"searchFormReset()\\\">RESET</button>\\r\\n      <p class=\\\"title\\\"> Filter by</p>\\r\\n      <mat-form-field appearance=\\\"outline\\\" class=\\\"search\\\">\\r\\n        <mat-label class=\\\"label-color\\\">Name</mat-label>\\r\\n        <input matInput type=\\\"text\\\" placeholder=\\\"Search Name\\\" formControlName=\\\"name\\\">\\r\\n      </mat-form-field>\\r\\n      <p class=\\\"title\\\" *ngIf=\\\"!organizationID\\\"> Organization</p>\\r\\n      <mat-form-field  appearance=\\\"outline\\\"  class=\\\"select\\\"  *ngIf=\\\"!organizationID\\\">\\r\\n        <mat-select  formControlName=\\\"selectedOrganization\\\">\\r\\n          <mat-option value=\\\"All\\\" >All</mat-option>\\r\\n          <mat-option *ngFor=\\\"let organization of organizations\\\" value=\\\"{{organization.id}}\\\">{{organization.name}}</mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n      <br>\\r\\n      <button mat-raised-button class=\\\"search\\\" type=\\\"submit\\\">Search</button>\\r\\n    </form>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"sort\\\">\\r\\n    <p class=\\\"title\\\"> Sort By</p>\\r\\n    <mat-radio-group class=\\\"example-radio-group\\\" [(ngModel)]=\\\"sortValue\\\">\\r\\n      <mat-radio-button *ngFor=\\\"let sort of sorts\\\" value=\\\"{{sort}}\\\" (click)=\\\"changeSort(sort)\\\" class=\\\"radio\\\">\\r\\n        {{sort}}\\r\\n      </mat-radio-button>\\r\\n    </mat-radio-group>\\r\\n    <p *ngIf=\\\"this.pagination\\\"> {{this.pagination.currentPage}}/{{this.pagination.totalPages}}</p>\\r\\n    <button mat-raised-button (click)=\\\"previousPage()\\\">Previous Page</button>\\r\\n    <button mat-raised-button (click)=\\\"nextPage()\\\">Next Page</button>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"\"","import { ActivatedRoute } from '@angular/router';\r\nimport { OrganizationService } from './../../services/organization.service';\r\nimport { Subscription } from 'rxjs';\r\nimport {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  OnDestroy\r\n} from '@angular/core';\r\nimport * as ReportViewModel from '../../view-models/report.viewmodel';\r\nimport { PaginationService } from '../../services/pagination.service';\r\nimport * as OrganizationViewModel from '../../view-models/organization.viewmodel';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-report-list',\r\n  templateUrl: './report-list.component.html',\r\n  styleUrls: ['./report-list.component.scss']\r\n})\r\nexport class ReportListComponent implements OnInit, OnDestroy {\r\n  constructor(\r\n    private paginationService: PaginationService,\r\n    private organizationService: OrganizationService,\r\n    private route: ActivatedRoute\r\n  ) {}\r\n  @Input()\r\n  reports: ReportViewModel.SimpleReport[];\r\n  @Output()\r\n  reportID = new EventEmitter<string>();\r\n  sub: any;\r\n  pageSubscription: Subscription;\r\n  organizations: OrganizationViewModel.SimpleOrganization[];\r\n  pagination;\r\n  sorts = ['Latest', 'Alphabetical'];\r\n  selectedOrganization = '';\r\n  sortValue = this.sorts[0];\r\n  organizationID;\r\n  searchName;\r\n  filterForm = new FormGroup({\r\n    name: new FormControl('')\r\n  });\r\n  formInitialize = false;\r\n\r\n  async ngOnInit() {\r\n    try {\r\n      this.paginationService.resetPage();\r\n      this.sub = this.route.params.subscribe(params => {\r\n        this.organizationID = params['id'];\r\n      });\r\n      this.pageSubscription = this.paginationService.paginationChanged.subscribe(\r\n        pagination => {\r\n          this.pagination = pagination;\r\n        }\r\n      );\r\n      this.paginationService.getPagination();\r\n      if (!this.organizationID) {\r\n        this.organizations = await this.organizationService.getAllOrganizationsWithNoDetails();\r\n        this.filterForm.addControl(\r\n          'selectedOrganization',\r\n          new FormControl('All')\r\n        );\r\n      }\r\n      this.formInitialize = true;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  reportClicked(id: string) {\r\n    this.reportID.emit(id);\r\n  }\r\n\r\n  changeSort(sort) {\r\n    this.paginationService.resetPage();\r\n    this.sortValue = sort;\r\n  }\r\n\r\n  onSearch() {\r\n    console.log(this.filterForm.value);\r\n    this.paginationService.resetPage();\r\n    const temp = this.filterForm.value;\r\n    this.searchName = temp.name;\r\n    this.selectedOrganization = temp.selectedOrganization;\r\n  }\r\n\r\n  searchFormReset() {\r\n    this.filterForm.reset();\r\n    this.filterForm.patchValue({ selectedOrganization: 'All' });\r\n    this.paginationService.resetPage();\r\n  }\r\n\r\n  // Pagination Methods\r\n  nextPage() {\r\n    if (this.pagination.currentPage < this.pagination.totalPages) {\r\n      this.paginationService.changePage(this.pagination.currentPage + 1);\r\n    }\r\n  }\r\n  // Pagination Methods\r\n  previousPage() {\r\n    if (this.pagination.currentPage > 1) {\r\n      this.paginationService.changePage(this.pagination.currentPage - 1);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.pageSubscription.unsubscribe();\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"left-main-content-view\\\">\\r\\n  <div *ngIf=\\\"users != null\\\">\\r\\n    <div class=\\\"list\\\">\\r\\n      <div *ngFor=\\\"let user of users | userList: searchName: selectedRole: selectedOrganization : sortValue :  pagination.currentPage\\\" class=\\\"card\\\">\\r\\n        <div class=\\\"container\\\" (click)=\\\"userClicked(user.id)\\\">\\r\\n          <h4 class=\\\"title\\\" style=\\\"font-weight: bold\\\">{{user.firstName}} {{user.lastName}}</h4>\\r\\n          <p class=\\\"secondary\\\"> Viewer : <span *ngFor=\\\"let org of user.organizations; let i = index\\\">\\r\\n              {{org.name}}<span *ngIf=\\\"i < user.organizations.length-1\\\">, </span> </span> </p>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"right-main-content-view\\\"  *ngIf=\\\"formInitialize\\\">\\r\\n  <div class=\\\"filter\\\" >\\r\\n    <form [formGroup]=\\\"filterForm\\\" (ngSubmit)=\\\"onSearch()\\\">\\r\\n      <button class=\\\"reset\\\" mat-stroked-button (click)=\\\"searchFormReset()\\\">RESET</button>\\r\\n      <p class=\\\"title\\\"> Filter by</p>\\r\\n      <mat-form-field appearance=\\\"outline\\\" class=\\\"search\\\">\\r\\n        <mat-label class=\\\"label-color\\\">Name</mat-label>\\r\\n        <input matInput type=\\\"text\\\" placeholder=\\\"Search Name\\\" formControlName=\\\"name\\\">\\r\\n      </mat-form-field>\\r\\n      <p class=\\\"title\\\" *ngIf=\\\"!organizationID\\\"> Role</p>\\r\\n      <mat-form-field  appearance=\\\"outline\\\" class=\\\"select\\\" *ngIf=\\\"!organizationID\\\">\\r\\n        <mat-select formControlName=\\\"selectedRole\\\">\\r\\n          <mat-option value=\\\"All\\\">All</mat-option>\\r\\n          <mat-option value=\\\"Admin\\\">Admin</mat-option>\\r\\n          <mat-option value=\\\"Viewer\\\">Viewer</mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n      <p class=\\\"title\\\" *ngIf=\\\"!organizationID\\\"> Organization</p>\\r\\n      <mat-form-field class=\\\"select\\\" appearance=\\\"outline\\\" *ngIf=\\\"!organizationID\\\">\\r\\n        <mat-select    formControlName=\\\"selectedOrganization\\\">\\r\\n          <mat-option value=\\\"All\\\">All</mat-option>\\r\\n          <mat-option *ngFor=\\\"let organization of organizations\\\" value=\\\"{{organization.id}}\\\">{{organization.name}}</mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n      <br>\\r\\n      <button mat-raised-button class=\\\"search\\\" type=\\\"submit\\\">Search</button>\\r\\n    </form>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"sort\\\">\\r\\n    <p class=\\\"title\\\"> Sort By</p>\\r\\n    <mat-radio-group class=\\\"example-radio-group\\\" [(ngModel)]=\\\"sortValue\\\">\\r\\n      <mat-radio-button *ngFor=\\\"let sort of sorts\\\" value=\\\"{{sort}}\\\" (click)=\\\"changeSort(sort)\\\" class=\\\"radio\\\">\\r\\n        {{sort}}\\r\\n      </mat-radio-button>\\r\\n    </mat-radio-group>\\r\\n    <p *ngIf=\\\"this.pagination\\\"> {{this.pagination.currentPage}}/{{this.pagination.totalPages}}</p>\\r\\n    <button mat-raised-button (click)=\\\"previousPage()\\\">Previous Page</button>\\r\\n    <button mat-raised-button (click)=\\\"nextPage()\\\">Next Page</button>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"\"","import { OrganizationService } from './../../services/organization.service';\r\nimport { Component, OnInit, EventEmitter, Input, Output, OnDestroy } from '@angular/core';\r\nimport * as UserViewModel from '../../view-models/user.viewmodel';\r\nimport * as OrganizationViewModel from '../../view-models/organization.viewmodel';\r\nimport { PaginationService } from '../../services/pagination.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-user-list',\r\n  templateUrl: './user-list.component.html',\r\n  styleUrls: ['./user-list.component.scss']\r\n})\r\nexport class UserListComponent implements OnInit, OnDestroy {\r\n  constructor(\r\n    private organizationService: OrganizationService,\r\n    private paginationService: PaginationService,\r\n    private route: ActivatedRoute\r\n  ) {}\r\n\r\n  @Input()\r\n  users: UserViewModel.SimpleUserView[];\r\n  @Output()\r\n  userID = new EventEmitter<string>();\r\n  sub: any;\r\n  pageSubscription: Subscription;\r\n  selectedOrganization = '';\r\n  selectedRole = '';\r\n  organizations: OrganizationViewModel.SimpleOrganization[];\r\n  sorts = ['First Name', 'Last Name'];\r\n  sortValue = this.sorts[0];\r\n  organizationID;\r\n  searchName;\r\n  filterForm = new FormGroup({\r\n    name: new FormControl(''),\r\n    selectedRole: new FormControl('All')\r\n  });\r\n  pagination;\r\n  formInitialize = false;\r\n\r\n\r\n  async ngOnInit() {\r\n    try {\r\n      this.paginationService.resetPage();\r\n      this.sub = this.route.params.subscribe(params => {\r\n        this.organizationID = params['id'];\r\n      });\r\n      this.pageSubscription = this.paginationService.paginationChanged.subscribe(\r\n        pagination => {\r\n          this.pagination = pagination;\r\n        }\r\n      );\r\n      this.paginationService.getPagination();\r\n      if (!this.organizationID) {\r\n        this.organizations = await this.organizationService.getAllOrganizationsWithNoDetails();\r\n        this.filterForm.addControl(\r\n          'selectedOrganization',\r\n          new FormControl('All')\r\n        );\r\n      }\r\n      this.formInitialize = true;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  userClicked(id: string) {\r\n    this.userID.emit(id);\r\n  }\r\n\r\n  changeSort(sort) {\r\n    this.paginationService.resetPage();\r\n    this.sortValue = sort;\r\n  }\r\n\r\n  onSearch() {\r\n    console.log(this.filterForm.value);\r\n    this.paginationService.resetPage();\r\n    const temp = this.filterForm.value;\r\n    this.searchName = temp.name;\r\n    this.selectedOrganization = temp.selectedOrganization;\r\n    this.selectedRole = temp.selectedRole;\r\n  }\r\n\r\n  searchFormReset() {\r\n    this.filterForm.reset();\r\n    this.filterForm.patchValue({ selectedRole: 'All' });\r\n    this.filterForm.patchValue({ selectedOrganization: 'All' });\r\n    this.paginationService.resetPage();\r\n  }\r\n\r\n\r\n  // Pagination Methods\r\n  nextPage() {\r\n    if (this.pagination.currentPage < this.pagination.totalPages) {\r\n      this.paginationService.changePage(this.pagination.currentPage + 1);\r\n    }\r\n  }\r\n  // Pagination Methods\r\n  previousPage() {\r\n    if (this.pagination.currentPage > 1) {\r\n      this.paginationService.changePage(this.pagination.currentPage - 1);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.pageSubscription.unsubscribe();\r\n  }\r\n}\r\n\r\n","import { Pipe, PipeTransform, OnInit, OnDestroy } from '@angular/core';\r\nimport { PaginationService } from '../services/pagination.service';\r\n@Pipe({\r\n  name: 'datarulesList'\r\n})\r\nexport class DataRulesListPipe implements PipeTransform {\r\n\r\n  constructor(private paginationService: PaginationService) {}\r\n\r\n  transform(\r\n    rules: any,\r\n    searchName: string,\r\n    datasource: string,\r\n    sort: string,\r\n    page: number,\r\n  ): any {\r\n    if (rules) {\r\n      let currentList = rules;\r\n\r\n      // If there's a search\r\n      if (searchName) {\r\n        searchName = searchName.toLowerCase();\r\n        currentList = currentList.filter(\r\n          (el: any) => el.name.toLowerCase().indexOf(searchName) > -1\r\n        );\r\n      }\r\n\r\n      // if there's a organization\r\n      if (datasource) {\r\n        if (datasource !== 'All') {\r\n          currentList = currentList.filter(\r\n            element => element.datasource.id === datasource\r\n          );\r\n        }\r\n      }\r\n     // if there's a sort\r\n     if (sort) {\r\n      if (sort === 'Alphabetical') {\r\n        const sorted = currentList.sort(\r\n          (a, b) => (a.name > b.name ? 1 : a.name === b.name ? 0 : -1)\r\n        );\r\n        if (sort.charAt(0) === '-') {\r\n          sorted.reverse();\r\n        }\r\n        currentList = sorted;\r\n      }\r\n      if (sort === 'Latest') {\r\n        const sorted = currentList.sort(\r\n          (a, b) =>\r\n            new Date(a.date) < new Date(b.date)\r\n              ? 1\r\n              : new Date(a.date) === new Date(b.date)\r\n                ? 0\r\n                : -1\r\n        );\r\n        currentList = sorted;\r\n      }\r\n    }\r\n      this.paginationService.changeTotalPages(\r\n        Math.ceil(\r\n          currentList.length / this.paginationService.pagination.itemsPerPage\r\n        )\r\n      );\r\n\r\n      return currentList.slice(\r\n        this.paginationService.pagination.currentPage *\r\n          this.paginationService.pagination.itemsPerPage -\r\n          this.paginationService.pagination.itemsPerPage,\r\n        this.paginationService.pagination.itemsPerPage *\r\n          this.paginationService.pagination.currentPage\r\n      );\r\n\r\n    }\r\n    return rules;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform, OnInit, OnDestroy } from '@angular/core';\r\nimport { PaginationService } from '../services/pagination.service';\r\n@Pipe({\r\n  name: 'orgList'\r\n})\r\nexport class OrgListPipe implements PipeTransform {\r\n\r\n  constructor(private paginationService: PaginationService) {}\r\n\r\n  transform(\r\n    organization: any,\r\n    searchName: string,\r\n    categories: string[],\r\n    sort: string,\r\n    page: number,\r\n  ): any {\r\n    if (organization) {\r\n      let currentList = organization;\r\n\r\n      // If there's a search\r\n      if (searchName) {\r\n        searchName = searchName.toLowerCase();\r\n        currentList = currentList.filter(\r\n          (el: any) => el.name.toLowerCase().indexOf(searchName) > -1\r\n        );\r\n      }\r\n\r\n      // If there's a category\r\n      if (categories.length > 0) {\r\n        currentList = currentList.filter(element =>\r\n          categories.every(temp => element.categories.indexOf(temp) >= 0)\r\n        );\r\n      }\r\n      // If there's a sort\r\n      if (sort) {\r\n\r\n        if (sort === 'Alphabetical') {\r\n          console.log('Alpha called');\r\n          const sorted = currentList.sort(\r\n            (a, b) => (a.name > b.name ? 1 : a.name === b.name ? 0 : -1)\r\n          );\r\n          if (sort.charAt(0) === '-') {\r\n            sorted.reverse();\r\n          }\r\n          currentList = sorted;\r\n        }\r\n        if (sort === 'Most Reports') {\r\n          const sorted = currentList.sort(\r\n            (a, b) =>\r\n              Number(a.reportsCount) < Number(b.reportsCount)\r\n                ? 1\r\n                : Number(a.reportsCount) === Number(b.reportsCount)\r\n                  ? 0\r\n                  : -1\r\n          );\r\n          currentList = sorted;\r\n        }\r\n        if (sort === 'Most Users') {\r\n          const sorted = currentList.sort(\r\n            (a, b) =>\r\n              Number(a.usersCount) < Number(b.usersCount)\r\n                ? 1\r\n                : Number(a.usersCount) === Number(b.usersCount)\r\n                  ? 0\r\n                  : -1\r\n          );\r\n          currentList = sorted;\r\n        }\r\n        if (sort === 'Most Data Rules') {\r\n          const sorted = currentList.sort(\r\n            (a, b) =>\r\n              Number(a.datarulesCount) < Number(b.datarulesCount)\r\n                ? 1\r\n                : Number(a.datarulesCount) === Number(b.datarulesCount)\r\n                  ? 0\r\n                  : -1\r\n          );\r\n          currentList = sorted;\r\n        }\r\n      }\r\n\r\n      this.paginationService.changeTotalPages(\r\n        Math.ceil(\r\n          currentList.length / this.paginationService.pagination.itemsPerPage\r\n        )\r\n      );\r\n\r\n      return currentList.slice(\r\n        this.paginationService.pagination.currentPage *\r\n          this.paginationService.pagination.itemsPerPage -\r\n          this.paginationService.pagination.itemsPerPage,\r\n        this.paginationService.pagination.itemsPerPage *\r\n          this.paginationService.pagination.currentPage\r\n      );\r\n\r\n    }\r\n    return organization;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { PaginationService } from '../services/pagination.service';\r\n@Pipe({\r\n  name: 'pagination'\r\n})\r\nexport class PaginationPipe implements PipeTransform {\r\n  constructor(private paginationService: PaginationService) {}\r\n\r\n  transform(currentList: object[], page: number): any {\r\n\r\n    console.log('pagination called');\r\n\r\n    this.paginationService.changeTotalPages(\r\n      Math.ceil(\r\n        currentList.length / this.paginationService.pagination.itemsPerPage\r\n      )\r\n    );\r\n\r\n    return currentList.slice(\r\n      this.paginationService.pagination.currentPage *\r\n        this.paginationService.pagination.itemsPerPage -\r\n        this.paginationService.pagination.itemsPerPage,\r\n      this.paginationService.pagination.itemsPerPage *\r\n        this.paginationService.pagination.currentPage\r\n    );\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { PaginationService } from '../services/pagination.service';\r\n@Pipe({\r\n  name: 'reportList'\r\n})\r\nexport class ReportListPipe implements PipeTransform {\r\n  constructor(private paginationService: PaginationService) {}\r\n  transform(\r\n    reportList: any[],\r\n    searchName: string,\r\n    organization: string,\r\n    sort: string,\r\n    page: number\r\n  ): any {\r\n    let currentList = reportList;\r\n    // If there's a reportList\r\n    if (reportList) {\r\n      // If there's a search\r\n      if (searchName) {\r\n        searchName = searchName.toLowerCase();\r\n        currentList = currentList.filter(\r\n          (el: any) => el.name.toLowerCase().indexOf(searchName) > -1\r\n        );\r\n      }\r\n\r\n      // if there's a organization\r\n      if (organization) {\r\n        if (organization !== 'All') {\r\n          console.log(currentList);\r\n          currentList = currentList.filter(\r\n            element => element.organization.id === organization\r\n          );\r\n        }\r\n      }\r\n      // if there's a sort\r\n      if (sort) {\r\n        if (sort === 'Alphabetical') {\r\n          const sorted = currentList.sort(\r\n            (a, b) => (a.name > b.name ? 1 : a.name === b.name ? 0 : -1)\r\n          );\r\n          if (sort.charAt(0) === '-') {\r\n            sorted.reverse();\r\n          }\r\n          currentList = sorted;\r\n        }\r\n        if (sort === 'Latest') {\r\n          const sorted = currentList.sort(\r\n            (a, b) =>\r\n              new Date(a.date) < new Date(b.date)\r\n                ? 1\r\n                : new Date(a.date) === new Date(b.date)\r\n                  ? 0\r\n                  : -1\r\n          );\r\n          currentList = sorted;\r\n        }\r\n      }\r\n      this.paginationService.changeTotalPages(\r\n        Math.ceil(\r\n          currentList.length / this.paginationService.pagination.itemsPerPage\r\n        )\r\n      );\r\n\r\n      return currentList.slice(\r\n        this.paginationService.pagination.currentPage *\r\n          this.paginationService.pagination.itemsPerPage -\r\n          this.paginationService.pagination.itemsPerPage,\r\n        this.paginationService.pagination.itemsPerPage *\r\n          this.paginationService.pagination.currentPage\r\n      );\r\n    }\r\n\r\n    return currentList;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'searchName'\n})\nexport class SearchNamePipe implements PipeTransform {\n  transform(value: any[], input: string) {\n    console.log('searchName');\n\n    if (value) {\n      if (input) {\n        input = input.toLowerCase();\n        const temp = value.filter(\n          (el: any) => el.name.toLowerCase().indexOf(input) > -1\n        );\n        console.log(temp.length);\n        return temp;\n      }\n      return value;\n    }\n    return value;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { PaginationService } from '../services/pagination.service';\r\n@Pipe({\r\n  name: 'userList'\r\n})\r\nexport class UserListPipe implements PipeTransform {\r\n  constructor(private paginationService: PaginationService) {}\r\n  transform(\r\n    userList: any[],\r\n    searchName: string,\r\n    role: string,\r\n    organization: string,\r\n    sort: string,\r\n    page: number\r\n  ): any {\r\n    let currentList = userList;\r\n    // If there's a reportList\r\n    if (userList) {\r\n      // If there's a search\r\n      if (searchName) {\r\n        searchName = searchName.toLowerCase();\r\n        currentList = currentList.filter(\r\n          (el: any) =>\r\n            (el.firstName + ' ' + el.lastName)\r\n              .toLowerCase()\r\n              .indexOf(searchName) > -1\r\n        );\r\n      }\r\n\r\n      // if there's a organization\r\n      if (organization) {\r\n        if (organization !== 'All') {\r\n          currentList = currentList.filter(function(element) {\r\n            return element.organizations.filter(function(org) {\r\n                console.log(org);\r\n                return org.id === organization;\r\n              }).length > 0;\r\n          });\r\n        }\r\n      }\r\n\r\n      // checks for role\r\n      if (role !== 'All' && role) {\r\n        currentList = currentList.filter(element => element.role === role);\r\n      }\r\n\r\n\r\n      // if there's a sort\r\n      if (sort) {\r\n        if (sort === 'First Name') {\r\n          const sorted = currentList.sort(\r\n            (a, b) =>\r\n              a.firstName > b.firstName\r\n                ? 1\r\n                : a.firstName === b.firstName\r\n                  ? 0\r\n                  : -1\r\n          );\r\n          currentList = sorted;\r\n        }\r\n        if (sort === 'Last Name') {\r\n          const sorted = currentList.sort(\r\n            (a, b) =>\r\n              a.lastName > b.lastName ? 1 : a.lastName === b.lastName ? 0 : -1\r\n          );\r\n          currentList = sorted;\r\n        }\r\n      }\r\n      this.paginationService.changeTotalPages(\r\n        Math.ceil(\r\n          currentList.length / this.paginationService.pagination.itemsPerPage\r\n        )\r\n      );\r\n\r\n      return currentList.slice(\r\n        this.paginationService.pagination.currentPage *\r\n          this.paginationService.pagination.itemsPerPage -\r\n          this.paginationService.pagination.itemsPerPage,\r\n        this.paginationService.pagination.itemsPerPage *\r\n          this.paginationService.pagination.currentPage\r\n      );\r\n    }\r\n\r\n    return currentList;\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport * as DataViewModel from '../view-models/data.viewmodel';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DatarulesService {\n  constructor(private http: HttpClient) {}\n\n  dataRules: DataViewModel.DataRule[];\n\n  /**\n   * Gets all the data source for a specific organization\n   * @param organizationID - ID of the organization you want to get the data source for\n   */\n  public async getDataRules(\n    organizationID: string\n  ): Promise<DataViewModel.DataRule[]> {\n    return await this.http\n      .get<DataViewModel.DataRule[]>(\n        '../../../assets/example-data/datarules.mockdata.json'\n      )\n      .toPromise();\n  }\n\n  public async getAllDataSourceForOrganization(\n    orgID: string\n  ): Promise<DataViewModel.DataSource[]> {\n    return await this.http\n      .get<DataViewModel.DataSource[]>(\n        '../../../assets/example-data/datasources.mockdata.json'\n      )\n      .toPromise();\n  }\n}\n"],"sourceRoot":""}