{"version":3,"sources":["webpack:///./src/app/admin/admin-routing.module.ts","webpack:///./src/app/admin/admin.component.html","webpack:///./src/app/admin/admin.component.scss","webpack:///./src/app/admin/admin.component.ts","webpack:///./src/app/admin/admin.module.ts","webpack:///./src/app/admin/organization-details/organization-details.component.html","webpack:///./src/app/admin/organization-details/organization-details.component.scss","webpack:///./src/app/admin/organization-details/organization-details.component.ts","webpack:///./src/app/admin/organization-list/organization-list.component.html","webpack:///./src/app/admin/organization-list/organization-list.component.scss","webpack:///./src/app/admin/organization-list/organization-list.component.ts","webpack:///./src/app/admin/organization/organization.component.html","webpack:///./src/app/admin/organization/organization.component.scss","webpack:///./src/app/admin/organization/organization.component.ts","webpack:///./src/app/admin/user-details/user-details.component.html","webpack:///./src/app/admin/user-details/user-details.component.scss","webpack:///./src/app/admin/user-details/user-details.component.ts","webpack:///./src/app/shared/services/organization.service.ts"],"names":[],"mappings":"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","file":"admin-admin-module.js","sourcesContent":["import { UserDetailsComponent } from './user-details/user-details.component';\r\nimport { OrganizationDetailsComponent } from './organization-details/organization-details.component';\r\nimport { OrganizationListComponent } from './organization-list/organization-list.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AdminComponent } from './admin.component';\r\nimport { OrganizationComponent } from './organization/organization.component';\r\n\r\nconst adminRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AdminComponent,\r\n    children: [\r\n      {\r\n        path: 'o',\r\n        component: OrganizationComponent,\r\n        children: [\r\n          { path: '', redirectTo: 'list'},\r\n          { path: 'list', component: OrganizationListComponent },\r\n          { path: ':id', component: OrganizationDetailsComponent },\r\n          { path: ':id/u/:userID', component: UserDetailsComponent  },\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(adminRoutes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AdminRoutingModule {}\r\n","module.exports = \"<div class=\\\"main\\\">\\n\\n  <!-- Side Navigation Menu-->\\n  <div class=\\\"side-nav\\\" [ngClass]=\\\"{'side-nav-minimized': minimized}\\\">\\n    <!-- Company Title and Logo goes Here-->\\n    <div class=\\\"company\\\">\\n      <div class=\\\"icon-container\\\">\\n        <div class=\\\"icon\\\">\\n          <img src=\\\"../../assets/company-icon.png\\\" alt=\\\"Smiley face\\\">\\n        </div>\\n      </div>\\n      <span class=\\\"name\\\"> Company </span>\\n    </div>\\n\\n    <!-- Side Navigation Menus -->\\n    <div class=\\\"menu-container\\\">\\n\\n      <!-- Menu # 1 -->\\n      <div class=\\\"menu\\\" routerLink=\\\"o\\\" routerLinkActive=\\\"menu-active\\\" >\\n        <i class=\\\"material-icons\\\">\\n          business\\n        </i>\\n        <span class=\\\"text\\\">\\n          Organizations\\n        </span>\\n      </div>\\n\\n      <!-- Menu # 2 -->\\n      <div class=\\\"menu\\\">\\n        <i class=\\\"material-icons\\\">\\n          assessment\\n        </i>\\n        <span class=\\\"text\\\">\\n          Reports\\n        </span>\\n      </div>\\n\\n      <!-- Menu # 3 -->\\n      <div class=\\\"menu\\\">\\n        <i class=\\\"material-icons\\\">\\n          person_outline\\n        </i>\\n        <span class=\\\"text\\\">\\n          Users\\n        </span>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"right-content\\\" [ngClass]=\\\"{'right-content-minimized': minimized}\\\">\\n    <!-- Top Toolbar -->\\n    <mat-toolbar class=\\\"toolbar\\\">\\n      <button mat-button class=\\\"menu-icon\\\" (click)=\\\"toggleMenu()\\\">\\n        <i class=\\\"material-icons \\\">\\n          menu\\n        </i>\\n      </button>\\n    </mat-toolbar>\\n\\n    <!-- Main Content -->\\n    <div class=\\\"main-content\\\">\\n\\n      <router-outlet></router-outlet>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"/* Tool bar top colour */\\n/* Main content colour */\\n/*************** SIDE NAVIGATION STYLES *******************/\\n/* Side nav color */\\n.side-nav {\\n  width: 190px;\\n  height: 100%;\\n  background-color: #323232;\\n  position: fixed;\\n  transition: padding-left 0.5s;\\n  /* For Safari 3.1 to 6.0 */\\n  transition: width 0.5s;\\n  overflow: hidden;\\n  z-index: 40; }\\n.company {\\n  height: 64px; }\\n.company .icon-container {\\n    height: 64px;\\n    width: 64px;\\n    position: relative; }\\n.company .icon-container img {\\n      height: 45px;\\n      width: 45px;\\n      position: absolute;\\n      right: 0;\\n      left: 0;\\n      top: 0;\\n      bottom: 0;\\n      margin: auto auto; }\\n.company .name {\\n    position: absolute;\\n    top: 22px;\\n    font-size: 20px;\\n    font-weight: bold;\\n    color: white;\\n    left: 70px; }\\n.menu-container {\\n  position: relative; }\\n.menu-container .menu-active {\\n    background-color: #555555; }\\n.menu-container .menu:hover {\\n    cursor: pointer; }\\n.menu-container .menu {\\n    height: 50px;\\n    color: white; }\\n.menu-container .menu .material-icons {\\n      font-size: 30px;\\n      position: relative;\\n      top: 11px;\\n      left: 16px; }\\n.menu-container .menu .text {\\n      position: absolute;\\n      font-size: 17px;\\n      left: 64px;\\n      margin-top: 17px; }\\n.side-nav-minimized {\\n  width: 64px !important; }\\n.toolbar {\\n  background-color: #616161;\\n  color: white;\\n  z-index: 20;\\n  position: fixed; }\\n.toolbar .menu-icon {\\n    min-width: unset;\\n    padding: 0; }\\n.toolbar .menu-icon i {\\n      font-size: 2.5em; }\\n.right-content {\\n  margin-left: 190px;\\n  transition: margin-left 0.5s; }\\n.main-content {\\n  background-color: #f5f5f5;\\n  min-height: calc(100vh - 64px);\\n  padding-top: 64px; }\\n.right-content-minimized {\\n  margin-left: 64px !important; }\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.scss']\n})\nexport class AdminComponent implements OnInit {\n  minimized = false;\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n\n  toggleMenu() {\n    this.minimized = !this.minimized;\n    console.log('toggled');\n  }\n\n}\n","import { OrganizationService } from './../shared/services/organization.service';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AdminComponent } from './admin.component';\r\nimport { OrganizationListComponent } from './organization-list/organization-list.component';\r\nimport { AngularMaterialModule } from '../../angular-material/angular-material.module';\r\nimport { AdminRoutingModule } from './admin-routing.module';\r\nimport { OrganizationDetailsComponent } from './organization-details/organization-details.component';\r\nimport { OrganizationComponent } from './organization/organization.component';\r\nimport { UserDetailsComponent } from './user-details/user-details.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AdminComponent,\r\n    OrganizationListComponent,\r\n    OrganizationDetailsComponent,\r\n    OrganizationComponent,\r\n    UserDetailsComponent\r\n  ],\r\n  imports: [CommonModule, AdminRoutingModule, AngularMaterialModule],\r\n  providers: [OrganizationService]\r\n})\r\nexport class AdminModule {}\r\n","module.exports = \"<div class=\\\"breadcrumb\\\">\\n  <p> <span routerLink=\\\"../\\\"> Organization List </span> >> {{organization.name}} </p>\\n</div>\\n\\n<div style=\\\"padding-top: 50px\\\">\\n  <h2>{{organization.name}}</h2>\\n\\n  <h4>User List</h4>\\n\\n  <button *ngFor=\\\"let user of users\\\" mat-button style=\\\"border: 1px solid rgba(240,240,240); box-shadow: 2px 2px 4px rgb(185, 185, 185); margin: 10px 10px; border-radius: 5px; background-color: white\\\">\\n    <div (click)=\\\"goToUser(user.id)\\\">\\n      <p>{{user.name}}</p>\\n      <p>Google Id: {{user.googleId}}</p>\\n      <p>Secondary Id: {{user.secondaryEmail}}</p>\\n      <p> Accesses: </p>\\n      <p *ngFor=\\\"let org of user.organizations\\\">\\n        {{org.name}}\\n      </p>\\n    </div>\\n  </button>\\n\\n</div>\\n\"","module.exports = \"\"","import { OrganizationService } from './../../shared/services/organization.service';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport * as OrganizationViewModel from '../../shared/view-models/organization.viewmodel';\nimport { UserService } from '../../shared/services/user.service';\nimport * as UserViewModel from '../../shared/view-models/user.viewmodel';\n\n@Component({\n  selector: 'app-organization-details',\n  templateUrl: './organization-details.component.html',\n  styleUrls: ['./organization-details.component.scss']\n})\nexport class OrganizationDetailsComponent implements OnInit, OnDestroy {\n  private sub: any;\n  // Organization Object\n  organization: OrganizationViewModel.Organization;\n\n  // List of users in this organization\n  users: UserViewModel.User[];\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private organizationService: OrganizationService,\n    private userService: UserService\n  ) {}\n\n  async ngOnInit() {\n    this.sub = await this.route.params.subscribe(params => {\n      // Gets the Information for this specific organization\n      this.organization = this.organizationService.getOrganizationById(\n        params['id']\n      );\n      // Gets all the user for this organization\n      this.users = this.userService.getUsersByOrganization(params['id']);\n    });\n  }\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n\n  goToUser(userId) {\n    this.router.navigate(['./u', userId], { relativeTo: this.route });\n  }\n}\n","module.exports = \"<div class=\\\"breadcrumb\\\">\\r\\n  <p>Organization List</p>\\r\\n</div>\\r\\n\\r\\n<div style=\\\"padding-top: 50px\\\">\\r\\n  <p *ngFor=\\\"let organization of organizations\\\">\\r\\n    <button mat-button (click)=\\\"goToDetails(organization.id)\\\" style=\\\"border: 1px solid rgba(240,240,240); box-shadow: 2px 2px 4px rgb(185, 185, 185); margin: 0 20px; border-radius: 5px; background-color: white\\\">\\r\\n      <p>{{organization.name}}({{organization.id}})</p>\\r\\n      <p><span *ngFor=\\\"let category of organization.categories\\\">{{category}}</span>  </p>\\r\\n    </button>\\r\\n  </p>\\r\\n</div>\\r\\n\"","module.exports = \"\"","import { OrganizationService } from './../../shared/services/organization.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport * as OrganizationViewModel from '../../shared/view-models/organization.viewmodel';\n\n@Component({\n  selector: 'app-organization-list',\n  templateUrl: './organization-list.component.html',\n  styleUrls: ['./organization-list.component.scss']\n})\nexport class OrganizationListComponent implements OnInit {\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService\n  ) {}\n\n  // Array of all organizations\n  organizations: OrganizationViewModel.Organization[];\n\n\n\n  ngOnInit() {\n    // Gets all organizations OnInit\n    this.organizations = this.organizationService.getAllOrganizations();\n  }\n\n  goToDetails(id) {\n    this.router.navigate(['../', id], { relativeTo: this.route });\n  }\n}\n","module.exports = \"<router-outlet></router-outlet>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-organization',\n  templateUrl: './organization.component.html',\n  styleUrls: ['./organization.component.scss']\n})\nexport class OrganizationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"breadcrumb\\\">\\n  <p> <span routerLink=\\\"../../../\\\"> Organization List </span> >> <span routerLink=\\\"../../\\\"> {{organization.name}}</span>\\n    >> <span> {{user.name}} </span> </p>\\n</div>\\n\\n<div style=\\\"padding-top: 60px\\\">\\n  <p> {{user.name}} </p>\\n  <p> {{user.googleId }}</p>\\n  <p> {{user.secondaryEmail }} </p>\\n  <p> <strong>Accesses: </strong></p>\\n  <p *ngFor=\\\"let org of user.organizations\\\"> {{org.name}}  </p>\\n</div>\\n\"","module.exports = \"\"","import { OrganizationService } from './../../shared/services/organization.service';\nimport { UserService } from './../../shared/services/user.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport * as UserViewModel from '../../shared/view-models/user.viewmodel';\nimport * as OrganizationViewModel from '../../shared/view-models/organization.viewmodel';\n\n@Component({\n  selector: 'app-user-details',\n  templateUrl: './user-details.component.html',\n  styleUrls: ['./user-details.component.scss']\n})\nexport class UserDetailsComponent implements OnInit {\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private userService: UserService,\n    private organizationService: OrganizationService\n  ) {}\n\n  sub: any;\n\n  organization: OrganizationViewModel.Organization; // Name of the org from previous view for breadcrumbs purposes\n  user: UserViewModel.User;\n\n ngOnInit() {\n    console.log(this.route);\n    this.sub =  this.route.params.subscribe(params => {\n      this.organization = this.getOrganization(params['id']);\n      this.user =  this.userService.getUser(params['userID']);\n    });\n  }\n\n  // Gets the name of the organization for breadcrumbs & user acceses\n  private getOrganization(id) {\n    return this.organizationService.getOrganizationById(id);\n  }\n\n   // Gets the user details\n  private getUserDetails(id) {\n    return this.userService.getUser(id);\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport * as OrganizationViewModel from '../view-models/organization.viewmodel';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrganizationService {\n\n  constructor() {}\n\n  // Mocking Organizations Object\n  private mockOrganizations: OrganizationViewModel.Organization[] = [\n    {\n      id: '1',\n      name: 'Hasbro Inc.',\n      categories: ['Toy Company']\n    },\n    {\n      id: '2',\n      name: 'Mattel Inc.',\n      categories: ['Toy Company']\n    },\n    {\n      id: '3',\n      name: 'The Lego Company',\n      categories: ['Toy Company']\n    },\n    {\n      id: '4',\n      name: 'Something',\n      categories: ['Toy Company', 'Electronics']\n    }\n  ];\n\n\n\n\n  /**\n   * Method for getting all of the organizations\n   */\n  public getAllOrganizations(): OrganizationViewModel.Organization[] {\n    return this.mockOrganizations.slice();\n  }\n\n  /**\n   *  Method for getting organization with filters\n   *  ********** MUST CONSULT HOW TO DO THIS *******\n   */\n  public getOrganizationsWithFilter(filter): OrganizationViewModel.Organization[] {\n    return null;\n  }\n\n  /**\n   *  Method for getting Organization object with ID\n   */\n\n  public getOrganizationById(id): OrganizationViewModel.Organization {\n    return this.mockOrganizations.filter(x => x.id === id)[0];\n  }\n\n\n}\n"],"sourceRoot":""}