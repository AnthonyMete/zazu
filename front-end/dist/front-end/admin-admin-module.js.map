{"version":3,"sources":["webpack:///./src/app/admin/admin-report-details/admin-report-details.component.html","webpack:///./src/app/admin/admin-report-details/admin-report-details.component.scss","webpack:///./src/app/admin/admin-report-details/admin-report-details.component.ts","webpack:///./src/app/admin/admin-report-details/delete-report-confirmation.html","webpack:///./src/app/admin/admin-routing.module.ts","webpack:///./src/app/admin/admin.component.html","webpack:///./src/app/admin/admin.component.scss","webpack:///./src/app/admin/admin.component.ts","webpack:///./src/app/admin/admin.module.ts","webpack:///./src/app/admin/all-reports/all-report-list/all-report-list.component.html","webpack:///./src/app/admin/all-reports/all-report-list/all-report-list.component.scss","webpack:///./src/app/admin/all-reports/all-report-list/all-report-list.component.ts","webpack:///./src/app/admin/all-reports/all-reports.component.html","webpack:///./src/app/admin/all-reports/all-reports.component.scss","webpack:///./src/app/admin/all-reports/all-reports.component.ts","webpack:///./src/app/admin/all-users/all-user-list/all-user-list.component.html","webpack:///./src/app/admin/all-users/all-user-list/all-user-list.component.scss","webpack:///./src/app/admin/all-users/all-user-list/all-user-list.component.ts","webpack:///./src/app/admin/all-users/all-users.component.html","webpack:///./src/app/admin/all-users/all-users.component.scss","webpack:///./src/app/admin/all-users/all-users.component.ts","webpack:///./src/app/admin/create-new-datarule/create-new-datarule.component.html","webpack:///./src/app/admin/create-new-datarule/create-new-datarule.component.scss","webpack:///./src/app/admin/create-new-datarule/create-new-datarule.component.ts","webpack:///./src/app/admin/create-new-organization/create-new-organization.component.html","webpack:///./src/app/admin/create-new-organization/create-new-organization.component.scss","webpack:///./src/app/admin/create-new-organization/create-new-organization.component.ts","webpack:///./src/app/admin/create-new-report/create-new-report.component.html","webpack:///./src/app/admin/create-new-report/create-new-report.component.scss","webpack:///./src/app/admin/create-new-report/create-new-report.component.ts","webpack:///./src/app/admin/create-new-user/create-new-user.component.html","webpack:///./src/app/admin/create-new-user/create-new-user.component.scss","webpack:///./src/app/admin/create-new-user/create-new-user.component.ts","webpack:///./src/app/admin/create-new-user/new-user-organization-confirmation.html","webpack:///./src/app/admin/edit-data-rule/edit-data-rule.component.html","webpack:///./src/app/admin/edit-data-rule/edit-data-rule.component.scss","webpack:///./src/app/admin/edit-data-rule/edit-data-rule.component.ts","webpack:///./src/app/admin/edit-organization/edit-organization.component.html","webpack:///./src/app/admin/edit-organization/edit-organization.component.scss","webpack:///./src/app/admin/edit-organization/edit-organization.component.ts","webpack:///./src/app/admin/edit-report/edit-report.component.html","webpack:///./src/app/admin/edit-report/edit-report.component.scss","webpack:///./src/app/admin/edit-report/edit-report.component.ts","webpack:///./src/app/admin/edit-user/edit-user.component.html","webpack:///./src/app/admin/edit-user/edit-user.component.scss","webpack:///./src/app/admin/edit-user/edit-user.component.ts","webpack:///./src/app/admin/ghost/ghost.component.html","webpack:///./src/app/admin/ghost/ghost.component.scss","webpack:///./src/app/admin/ghost/ghost.component.ts","webpack:///./src/app/admin/organization-details/delete-datarule-confirmation.html","webpack:///./src/app/admin/organization-details/delete-organization-confirmation.html","webpack:///./src/app/admin/organization-details/organization-details.component.html","webpack:///./src/app/admin/organization-details/organization-details.component.scss","webpack:///./src/app/admin/organization-details/organization-details.component.ts","webpack:///./src/app/admin/organization/organization-list/organization-list.component.html","webpack:///./src/app/admin/organization/organization-list/organization-list.component.scss","webpack:///./src/app/admin/organization/organization-list/organization-list.component.ts","webpack:///./src/app/admin/organization/organization.component.html","webpack:///./src/app/admin/organization/organization.component.scss","webpack:///./src/app/admin/organization/organization.component.ts","webpack:///./src/app/admin/share-report/share-report.component.html","webpack:///./src/app/admin/share-report/share-report.component.scss","webpack:///./src/app/admin/share-report/share-report.component.ts","webpack:///./src/app/admin/user-details/delete-user-confirmation.html","webpack:///./src/app/admin/user-details/user-details.component.html","webpack:///./src/app/admin/user-details/user-details.component.scss","webpack:///./src/app/admin/user-details/user-details.component.ts","webpack:///./src/app/shared/common-view/report-list/report-list.component.html","webpack:///./src/app/shared/common-view/report-list/report-list.component.scss","webpack:///./src/app/shared/common-view/report-list/report-list.component.ts","webpack:///./src/app/shared/common-view/user-list/user-list.component.html","webpack:///./src/app/shared/common-view/user-list/user-list.component.scss","webpack:///./src/app/shared/common-view/user-list/user-list.component.ts","webpack:///./src/app/shared/pipes/category.pipe.ts","webpack:///./src/app/shared/pipes/datarules-list.pipe.ts","webpack:///./src/app/shared/pipes/org-list.pipe.ts","webpack:///./src/app/shared/pipes/pagination.pipe.ts","webpack:///./src/app/shared/pipes/search-name.pipe.ts","webpack:///./src/app/shared/pipes/user-list.pipe.ts","webpack:///./src/app/shared/services/datarules.service.ts","webpack:///./src/app/shared/services/ghost.service.ts"],"names":[],"mappings":"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","file":"admin-admin-module.js","sourcesContent":["module.exports = \"<div *ngIf=\\\"(organization != null && user!= null && report != null) || (!organization  && !userView && report != null) || (!organization && !user && report != null)\\\">\\n\\n  <div class=\\\"breadcrumb-container\\\">\\n    <!-- Breadcrumbs for report when navigation from organization list -->\\n    <div class=\\\"breadcrumb\\\" *ngIf=\\\"!userView && organizationID != undefined\\\"> <span routerLink=\\\"../../../\\\"> <i class=\\\"material-icons\\\">\\n          business </i> Organization List </span> &nbsp;&nbsp; <i class=\\\"material-icons arrow\\\"> keyboard_arrow_right </i> <i style=\\\"margin-left: -14px\\\"\\n        class=\\\"material-icons arrow\\\"> keyboard_arrow_right </i>&nbsp;&nbsp; <span routerLink=\\\"../../\\\">\\n        {{organization.name}}</span>\\n      &nbsp;&nbsp; <i class=\\\"material-icons arrow\\\"> keyboard_arrow_right </i> <i style=\\\"margin-left: -14px\\\" class=\\\"material-icons arrow\\\">\\n        keyboard_arrow_right </i>&nbsp;&nbsp; <span class=\\\"active\\\"> {{report.name}} ({{report.organization.name}})</span> </div>\\n\\n    <!-- Breadcrumbs for report when navigation from user under organization list -->\\n    <div class=\\\"breadcrumb\\\" *ngIf=\\\"userView && organizationID != undefined\\\"> <span routerLink=\\\"../../../../../\\\"> <i class=\\\"material-icons\\\">\\n          business </i> Organization List </span>\\n      &nbsp;&nbsp; <i class=\\\"material-icons arrow\\\"> keyboard_arrow_right </i> <i style=\\\"margin-left: -14px\\\" class=\\\"material-icons arrow\\\">\\n        keyboard_arrow_right </i>&nbsp;&nbsp; <span routerLink=\\\"../../../../\\\">\\n        {{organization.name}}</span>\\n      &nbsp;&nbsp; <i class=\\\"material-icons arrow\\\"> keyboard_arrow_right </i> <i style=\\\"margin-left: -14px\\\" class=\\\"material-icons arrow\\\">\\n        keyboard_arrow_right </i>&nbsp;&nbsp; <span routerLink=\\\"../../\\\"> {{user.firstName}} {{user.lastName}} </span> &nbsp;&nbsp; <i class=\\\"material-icons arrow\\\">\\n        keyboard_arrow_right </i> <i style=\\\"margin-left: -14px\\\" class=\\\"material-icons arrow\\\"> keyboard_arrow_right </i>&nbsp;&nbsp; <span\\n        class=\\\"active\\\"> {{report.name}}\\n        ({{report.organization.name}})</span></div>\\n\\n    <!-- Breadcrumbs for report when navigation from user under user list -->\\n    <div class=\\\"breadcrumb\\\" *ngIf=\\\"organizationID === undefined && userID != undefined\\\"> <span routerLink=\\\"../../../../\\\"> <i class=\\\"material-icons\\\">\\n          person_outline </i> User List </span>\\n      &nbsp;&nbsp; <i class=\\\"material-icons arrow\\\"> keyboard_arrow_right </i> <i style=\\\"margin-left: -14px\\\" class=\\\"material-icons arrow\\\">\\n        keyboard_arrow_right </i>&nbsp;&nbsp; <span routerLink=\\\"../../\\\">{{user.firstName}} {{user.lastName}}</span> &nbsp;&nbsp; <i class=\\\"material-icons arrow\\\">\\n        keyboard_arrow_right </i> <i style=\\\"margin-left: -14px\\\" class=\\\"material-icons arrow\\\"> keyboard_arrow_right </i>&nbsp;&nbsp; <span\\n        class=\\\"active\\\"> {{report.name}}\\n        ({{report.organization.name}})</span></div>\\n\\n    <!-- Breadcrumbs for report when navigation from report list -->\\n    <div class=\\\"breadcrumb\\\" *ngIf=\\\"organizationID === undefined && userID === undefined\\\"> <span routerLink=\\\"../../\\\"> <i class=\\\"material-icons\\\">\\n          assessment </i> Report List </span>\\n      &nbsp;&nbsp; <i class=\\\"material-icons arrow\\\"> keyboard_arrow_right </i> <i style=\\\"margin-left: -14px\\\" class=\\\"material-icons arrow\\\">\\n        keyboard_arrow_right </i>&nbsp;&nbsp; <span class=\\\"active\\\"> {{report.name}} ({{report.organization.name}})</span> </div>\\n  </div>\\n\\n\\n  <div class=\\\"main-content-view\\\" *ngIf=\\\"viewInitialized\\\">\\n    <div class=\\\"left-main-content-view\\\">\\n      <iframe class=\\\"report\\\" src=\\\"https://datastudio.google.com/embed/reporting/1XuwM0G2Rx55jEWX_Rus05td2IHN0PnQI/page/1M\\\" frameborder=\\\"0\\\"\\n        style=\\\"border:0\\\" allowfullscreen></iframe>\\n    </div>\\n    <div class=\\\"right-main-content-view\\\">\\n      <div class=\\\"filter information\\\">\\n        <div class=\\\"more-button\\\" style=\\\"margin-top: -10px\\\">\\n          <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\">\\n            <mat-icon color=\\\"more-color\\\">more_vert</mat-icon>\\n          </button>\\n\\n          <mat-menu #menu=\\\"matMenu\\\">\\n            <button mat-menu-item routerLink=\\\"./edit-report\\\">Edit</button>\\n            <button mat-menu-item (click)=\\\"openDialog()\\\">Delete</button>\\n          </mat-menu>\\n        </div>\\n        <h4 class=\\\"info-title\\\"> Report Information</h4>\\n        <p> Name: <span class=\\\"info\\\">{{report.name}} </span></p>\\n        <p>Organization: <span class=\\\"info\\\">{{report.organization.name}} </span></p>\\n        <p>Date: <span class=\\\"info\\\"> {{report.date | date }}</span> </p>\\n        <p>Datastudio Link: <span class=\\\"info\\\"> {{report.link}}</span></p>\\n        <p>Datasources: </p>\\n        <div *ngFor=\\\"let datasource of report.datasources; let i = index\\\">\\n          <p>&nbsp;&nbsp;&nbsp;&bull;<span class=\\\"info\\\"> {{datasource.name}} </span> </p>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"metadata\\\">\\n        <mat-accordion>\\n          <mat-expansion-panel style=\\\"box-shadow:none\\\">\\n            <mat-expansion-panel-header style=\\\"padding: 0\\\">\\n              <mat-panel-title>\\n                <h4 class=\\\"info-title\\\" style=\\\"padding-top: 10px;\\\"> Metadata</h4>\\n              </mat-panel-title>\\n            </mat-expansion-panel-header>\\n            <div *ngFor=\\\"let datasource of report.datasources; let i = index\\\">\\n                <p>Datasource: <span class=\\\"info\\\">{{datasource.name}} </span> </p>\\n                <p>&nbsp;&nbsp;&bull; ID: <span class=\\\"info\\\">{{datasource._id}} </span></p>\\n            </div>\\n            <p>Created By: <span class=\\\"info\\\">{{ report.createdBy}}</span> </p>\\n            <p>Updated By: <span class=\\\"info\\\">{{ report.updatedBy}}</span></p>\\n            <p>Who can see it: </p>\\n            <p *ngFor=\\\"let user of report.accessedBy\\\"> <span class=\\\"info\\\"> &nbsp;&nbsp;&#9679; &nbsp;{{user.firstName}} {{user.lastName}}\\n              </span></p>\\n            <br>\\n          </mat-expansion-panel>\\n        </mat-accordion>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div *ngIf=\\\"!viewInitialized\\\" style=\\\"margin:auto; padding-top: 80px; text-align: center\\\">\\n      <mat-spinner style=\\\"margin:auto\\\"></mat-spinner>\\n      <p style=\\\"text-align: center;\\\">Report Loading...</p>\\n  </div>\\n\\n\\n</div>\\n\"","module.exports = \".report {\\n  width: 100%;\\n  height: calc(100vh - 150px);\\n  background-color: white; }\\n\\n.information .info-title, .metadata .info-title {\\n  margin: 0;\\n  margin-bottom: 10px;\\n  font-weight: 500;\\n  color: initial; }\\n\\n.information p, .metadata p {\\n  font-size: 15px;\\n  margin: 2px 0;\\n  font-weight: 400;\\n  color: #979797; }\\n\\n.information p .info, .metadata p .info {\\n    color: #4a4a4a;\\n    font-weight: 500; }\\n\\n.metadata {\\n  padding: 0 15px;\\n  background-color: white;\\n  margin-top: 25px;\\n  margin-left: 15px;\\n  max-width: 300px;\\n  box-shadow: 2px 3px 4px rgba(101, 101, 101, 0.5);\\n  border: 1px solid #e1e1e1; }\\n\\n.metadata ::ng-deep .mat-expansion-panel-body {\\n    padding: 0 !important;\\n    margin-top: -10px;\\n    padding-bottom: 20px; }\\n\"","import { UserService } from './../../shared/services/user.service';\nimport { Component, OnInit, OnDestroy, Inject } from '@angular/core';\nimport { ReportService } from '../../shared/services/report.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport * as UserViewModel from '../../shared/view-models/user.viewmodel';\nimport * as OrganizationViewModel from '../../shared/view-models/organization.viewmodel';\nimport * as ReportViewModel from '../../shared/view-models/report.viewmodel';\nimport { OrganizationService } from '../../shared/services/organization.service';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'app-admin-report-details',\n  templateUrl: './admin-report-details.component.html',\n  styleUrls: ['./admin-report-details.component.scss']\n})\nexport class AdminReportDetailsComponent implements OnInit, OnDestroy {\n  constructor(\n    private reportService: ReportService,\n    private route: ActivatedRoute,\n    private userService: UserService,\n    private organizationService: OrganizationService,\n    public dialog: MatDialog,\n    private router: Router,\n  ) {}\n\n  sub: any;\n  organizationID;\n  userID;\n  reportID;\n  organization = null;\n  user = undefined;\n  report: ReportViewModel.ReportWithMetaData = null;\n  userView: boolean;\n  viewInitialized = false;\n\n  async ngOnInit() {\n    this.sub = this.route.params.subscribe(params => {\n      this.organizationID = params['id'];\n      this.userID = params['userID'];\n      this.reportID = params['reportID'];\n    });\n\n    this.report = await this.reportService.getReport('reportID');\n    if (this.userID !== undefined) {\n      this.userView = true;\n      this.user = await this.userService.getLocalUser(this.userID);\n    } else {\n      this.userView = false;\n      this.user = false;\n    }\n    if (this.organizationID) {\n      this.organization = await this.organizationService.getLocalOrganization(this.organizationID);\n    } else {\n      this.organization = false;\n    }\n    this.viewInitialized = true;\n  }\n\n  openDialog( ) {\n    const dialogRef = this.dialog.open(DeleteReportConfirmation, {\n      data: { report: this.report.name}\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.reportService.deleteReport(this.reportID);\n        this.router.navigate(['../../'], { relativeTo: this.route });\n      }\n    });\n  }\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n}\n\n\n@Component({\n  selector: 'delete-report-confirmation',\n  templateUrl: 'delete-report-confirmation.html'\n})\nexport class DeleteReportConfirmation {\n  constructor(\n    public dialogRef: MatDialogRef<DeleteReportConfirmation>,\n    @Inject(MAT_DIALOG_DATA) public data\n  ) {}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n\n","module.exports = \"<div class=\\\"dialog\\\">\\n    <h2 class=\\\"title delete\\\"><i class=\\\"material-icons\\\">\\n        warning\\n      </i> Delete {{data.report}}?</h2>\\n    <div mat-dialog-content>\\n      <h4 class=\\\"subtitle\\\">Warning: this cannot be undone</h4>\\n      <p>Iam id ipsum absurdum, maximum malum neglegi. Quoniam, si dis placet, ab Epicuro loqui discimus. Duo Reges: constructio interrete.</p>\\n    </div>\\n    <div mat-dialog-actions style=\\\"float:right\\\">\\n      <button mat-button (click)=\\\"onNoClick()\\\">Cancel</button>\\n      <button mat-button mat-flat-button [mat-dialog-close]=\\\"true\\\" class=\\\"danger\\\" cdkFocusInitial>Continue</button>\\n    </div>\\n  </div>\\n\"","import { ViewerReportComponent } from './../shared/common-view/viewer-report/viewer-report.component';\nimport { ViewerReportListComponent } from './../shared/common-view/viewer-report-list/viewer-report-list.component';\nimport { GhostComponent } from './ghost/ghost.component';\nimport { EditReportComponent } from './edit-report/edit-report.component';\nimport { ShareReportComponent } from './share-report/share-report.component';\nimport { CreateNewDataruleComponent } from './create-new-datarule/create-new-datarule.component';\nimport { CreateNewUserComponent } from './create-new-user/create-new-user.component';\nimport { AllReportListComponent } from './all-reports/all-report-list/all-report-list.component';\nimport { OrganizationListComponent } from './organization/organization-list/organization-list.component';\nimport { AllUserListComponent } from './all-users/all-user-list/all-user-list.component';\nimport { AllUsersComponent } from './all-users/all-users.component';\nimport { AdminGuard } from './../auth/admin-guard.service';\nimport { AdminReportDetailsComponent } from './admin-report-details/admin-report-details.component';\nimport { UserDetailsComponent } from './user-details/user-details.component';\nimport { OrganizationDetailsComponent } from './organization-details/organization-details.component';\n\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule, CanActivate } from '@angular/router';\nimport { AdminComponent } from './admin.component';\nimport { OrganizationComponent } from './organization/organization.component';\nimport { AllReportsComponent } from './all-reports/all-reports.component';\nimport { CreateNewOrganizationComponent } from './create-new-organization/create-new-organization.component';\nimport { CreateNewReportComponent } from './create-new-report/create-new-report.component';\nimport { EditOrganizationComponent } from './edit-organization/edit-organization.component';\nimport { EditDataRuleComponent } from './edit-data-rule/edit-data-rule.component';\nimport { EditUserComponent } from './edit-user/edit-user.component';\n\nconst adminRoutes: Routes = [\n  {\n    path: '',\n    component: AdminComponent,\n    canActivate: [AdminGuard],\n    children: [\n      {\n        path: 'o',\n        component: OrganizationComponent,\n        children: [\n          { path: '', redirectTo: 'list' },\n          { path: 'list', component: OrganizationListComponent },\n          { path: 'new-organization', component: CreateNewOrganizationComponent},\n          { path: 'share-report', component: ShareReportComponent},\n          { path: ':id', component: OrganizationDetailsComponent },\n          { path: ':id/new-user', component: CreateNewUserComponent},\n          { path: ':id/new-report', component: CreateNewReportComponent},\n          { path: ':id/share-report', component: ShareReportComponent},\n          { path: ':id/edit-organization', component: EditOrganizationComponent},\n          { path: ':id/new-rule', component: CreateNewDataruleComponent},\n          { path: ':id/edit-rule/:ruleID', component: EditDataRuleComponent},\n          { path: ':id/u/:userID', component: UserDetailsComponent },\n          { path: ':id/u/:userID/ghost/:userName', component: GhostComponent, children: [\n            { path: '', redirectTo: 'list'},\n            { path: 'list', component: ViewerReportListComponent},\n            { path: ':reportID', component: ViewerReportComponent}\n          ]},\n          { path: ':id/u/:userID/edit-user', component: EditUserComponent },\n          { path: ':id/r/:reportID', component: AdminReportDetailsComponent },\n          { path: ':id/r/:reportID/edit-report', component: EditReportComponent},\n          {\n            path: ':id/u/:userID/r/:reportID',\n            component: AdminReportDetailsComponent\n          },\n          {\n            path: ':id/u/:userID/r/:reportID/edit-report',\n            component: EditReportComponent\n          }\n        ]\n      },\n      {\n        path: 'users',\n        component: AllUsersComponent,\n        children: [\n          { path: '', redirectTo: 'list' },\n          { path: 'list', component: AllUserListComponent },\n          { path: 'new-user', component: CreateNewUserComponent},\n          { path: 'u/:userID', component: UserDetailsComponent },\n          { path: 'u/:userID/ghost/:userName', component: GhostComponent, children: [\n            { path: '', redirectTo: 'list'},\n            { path: 'list', component: ViewerReportListComponent},\n            { path: ':reportID', component: ViewerReportComponent}\n          ]},\n          { path: 'u/:userID/edit-user', component: EditUserComponent },\n          { path: 'u/:userID/r/:reportID', component: AdminReportDetailsComponent}\n        ]\n      },\n      {\n        path: 'reports',\n        component: AllReportsComponent,\n        children: [\n          { path: '', redirectTo: 'list' },\n          { path: 'list', component: AllReportListComponent },\n          { path: 'new-report', component: CreateNewReportComponent},\n          { path: 'r/:reportID', component: AdminReportDetailsComponent },\n          { path: 'r/:reportID/edit-report', component: EditReportComponent}\n        ]\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(adminRoutes)],\n\n  exports: [RouterModule]\n})\nexport class AdminRoutingModule {}\n","module.exports = \"<div class=\\\"main\\\" *ngIf=\\\"!ghostStatus\\\">\\n\\n  <!-- Side Navigation Menu-->\\n  <div class=\\\"side-nav\\\" [ngClass]=\\\"{'side-nav-minimized': minimized}\\\">\\n    <!-- Company Title and Logo goes Here-->\\n    <div class=\\\"company\\\">\\n      <div class=\\\"icon-container\\\">\\n        <div class=\\\"icon\\\">\\n          <img src=\\\"../../assets/company-icon.png\\\" alt=\\\"Smiley face\\\">\\n        </div>\\n      </div>\\n      <span class=\\\"name\\\"> Company </span>\\n    </div>\\n\\n    <!-- Side Navigation Menus -->\\n    <div class=\\\"menu-container\\\">\\n\\n      <!-- Menu # 1 -->\\n      <div class=\\\"menu\\\" routerLink=\\\"o\\\" routerLinkActive=\\\"menu-active\\\">\\n        <i class=\\\"material-icons\\\">\\n          business\\n        </i>\\n        <span class=\\\"text\\\">\\n          Organizations\\n        </span>\\n      </div>\\n\\n      <!-- Menu # 2 -->\\n      <div class=\\\"menu\\\" routerLink=\\\"reports\\\" routerLinkActive=\\\"menu-active\\\">\\n        <i class=\\\"material-icons\\\">\\n          assessment\\n        </i>\\n        <span class=\\\"text\\\">\\n          Reports\\n        </span>\\n      </div>\\n\\n      <!-- Menu # 3 -->\\n      <div class=\\\"menu\\\" routerLink=\\\"users\\\" routerLinkActive=\\\"menu-active\\\">\\n        <i class=\\\"material-icons\\\">\\n          person_outline\\n        </i>\\n        <span class=\\\"text\\\">\\n          Users\\n        </span>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"right-content\\\" [ngClass]=\\\"{'right-content-minimized': minimized}\\\">\\n    <!-- Top Toolbar -->\\n    <mat-toolbar class=\\\"toolbar\\\" [ngClass]=\\\"{'toobar-max': minimized}\\\">\\n      <button mat-button class=\\\"menu-icon\\\" (click)=\\\"toggleMenu()\\\">\\n        <i class=\\\"material-icons \\\">\\n          menu\\n        </i>\\n      </button>\\n      <div style=\\\"flex: 1 1 auto\\\">\\n      </div>\\n      <button mat-button class=\\\"menu-icon right\\\"   matTooltip=\\\"FAQs\\\"\\n      matTooltipPosition=\\\"below\\\">\\n        <i class=\\\"material-icons\\\">\\n          help_outline\\n        </i>\\n      </button>\\n      <button mat-button class=\\\"menu-icon right\\\"  matTooltip=\\\"Logout\\\"\\n      matTooltipPosition=\\\"below\\\">\\n        <i class=\\\"material-icons\\\">\\n          power_settings_new\\n        </i>\\n      </button>\\n\\n\\n    </mat-toolbar>\\n\\n    <!-- Main Content -->\\n    <div class=\\\"main-content\\\">\\n      <router-outlet></router-outlet>\\n    </div>\\n  </div>\\n</div>\\n\\n<div *ngIf=\\\"ghostStatus\\\">\\n  <router-outlet></router-outlet>\\n</div>\\n\"","module.exports = \"/* Tool bar top colour */\\n/* Main content colour */\\n/*************** SIDE NAVIGATION VARIABLES *******************/\\n/* Side nav color */\\n/********* ORGANIZATION DETAILS VARIABLES **********/\\n/******* GHOST HEADER TITLE ******/\\n/*********** LIST CARD VARIABLES  ***********/\\n/********* BREADCRUMBS STYLING ******/\\n/******* FORMS STYLING & FILTERS ******/\\n/***** Filter Card ***/\\n/****** Buttons Colors  **/\\n/**** Empty List Color Styles ****/\\n.side-nav {\\n  width: 190px;\\n  height: 100%;\\n  background-color: #323232;\\n  position: fixed;\\n  transition: padding-left 0.5s;\\n  /* For Safari 3.1 to 6.0 */\\n  transition: width 0.5s;\\n  overflow: hidden;\\n  z-index: 40; }\\n.company {\\n  height: 64px; }\\n.company .icon-container {\\n    height: 64px;\\n    width: 64px;\\n    position: relative; }\\n.company .icon-container img {\\n      height: 45px;\\n      width: 45px;\\n      position: absolute;\\n      right: 0;\\n      left: 0;\\n      top: 0;\\n      bottom: 0;\\n      margin: auto auto; }\\n.company .name {\\n    position: absolute;\\n    top: 22px;\\n    font-size: 20px;\\n    font-weight: bold;\\n    color: white;\\n    left: 70px; }\\n.menu-container {\\n  position: relative; }\\n.menu-container .menu-active {\\n    background-color: #555555; }\\n.menu-container .menu:hover {\\n    cursor: pointer; }\\n.menu-container .menu {\\n    height: 50px;\\n    color: white; }\\n.menu-container .menu .material-icons {\\n      font-size: 30px;\\n      position: relative;\\n      top: 11px;\\n      left: 16px; }\\n.menu-container .menu .text {\\n      position: absolute;\\n      font-size: 17px;\\n      left: 64px;\\n      margin-top: 17px; }\\n.side-nav-minimized {\\n  width: 64px !important; }\\n.toobar-max {\\n  max-width: calc(100vw - 64px) !important; }\\n.toolbar {\\n  background-color: #616161;\\n  color: white;\\n  z-index: 20;\\n  position: fixed;\\n  max-width: calc(100vw -  190px);\\n  -webkit-transition: max-width 0.5s; }\\n.toolbar .menu-icon {\\n    min-width: unset;\\n    padding: 0; }\\n.toolbar .menu-icon i {\\n      font-size: 2.5em; }\\n.toolbar .menu-icon.right {\\n    margin: 0 10px; }\\n.toolbar .menu-icon.right i {\\n      font-size: 2.2em; }\\n.right-content {\\n  margin-left: 190px;\\n  transition: margin-left 0.5s; }\\n.main-content {\\n  background-color: #f5f5f5;\\n  min-height: calc(100vh - 64px);\\n  padding-top: 64px;\\n  height: 100%;\\n  height: auto; }\\n.right-content-minimized {\\n  margin-left: 64px !important; }\\n\"","import { GhostService } from './../shared/services/ghost.service';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.scss']\n})\nexport class AdminComponent implements OnInit, OnDestroy {\n  minimized = false;\n  constructor(private route: Router, private ghostService: GhostService) {}\n  ghostSubscription: Subscription;\n  ghostStatus: boolean;\n  ngOnInit() {\n    this.ghostSubscription = this.ghostService.ghostStatusObservable.subscribe(\n      status => {\n        this.ghostStatus = status;\n      }\n    );\n    this.ghostService.getStatus();\n    this.route.navigate(['admin/o']);\n  }\n\n  toggleMenu() {\n    this.minimized = !this.minimized;\n  }\n\n  ngOnDestroy() {\n    this.ghostSubscription.unsubscribe();\n  }\n}\n","import { CategoryPipe } from './../shared/pipes/category.pipe';\nimport { ReportListPipe } from './../shared/pipes/report-list.pipe';\nimport { SearchNamePipe } from './../shared/pipes/search-name.pipe';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AdminComponent } from './admin.component';\nimport { OrganizationListComponent } from './organization/organization-list/organization-list.component';\nimport { AngularMaterialModule } from '../../angular-material/angular-material.module';\nimport { AdminRoutingModule } from './admin-routing.module';\nimport {\n  OrganizationDetailsComponent,\n  DeleteOrganizationConfirmation,\n  DeleteDataruleConfirmation\n} from './organization-details/organization-details.component';\nimport { OrganizationComponent } from './organization/organization.component';\nimport {\n  UserDetailsComponent,\n  DeleteUserConfirmation\n} from './user-details/user-details.component';\nimport {\n  AdminReportDetailsComponent,\n  DeleteReportConfirmation\n} from './admin-report-details/admin-report-details.component';\nimport { UserListComponent } from '../shared/common-view/user-list/user-list.component';\nimport { ReportListComponent } from '../shared/common-view/report-list/report-list.component';\nimport { AllUsersComponent } from './all-users/all-users.component';\nimport { AllReportsComponent } from './all-reports/all-reports.component';\nimport { AllUserListComponent } from './all-users/all-user-list/all-user-list.component';\nimport { AllReportListComponent } from './all-reports/all-report-list/all-report-list.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { PaginationPipe } from '../shared/pipes/pagination.pipe';\nimport { OrgListPipe } from '../shared/pipes/org-list.pipe';\nimport { UserListPipe } from '../shared/pipes/user-list.pipe';\nimport { DataRulesListPipe } from '../shared/pipes/datarules-list.pipe';\nimport { CreateNewOrganizationComponent } from './create-new-organization/create-new-organization.component';\nimport { CreateNewReportComponent } from './create-new-report/create-new-report.component';\nimport { CreateNewDataruleComponent } from './create-new-datarule/create-new-datarule.component';\nimport {\n  CreateNewUserComponent,\n  NewUserOrganizationConfirmation\n} from './create-new-user/create-new-user.component';\nimport { ShareReportComponent } from './share-report/share-report.component';\nimport { EditOrganizationComponent } from './edit-organization/edit-organization.component';\nimport { EditDataRuleComponent } from './edit-data-rule/edit-data-rule.component';\nimport { EditUserComponent } from './edit-user/edit-user.component';\nimport { EditReportComponent } from './edit-report/edit-report.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { GhostComponent } from './ghost/ghost.component';\n\n@NgModule({\n  declarations: [\n    AdminComponent,\n    OrganizationListComponent,\n    OrganizationDetailsComponent,\n    OrganizationComponent,\n    UserDetailsComponent,\n    AdminReportDetailsComponent,\n    UserListComponent,\n    ReportListComponent,\n    AllUsersComponent,\n    AllReportsComponent,\n    AllUserListComponent,\n    AllReportListComponent,\n    SearchNamePipe,\n    PaginationPipe,\n    OrgListPipe,\n    UserListPipe,\n    DataRulesListPipe,\n    CreateNewOrganizationComponent,\n    CreateNewReportComponent,\n    CreateNewDataruleComponent,\n    CreateNewUserComponent,\n    NewUserOrganizationConfirmation,\n    ShareReportComponent,\n    EditOrganizationComponent,\n    EditDataRuleComponent,\n    EditUserComponent,\n    CategoryPipe,\n    EditReportComponent,\n    DeleteOrganizationConfirmation,\n    DeleteUserConfirmation,\n    DeleteReportConfirmation,\n    DeleteDataruleConfirmation,\n    GhostComponent\n  ],\n  imports: [\n    CommonModule,\n    AdminRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SharedModule\n  ],\n  entryComponents: [\n    NewUserOrganizationConfirmation,\n    DeleteOrganizationConfirmation,\n    DeleteUserConfirmation,\n    DeleteReportConfirmation,\n    DeleteDataruleConfirmation\n  ]\n})\nexport class AdminModule {}\n","module.exports = \"<div class=\\\"breadcrumb-container\\\">\\n  <div class=\\\"breadcrumb\\\"> <span class=\\\"active\\\"><i class=\\\"material-icons\\\">\\n        assessment </i> Report List</span></div>\\n</div>\\n\\n<div class=\\\"main-content-view\\\" *ngIf=\\\"viewInitialized  && reports.length > 0\\\">\\n  <app-report-list [reports]=\\\"reports\\\" [allowAdd]=true (reportID)=\\\"goToReport($event)\\\" style=\\\"display:flex; width: 100%; margin-bottom: 10px;\\\"></app-report-list>\\n\\n</div>\\n\\n<div *ngIf=\\\"!viewInitialized\\\" style=\\\"margin:auto; padding-top: 80px; text-align: center\\\">\\n  <mat-spinner style=\\\"margin:auto\\\"></mat-spinner>\\n  <p style=\\\"text-align: center;\\\">Reports Loading...</p>\\n</div>\\n\\n<div *ngIf=\\\"viewInitialized && reports.length === 0 \\\" class=\\\"empty-list\\\" >\\n  <div class=\\\"icons\\\">\\n    <i class=\\\"material-icons main\\\"> assessment </i>\\n    <button routerLink=\\\"../new-report\\\" mat-fab class=\\\"button-fab add\\\" color=\\\"primary-button\\\"> <i class=\\\"material-icons\\\">\\n        add\\n      </i>\\n    </button>\\n  </div>\\n  <h2 class=\\\"title\\\"> There are no reports.</h2>\\n  <h3 class=\\\"create-text\\\" routerLink=\\\"../new-report\\\"> Create new report</h3>\\n</div>\\n\"","module.exports = \"\"","import { ReportService } from './../../../shared/services/report.service';\nimport { Component, OnInit } from '@angular/core';\nimport * as Filter from '../../../shared/view-models/filter.viewmodel';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport * as ReportViewModel from '../../../shared/view-models/report.viewmodel';\n@Component({\n  selector: 'app-all-report-list',\n  templateUrl: './all-report-list.component.html',\n  styleUrls: ['./all-report-list.component.scss']\n})\nexport class AllReportListComponent implements OnInit {\n  constructor(private route: ActivatedRoute, private router: Router, private reportService: ReportService) {}\n  reports: ReportViewModel.SimpleReport[];\n  viewInitialized = false;\n  async ngOnInit() {\n    try {\n      this.reports = await this.reportService.getReportByOrganization('orgID');\n      this.viewInitialized = await true;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  goToReport(reportID) {\n    this.router.navigate(['/admin/reports/r', reportID], { relativeTo: this.route });\n  }\n}\n","module.exports = \"<router-outlet></router-outlet>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-all-reports',\n  templateUrl: './all-reports.component.html',\n  styleUrls: ['./all-reports.component.scss']\n})\nexport class AllReportsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"breadcrumb-container\\\">\\n  <div class=\\\"breadcrumb\\\"> <span class=\\\"active\\\"> <i class=\\\"material-icons\\\">\\n        person_outline </i> User List</span></div>\\n</div>\\n\\n<div class=\\\"main-content-view\\\" *ngIf=\\\"viewInitialized && users.length > 0 \\\" >\\n  <app-user-list [users]=\\\"users\\\" (userID)=\\\"goToUser($event)\\\" style=\\\"display:flex; width: 100%; margin-bottom: 10px;\\\"></app-user-list>\\n</div>\\n\\n<div *ngIf=\\\"!viewInitialized\\\" style=\\\"margin:auto; padding-top: 80px; text-align: center\\\">\\n  <mat-spinner style=\\\"margin:auto\\\"></mat-spinner>\\n  <p style=\\\"text-align: center;\\\">Users Loading...</p>\\n</div>\\n\\n<div *ngIf=\\\"viewInitialized && users.length === 0 \\\" class=\\\"empty-list\\\" >\\n    <div class=\\\"icons\\\">\\n      <i class=\\\"material-icons main\\\"> person_outline </i>\\n      <button routerLink=\\\"../new-user\\\" mat-fab class=\\\"button-fab add\\\" color=\\\"primary-button\\\"> <i class=\\\"material-icons\\\">\\n          add\\n        </i>\\n      </button>\\n    </div>\\n    <h2 class=\\\"title\\\"> There are no users.</h2>\\n    <h3 class=\\\"create-text\\\" routerLink=\\\"../new-user\\\"> Create new user</h3>\\n  </div>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { UserService } from '../../../shared/services/user.service';\nimport * as UserViewModel from '../../../shared/view-models/user.viewmodel';\n\n@Component({\n  selector: 'app-all-user-list',\n  templateUrl: './all-user-list.component.html',\n  styleUrls: ['./all-user-list.component.scss']\n})\nexport class AllUserListComponent implements OnInit {\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private userService: UserService\n  ) {}\n  viewInitialized = false;\n  users: any;\n  async ngOnInit() {\n    try {\n      this.users = await  this.userService.timeout();\n      this.userService.setLocalUsers(this.users);\n      this.viewInitialized = true;\n    } catch (error) {\n      console.log('error');\n    }\n  }\n\n  goToUser(userId) {\n    this.router.navigate(['/admin/users/u', userId], {\n      relativeTo: this.route\n    });\n  }\n}\n","module.exports = \"<router-outlet></router-outlet>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport * as Filters from '../../shared/view-models/filter.viewmodel';\nimport { Router, ActivatedRoute } from '@angular/router';\n@Component({\n  selector: 'app-all-users',\n  templateUrl: './all-users.component.html',\n  styleUrls: ['./all-users.component.scss']\n})\nexport class AllUsersComponent implements OnInit {\n  constructor(private router: Router, private route: ActivatedRoute) {}\n\n  filters: Filters.UserFilter;\n\n  ngOnInit() {\n    this.filters = {\n      name: '',\n      organizationID: 'ALL',\n      role: '',\n      sort: ''\n    };\n  }\n\n  goToUser(userId) {\n    this.router.navigate(['./u', userId], { relativeTo: this.route });\n  }\n}\n","module.exports = \"<div class=\\\"form-container\\\">\\n  <div class=\\\"card\\\">\\n    <div class=\\\"form\\\">\\n      <form [formGroup]=\\\"dataruleFormGroup\\\" *ngIf=\\\"dataruleFormGroup\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n        <h2 class=\\\"title\\\"> Create New Data Rule</h2>\\n        <hr>\\n        <div class=\\\"row\\\">\\n          <h4 class=\\\"input-header\\\"> New Rule for {{organization.name}}</h4>\\n          <i class=\\\"material-icons form-icon\\\">\\n            dns\\n          </i>\\n          <mat-form-field appearance=\\\"fill\\\" style=\\\"width:80%\\\">\\n            <mat-label>Rule Name</mat-label>\\n            <input formControlName=\\\"name\\\" matInput placeholder=\\\"Enter Name\\\">\\n            <mat-error>\\n              Rule name is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n          <i class=\\\"material-icons info-icon\\\">\\n            info\\n          </i>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <i class=\\\"material-icons form-icon\\\">\\n            storage\\n          </i>\\n          <mat-form-field appearance=\\\"fill\\\" style=\\\"width:80%\\\">\\n            <mat-label>Data Source</mat-label>\\n            <mat-select formControlName=\\\"datasource\\\">\\n              <mat-option *ngFor=\\\"let datasource of datasources\\\" value=\\\"{{datasource._id}}\\\">{{datasource.name}}</mat-option>\\n            </mat-select>\\n            <mat-error>\\n              Data source is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n          <i class=\\\"material-icons info-icon\\\">\\n            info\\n          </i>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <i class=\\\"material-icons form-icon\\\">\\n            priority_high\\n          </i>\\n          <mat-form-field appearance=\\\"fill\\\" style=\\\"width:80%\\\">\\n            <mat-label>Identifier</mat-label>\\n            <mat-select formControlName=\\\"identifier\\\">\\n                <mat-option *ngFor=\\\"let identifier of identifiers\\\" value=\\\"{{identifier}}\\\">{{identifier}}</mat-option>\\n\\n              </mat-select>\\n            <mat-error>\\n              Identifier is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n          <i class=\\\"material-icons info-icon\\\">\\n            info\\n          </i>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <i class=\\\"material-icons form-icon\\\">\\n            compare\\n          </i>\\n          <mat-form-field appearance=\\\"fill\\\" style=\\\"width:80%\\\">\\n            <mat-label>Condition</mat-label>\\n            <mat-select formControlName=\\\"condition\\\">\\n              <mat-option value=\\\"equals\\\">Equals</mat-option>\\n              <mat-option value=\\\"contains\\\">Contains</mat-option>\\n              <mat-option value=\\\"excludes\\\">Excludes</mat-option>\\n            </mat-select>\\n            <mat-error>\\n              Condition is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n          <i class=\\\"material-icons info-icon\\\">\\n            info\\n          </i>\\n\\n        </div>\\n        <div class=\\\"row\\\">\\n          <i class=\\\"material-icons form-icon\\\">\\n            title\\n          </i>\\n          <mat-form-field appearance=\\\"fill\\\" style=\\\"width:80%\\\">\\n            <mat-label>Token</mat-label>\\n            <input formControlName=\\\"token\\\" matInput placeholder=\\\"Select Data Source\\\">\\n            <mat-error>\\n              Token is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n          <i class=\\\"material-icons info-icon\\\">\\n            info\\n          </i>\\n        </div>\\n        <div class=\\\"buttons\\\">\\n          <button mat-button routerLink=\\\"..\\\">Cancel</button>\\n          <button class=\\\"done primary\\\" [disabled]=\\\"!dataruleFormGroup.valid\\\" [ngClass]=\\\"{'button-disabled': !dataruleFormGroup.valid}\\\"\\n            mat-flat-button type=\\\"submit\\\">Done </button>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"\"","import { OrganizationService } from 'src/app/shared/services/organization.service';\nimport { Subscription } from 'rxjs';\nimport { ActivatedRoute } from '@angular/router';\nimport { DatarulesService } from './../../shared/services/datarules.service';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport * as DataViewModel from '../../shared/view-models/data.viewmodel';\n\n@Component({\n  selector: 'app-create-new-datarule',\n  templateUrl: './create-new-datarule.component.html',\n  styleUrls: ['./create-new-datarule.component.scss']\n})\nexport class CreateNewDataruleComponent implements OnInit, OnDestroy {\n  dataruleFormGroup: FormGroup;\n  datasources: DataViewModel.DataSource[];\n  constructor(\n    private formBuilder: FormBuilder,\n    private datarulesService: DatarulesService,\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n  ) {}\n  identifiers: string[];\n  organizationId;\n  sub: Subscription;\n  organization;\n  async ngOnInit() {\n    try {\n      this.sub = this.route.params.subscribe(params => {\n        this.organizationId = params['id'];\n      });\n      this.datasources = await this.datarulesService.getAllDataSourceForOrganization(\n        'id'\n      );\n\n      this.identifiers = [\n        'Identifier 1',\n        'Identifier 2',\n        'Identifier 3',\n        'Identifier 4'\n      ];\n      this.dataruleFormGroup = this.formBuilder.group({\n        name: ['', [Validators.required,  this.noWhitespaceValidator]],\n        datasource: ['', Validators.required],\n        identifier: ['', Validators.required],\n        condition: ['', Validators.required],\n        token: ['', [Validators.required,  this.noWhitespaceValidator]]\n      });\n      this.organization = await this.organizationService.getLocalOrganization(this.organizationId);\n    } catch (error) {}\n  }\n\n  ngOnDestroy() {\n    if (this.sub) {\n      this.sub.unsubscribe();\n    }\n  }\n\n  public noWhitespaceValidator(control: FormControl) {\n    const isWhitespace = (control.value || '').trim().length === 0;\n    const isValid = !isWhitespace;\n    return isValid ? null : { whitespace: true };\n  }\n\n  onSubmit() {\n    const form = this.dataruleFormGroup.value;\n    const datarule = {\n      name: form.name,\n      datasourceID: form.datasource,\n      identifier: form.identifier,\n      condition: form.condition,\n      token: form.token,\n      organizationID: this.organizationId\n    };\n    console.log(datarule);\n    this.datarulesService.createNewDataRule(datarule);\n  }\n}\n","module.exports = \"<div class=\\\"form-container\\\">\\n  <div class=\\\"card\\\">\\n    <div class=\\\"form\\\" *ngIf=\\\"orgForm\\\">\\n      <!-- *********************************  -->\\n      <form [formGroup]=\\\"orgForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n        <h2 class=\\\"title\\\"> Create New Organization</h2>\\n        <hr>\\n        <h4 class=\\\"input-header\\\"> Please enter organization information </h4>\\n        <div class=\\\"row\\\">\\n          <i class=\\\"material-icons form-icon\\\">\\n            business\\n          </i>\\n          <mat-form-field appearance=\\\"fill\\\" style=\\\"width:80%\\\">\\n            <mat-label>Organization Name</mat-label>\\n            <input matInput type=\\\"text\\\" id=\\\"name\\\" placeholder=\\\"Enter Name\\\" formControlName=\\\"orgName\\\">\\n            <mat-error>\\n              Organization name is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n          <i class=\\\"material-icons info-icon\\\" matTooltip=\\\"{{orgNameTooltip}}\\\">\\n            info\\n          </i>\\n        </div>\\n        <h4 class=\\\"input-header\\\">Categories\\n          <i class=\\\"material-icons info-icon\\\" matTooltip=\\\"{{orgNameTooltip}}\\\">\\n            info\\n          </i>\\n        </h4>\\n        <div formArrayName=\\\"itemRows\\\">\\n          <div *ngFor=\\\"let itemrow of orgForm.controls.itemRows.controls; let i=index\\\" [formGroupName]=\\\"i\\\">\\n            <div class=\\\"row\\\">\\n              <i class=\\\"material-icons form-icon\\\">\\n                book\\n              </i>\\n              <mat-form-field appearance=\\\"fill\\\" style=\\\"width:80%\\\">\\n                <mat-label>Category </mat-label>\\n                <input type=\\\"text\\\" placeholder=\\\"Category\\\" aria-label=\\\"Number\\\" matInput formControlName=\\\"itemname\\\" [matAutocomplete]=\\\"auto\\\">\\n                <mat-autocomplete #auto=\\\"matAutocomplete\\\">\\n                  <mat-option *ngFor=\\\"let option of options | category: this.orgForm.controls.itemRows.controls[i].controls.itemname.value\\\" [value]=\\\"option\\\">\\n                    {{option}}\\n                  </mat-option>\\n                </mat-autocomplete>\\n                <mat-error>\\n                  Category name is <strong>required</strong>\\n                </mat-error>\\n                <mat-error *ngIf=\\\"orgForm.get('itemRows').getError('duplicate')\\\">\\n                  Duplicated Category\\n                </mat-error>\\n              </mat-form-field>\\n              <i class=\\\"material-icons close-icon\\\" *ngIf=\\\"orgForm?.controls.itemRows?.controls.length > 1\\\" (click)=\\\"deleteRow(i)\\\">\\n                close\\n              </i>\\n            </div>\\n          </div>\\n        </div>\\n        <p class=\\\"custom-error\\\" *ngIf=\\\"orgForm.get('itemRows').getError('duplicate')\\\">\\n          Cannot have duplicate categories </p>\\n        <p class=\\\"add-row\\\" (click)=\\\"addNewRow()\\\">+ Add another category</p>\\n        <div class=\\\"buttons\\\">\\n          <button mat-button routerLink=\\\"../list\\\">Cancel</button>\\n          <button class=\\\"done primary\\\" [disabled]=\\\"!orgForm.valid\\\" [ngClass]=\\\"{'button-disabled': !orgForm.valid}\\\" mat-flat-button type=\\\"submit\\\">Done\\n          </button>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"\"","import { OrganizationService } from './../../shared/services/organization.service';\nimport { Component, OnInit, OnChanges } from '@angular/core';\nimport {\n  FormControl,\n  FormBuilder,\n  Validators,\n  FormArray\n} from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-create-new-organization',\n  templateUrl: './create-new-organization.component.html',\n  styleUrls: ['./create-new-organization.component.scss']\n})\nexport class CreateNewOrganizationComponent implements OnInit {\n  constructor(\n    private organizatinonService: OrganizationService,\n    private _fb: FormBuilder\n  ) {}\n  options = [];\n\n  orgNameTooltip =\n    'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Peccata paria. Restinguet citius, si ardentem acceperit. Sed quid sentiat, non videtis. Vide, quantum, inquam, fallare, Torquate. Age, inquies, ista parva sunt.';\n\n  filteredOptions: Observable<string[]>;\n  selectedCategories = [''];\n\n  orgForm: FormGroup;\n\n  async ngOnInit() {\n    try {\n      this.options = await this.organizatinonService.getAllCategories();\n      this.orgForm = await this._fb.group({\n        orgName: new FormControl('', [\n          Validators.required,\n          this.noWhitespaceValidator\n        ]),\n        itemRows: this._fb.array([this.initItemRows()], this.noDuplicate)\n      });\n\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n\n\n  addAnotherCategory() {\n    this.selectedCategories.push('');\n  }\n\n  initItemRows() {\n    return this._fb.group({\n      itemname: ['', [Validators.required, this.noWhitespaceValidator]]\n    });\n  }\n\n  addNewRow() {\n    const control = <FormArray>this.orgForm.controls['itemRows'];\n    control.push(this.initItemRows());\n  }\n\n  deleteRow(index: number) {\n    const control = <FormArray>this.orgForm.controls['itemRows'];\n    control.removeAt(index);\n  }\n\n  get controls() {\n    return this.orgForm.controls;\n  }\n\n  onSubmit() {\n    const temp = [];\n\n    for (const itemname of this.orgForm.value.itemRows) {\n      temp.push(itemname.itemname);\n    }\n    const org = {\n      name: this.orgForm.value.orgName,\n      categories: temp\n    };\n    this.organizatinonService.createNewOrganization(org);\n  }\n\n  public noWhitespaceValidator(control: FormControl) {\n    const isWhitespace = (control.value || '').trim().length === 0;\n    const isValid = !isWhitespace;\n    return isValid ? null : { whitespace: true };\n  }\n\n  public getForm() {\n    return this.orgForm;\n  }\n\n  public noDuplicate(array): Validators {\n    if (array.errors) {\n      console.log(array.errors.duplicate);\n    }\n    if (array.value) {\n      const temp = [];\n      for (const itemname of array.value) {\n        if (!temp.includes(itemname.itemname)) {\n          temp.push(itemname.itemname);\n        } else {\n          return { duplicate: true };\n        }\n      }\n    }\n    return null;\n  }\n}\n","module.exports = \"<div class=\\\"form-container\\\">\\n  <div class=\\\"card\\\">\\n    <div class=\\\"form\\\">\\n      <h2 class=\\\"title\\\"> Create New Report</h2>\\n      <hr>\\n      <mat-horizontal-stepper #stepper>\\n        <!-- First Step -->\\n        <mat-step [stepControl]=\\\"orgForm\\\" *ngIf=\\\"orgForm && !organizationID\\\">\\n          <form [formGroup]=\\\"orgForm\\\">\\n\\n            <div class=\\\"row\\\">\\n              <h4 class=\\\"input-header\\\"> Please select organization for new report <i class=\\\"material-icons info-icon\\\">\\n                  info\\n                </i></h4>\\n              <i class=\\\"material-icons form-icon\\\">\\n                business\\n              </i>\\n              <mat-form-field appearance=\\\"fill\\\" style=\\\"width:80%\\\">\\n                <mat-label>Select Organization</mat-label>\\n                <mat-select formControlName=\\\"organization\\\">\\n                  <mat-option (click)=\\\"selectOrg()\\\" *ngFor=\\\"let organization of organizations\\\" value=\\\"{{organization._id}}\\\">{{organization.name}}</mat-option>\\n                </mat-select>\\n                <mat-error>\\n                  Organization is <strong>required</strong>\\n                </mat-error>\\n              </mat-form-field>\\n            </div>\\n            <div class=\\\"row\\\">\\n\\n              <p class=\\\"create-new-text\\\">Organization not on the list? <span class=\\\"create-new-button\\\">Create New Organization </span></p>\\n            </div>\\n            <div class=\\\"buttons\\\">\\n              <button mat-button type='button' routerLink=\\\"../\\\">Cancel</button>\\n              <button mat-button type='button' mat-flat-button class=\\\"done primary\\\" [disabled]=\\\"!orgForm.valid\\\" [ngClass]=\\\"{'button-disabled': !orgForm.valid}\\\"\\n                matStepperNext>Next</button>\\n            </div>\\n          </form>\\n        </mat-step>\\n\\n        <!-- 2nd -->\\n        <mat-step [stepControl]=\\\"reportInfoForm\\\" *ngIf=\\\"reportInfoForm && selectedOrg || reportInfoForm && organizationID\\\">\\n          <form [formGroup]=\\\"reportInfoForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n            <div class=\\\"row\\\">\\n              <h4 class=\\\"input-header\\\">New Report for {{selectedOrg.name}} </h4>\\n              <h4 class=\\\"input-header\\\">Please enter report information</h4>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <i class=\\\"material-icons form-icon\\\">\\n                assessment\\n              </i>\\n              <mat-form-field appearance=\\\"fill\\\" style=\\\"width:80%\\\">\\n                <mat-label>Report Name</mat-label>\\n                <input formControlName=\\\"name\\\" matInput placeholder=\\\"Report Name\\\">\\n                <mat-error>\\n                  Report name is <strong>required</strong>\\n                </mat-error>\\n              </mat-form-field>\\n              <i class=\\\"material-icons info-icon\\\">\\n                info\\n              </i>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <i class=\\\"material-icons form-icon\\\">\\n                link\\n              </i>\\n              <mat-form-field appearance=\\\"fill\\\" style=\\\"width:80%\\\">\\n                <mat-label>Data Studio Link</mat-label>\\n                <input formControlName=\\\"datastudioLink\\\" matInput placeholder=\\\"Data Studio Link\\\">\\n                <mat-error>\\n                  Data Studio Link is <strong>required</strong>\\n                </mat-error>\\n              </mat-form-field>\\n              <i class=\\\"material-icons info-icon\\\">\\n                info\\n              </i>\\n            </div>\\n\\n            <div formArrayName=\\\"datasourceRows\\\">\\n              <div *ngFor=\\\"let datasource of reportInfoForm.controls.datasourceRows.controls; let i=index\\\" [formGroupName]=\\\"i\\\">\\n                <h4 class=\\\"input-header\\\">Data Source {{i+1}}\\n                    <i class=\\\"material-icons info-icon\\\">\\n                        info\\n                      </i>\\n                 </h4>\\n                <div class=\\\"row\\\">\\n                  <i class=\\\"material-icons form-icon\\\">\\n                    storage\\n                  </i>\\n                  <mat-form-field appearance=\\\"fill\\\" style=\\\"width:80%\\\">\\n                    <mat-label>Data Source</mat-label>\\n                    <mat-select formControlName=\\\"name\\\">\\n                      <mat-option *ngFor=\\\"let datasource of datasources\\\" value=\\\"{{datasource.name}}\\\">{{datasource.name}}</mat-option>\\n                    </mat-select>\\n                    <mat-error>\\n                      Data Source is <strong>required</strong>\\n                    </mat-error>\\n                  </mat-form-field>\\n                  <i class=\\\"material-icons close-icon\\\" *ngIf=\\\"reportInfoForm?.controls.datasourceRows?.controls.length > 1\\\" (click)=\\\"deleteRow(i)\\\">\\n                      close\\n                    </i>\\n                </div>\\n                <div class=\\\"row\\\">\\n                  <i class=\\\"material-icons form-icon\\\">\\n                    class\\n                  </i>\\n                  <mat-form-field appearance=\\\"fill\\\" style=\\\"width:80%\\\">\\n                    <mat-label>Data Studio ID</mat-label>\\n                    <input formControlName=\\\"_id\\\" matInput placeholder=\\\"Data Studio ID\\\">\\n                    <mat-error>\\n                      Data Studio ID is <strong>required</strong>\\n                    </mat-error>\\n                  </mat-form-field>\\n                  <i class=\\\"material-icons info-icon\\\">\\n                    info\\n                  </i>\\n                </div>\\n              </div>\\n            </div>\\n            <p class=\\\"custom-error\\\" *ngIf=\\\"reportInfoForm.get('datasourceRows').getError('duplicate')\\\">\\n                Cannot have duplicate Data Sources </p>\\n\\n            <p class=\\\"add-row\\\" (click)=\\\"addNewRow()\\\">+ Add another Data source</p>\\n            <div class=\\\"buttons\\\">\\n              <button mat-button type='button' *ngIf=\\\"!organizationID\\\" (click)=\\\"selectStep(0)\\\">Back</button>\\n              <button mat-button type='button' *ngIf=\\\"organizationID\\\" routerLink=\\\"../\\\">Back</button>\\n              <button mat-button type='submit' mat-flat-button class=\\\"done primary\\\" [disabled]=\\\"!reportInfoForm.valid\\\" [ngClass]=\\\"{'button-disabled': !reportInfoForm.valid}\\\">Done</button>\\n            </div>\\n          </form>\\n        </mat-step>\\n      </mat-horizontal-stepper>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \".create-new-button:hover {\\n  cursor: pointer; }\\n\\n::ng-deep .mat-horizontal-stepper-header-container {\\n  display: none !important; }\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport * as ReportViewModel from '../../shared/view-models/report.viewmodel';\nimport { ReportService } from 'src/app/shared/services/report.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { OrganizationService } from 'src/app/shared/services/organization.service';\nimport * as OrganizationViewModel from './../../shared/view-models/organization.viewmodel';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  FormControl,\n  FormArray\n} from '@angular/forms';\nimport * as DataViewModel from '../../shared/view-models/data.viewmodel';\nimport { DatarulesService } from 'src/app/shared/services/datarules.service';\nimport { MatStepper } from '@angular/material';\n\n@Component({\n  selector: 'app-create-new-report',\n  templateUrl: './create-new-report.component.html',\n  styleUrls: ['./create-new-report.component.scss']\n})\nexport class CreateNewReportComponent implements OnInit {\n  @ViewChild('stepper')\n  stepper: MatStepper;\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private organizationService: OrganizationService,\n    private formBuilder: FormBuilder,\n    private datarulesService: DatarulesService,\n    private reportService: ReportService\n  ) {}\n  reports: ReportViewModel.SimpleReport[];\n  organizations: OrganizationViewModel.SimpleOrganization[];\n  orgForm: FormGroup;\n  reportInfoForm: FormGroup;\n  datasources: DataViewModel.DataSource[];\n  selectedOrg;\n  organizationID;\n  sub: any;\n\n  async ngOnInit() {\n    try {\n      this.datasources = await this.datarulesService.getAllDataSourceForOrganization(\n        'id'\n      );\n      this.orgForm = this.formBuilder.group({\n        organization: ['', Validators.required]\n      });\n      this.reportInfoForm = this.formBuilder.group({\n        name: ['', [Validators.required, this.noWhitespaceValidator]],\n        datastudioLink: ['', [Validators.required, this.noWhitespaceValidator]],\n        datasourceRows: this.formBuilder.array(\n          [this.initItemRows()],\n          this.noDuplicate\n        )\n      });\n      this.sub = this.route.params.subscribe(params => {\n        this.organizationID = params['id'];\n      });\n      if (this.organizationID) {\n        this.selectedOrg = await this.organizationService.getLocalOrganization(\n          this.organizationID\n        );\n        console.log(this.selectedOrg);\n      } else {\n        this.organizations = await this.organizationService.getAllOrganizationsWithNoDetails();\n      }\n      console.log(this.reportInfoForm.controls.datasourceRows);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  selectStep(id) {\n    this.stepper.selectedIndex = id;\n  }\n\n  initItemRows() {\n    return this.formBuilder.group({\n      name: ['', [Validators.required]],\n      _id: ['', [Validators.required, this.noWhitespaceValidator]]\n    });\n  }\n\n  addNewRow() {\n    const control = <FormArray>this.reportInfoForm.controls['datasourceRows'];\n    control.push(this.initItemRows());\n  }\n\n  deleteRow(index: number) {\n    const control = <FormArray>this.reportInfoForm.controls['datasourceRows'];\n    control.removeAt(index);\n  }\n\n  selectOrg() {\n    this.selectedOrg = this.organizations.find(org => {\n      return org._id === this.orgForm.value.organization;\n    });\n  }\n\n  public noWhitespaceValidator(control: FormControl) {\n    const isWhitespace = (control.value || '').trim().length === 0;\n    const isValid = !isWhitespace;\n    return isValid ? null : { whitespace: true };\n  }\n\n  public noDuplicate(array): Validators {\n    if (array.errors) {\n      console.log(array.errors.duplicate);\n    }\n    if (array.value) {\n      const temp = [];\n      for (const datasource of array.value) {\n        if (!temp.includes(datasource.name)) {\n          if (datasource.name !== '') {\n            temp.push(datasource.name);\n          }\n        } else {\n          return { duplicate: true };\n        }\n      }\n      return null;\n    }\n  }\n\n  onSubmit() {\n    let organization;\n    if (this.organizationID) {\n      organization = this.organizationID;\n    } else {\n      organization = this.orgForm.value.organization;\n    }\n    const rForm = this.reportInfoForm.value;\n    const report = {\n      name: rForm.name,\n      datastudioLink: rForm.datastudioLink,\n      datasources: rForm.datasourceRows,\n      organizationID: organization\n    };\n    this.reportService.createNewReport(report);\n    console.log(report);\n  }\n}\n","module.exports = \"<div class=\\\"form-container\\\">\\n  <div class=\\\"card\\\">\\n    <div class=\\\"form\\\">\\n      <h2 class=\\\"title\\\"> Create New User</h2>\\n      <hr>\\n      <mat-horizontal-stepper linear #stepper *ngIf=\\\"firstFormGroup && secondFormGroup\\\">\\n        <!-- First Step-->\\n        <mat-step [stepControl]=\\\"firstFormGroup\\\">\\n            <form [formGroup]=\\\"firstFormGroup\\\">\\n              <ng-template matStepLabel>Fill out your name</ng-template>\\n              <div class=\\\"row\\\">\\n                <h4 class=\\\"input-header\\\"> Please select role for new user <i class=\\\"material-icons info-icon\\\">\\n                    info\\n                  </i></h4>\\n                <i class=\\\"material-icons form-icon\\\">\\n                  business\\n                </i>\\n                <mat-form-field appearance=\\\"fill\\\" style=\\\"width:80%\\\">\\n                  <mat-label>Role</mat-label>\\n                  <mat-select formControlName=\\\"role\\\" [(value)]=\\\"roleSelected\\\" >\\n                    <mat-option value=\\\"admin\\\" (click)=\\\"checkRole()\\\">Admin</mat-option>\\n                    <mat-option value=\\\"viewer\\\" (click)=\\\"checkRole()\\\">Viewer</mat-option>\\n                  </mat-select>\\n                  <mat-error>\\n                      Role is <strong>required</strong>\\n                    </mat-error>\\n                </mat-form-field>\\n              </div>\\n              <div class=\\\"row\\\" *ngIf=\\\"roleSelected === 'viewer'\\\">\\n                <h4 class=\\\"input-header\\\"> Please select organization(s) for new user <i class=\\\"material-icons info-icon\\\">\\n                    info\\n                  </i></h4>\\n                <i class=\\\"material-icons form-icon\\\">\\n                  business\\n                </i>\\n                <mat-form-field appearance=\\\"fill\\\" style=\\\"width:80%\\\">\\n                  <mat-label>Select Organization(s)</mat-label>\\n                  <mat-select  formControlName=\\\"organizations\\\" [(value)]=\\\"selectedOrganizationIds\\\" multiple>\\n                    <mat-option *ngFor=\\\"let organization of organizations\\\" value=\\\"{{organization._id}}\\\">{{organization.name}}</mat-option>\\n                  </mat-select>\\n                  <mat-error>\\n                      Organization is <strong>required</strong>\\n                    </mat-error>\\n                </mat-form-field>\\n                <p class=\\\"create-new-text\\\">Organization not on the list? <span class=\\\"create-new-button\\\" routerLink=\\\"/admin/o/new-organization\\\">Create\\n                    New Organization </span></p>\\n              </div>\\n              <div class=\\\"buttons\\\">\\n                <button mat-button type='button'  routerLink=\\\"../\\\">Cancel</button>\\n                <button mat-button type='button' mat-flat-button class=\\\"done primary\\\" [disabled]=\\\"!firstFormGroup.valid\\\" [ngClass]=\\\"{'button-disabled': !firstFormGroup.valid}\\\" (click)=\\\"openDialog()\\\">Next</button>\\n              </div>\\n            </form>\\n        </mat-step>\\n        <!-- Second Step-->\\n        <mat-step [stepControl]=\\\"secondFormGroup\\\">\\n          <form [formGroup]=\\\"secondFormGroup\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n            <p class=\\\"description\\\" *ngIf=\\\"roleSelected === 'admin'\\\"> New Admin user</p>\\n            <p class=\\\"description\\\" *ngIf=\\\"roleSelected === 'viewer'\\\"> New Viewer for <span *ngFor=\\\"let org of selectedOrganizationNames; let i = index\\\">{{org.name}}<span *ngIf=\\\"i < selectedOrganizationNames.length - 1\\\">,</span>&nbsp;</span></p>\\n            <h4 class=\\\"input-header\\\"> Please enter user information </h4>\\n            <div class=\\\"row\\\">\\n              <i class=\\\"material-icons form-icon\\\">\\n                  person_outline\\n              </i>\\n              <mat-form-field appearance=\\\"fill\\\" style=\\\"width:80%\\\">\\n                <mat-label   >First Name</mat-label>\\n                <input formControlName=\\\"firstName\\\" matInput placeholder=\\\"\\\">\\n                <mat-error>\\n                  First Name is <strong>required</strong>\\n                </mat-error>\\n              </mat-form-field>\\n              <i class=\\\"material-icons info-icon\\\">\\n                info\\n              </i>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <i class=\\\"material-icons form-icon\\\">\\n                person_outline\\n              </i>\\n              <mat-form-field appearance=\\\"fill\\\" style=\\\"width:80%\\\">\\n                <mat-label >Last Name</mat-label>\\n                <input formControlName=\\\"lastName\\\" matInput placeholder=\\\"\\\">\\n                <mat-error>\\n                  Last Name is <strong>required</strong>\\n                </mat-error>\\n              </mat-form-field>\\n              <i class=\\\"material-icons info-icon\\\">\\n                info\\n              </i>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <i class=\\\"material-icons form-icon\\\">\\n                email\\n              </i>\\n              <mat-form-field appearance=\\\"fill\\\" style=\\\"width:80%\\\">\\n                <mat-label>Gmail</mat-label>\\n                <input  type=\\\"email\\\" formControlName=\\\"email\\\" matInput placeholder=\\\"\\\">\\n                <mat-error *ngIf=\\\"secondFormGroup?.controls.email?.errors?.required \\\">\\n                  Email is <strong>required</strong>\\n                </mat-error>\\n                <mat-error *ngIf=\\\"secondFormGroup?.controls.email?.errors?.email \\\">\\n                 Must be in email format\\n                </mat-error>\\n              </mat-form-field>\\n              <i class=\\\"material-icons info-icon\\\">\\n                info\\n              </i>\\n            </div>\\n            <div class=\\\"row\\\" *ngIf=\\\"allowSecondaryEmail\\\">\\n              <i class=\\\"material-icons form-icon\\\">\\n                alternate_email\\n              </i>\\n              <mat-form-field appearance=\\\"fill\\\" style=\\\"width:80%\\\">\\n                <mat-label  >Secondary Email</mat-label>\\n                <input formControlName=\\\"secondaryEmail\\\" type=\\\"email\\\" matInput placeholder=\\\"\\\">\\n                <mat-hint>Not Required</mat-hint>\\n                <mat-error *ngIf=\\\"secondFormGroup?.controls.secondaryEmail?.errors?.email \\\">\\n                  Must be in email format\\n                 </mat-error>\\n\\n              </mat-form-field>\\n              <i class=\\\"material-icons info-icon\\\">\\n                info\\n              </i>\\n            </div>\\n            <p class=\\\"add-row\\\"  *ngIf=\\\"!allowSecondaryEmail\\\" (click)=\\\"addSecondaryEmail()\\\">+ Add secondary email</p>\\n\\n            <div class=\\\"buttons\\\">\\n              <button mat-button matStepperPrevious type=\\\"button\\\">Back</button>\\n              <button class=\\\"done primary\\\" mat-flat-button  [disabled]=\\\"!secondFormGroup.valid\\\" [ngClass]=\\\"{'button-disabled': !secondFormGroup.valid}\\\" type=\\\"submit\\\">Done</button>\\n            </div>\\n          </form>\\n        </mat-step>\\n      </mat-horizontal-stepper>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \".create-new-button:hover {\\n  cursor: pointer; }\\n\\n::ng-deep .mat-horizontal-stepper-header-container {\\n  display: none !important; }\\n\"","import { UserService } from 'src/app/shared/services/user.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { OrganizationService } from './../../shared/services/organization.service';\nimport { Component, OnInit, ViewChild, Inject } from '@angular/core';\nimport * as OrganizationViewModel from './../../shared/view-models/organization.viewmodel';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  FormControl\n} from '@angular/forms';\nimport {\n  MatDialog,\n  MatDialogRef,\n  MAT_DIALOG_DATA,\n  MatStepper\n} from '@angular/material';\nimport * as UserViewModel from '../../shared/view-models/user.viewmodel';\n\n@Component({\n  selector: 'app-create-new-user',\n  templateUrl: './create-new-user.component.html',\n  styleUrls: ['./create-new-user.component.scss']\n})\nexport class CreateNewUserComponent implements OnInit {\n  @ViewChild('stepper')\n  stepper;\n\n  constructor(\n    private organizationService: OrganizationService,\n    private formBuilder: FormBuilder,\n    public dialog: MatDialog,\n    private route: ActivatedRoute,\n    private userService: UserService\n  ) {}\n  sub: any;\n  roleSelected;\n  organizations: OrganizationViewModel.SimpleOrganization[];\n  selectedOrganizationIds: string[];\n  firstFormGroup: FormGroup;\n  secondFormGroup: FormGroup;\n  selectedOrganizationNames: OrganizationViewModel.SimpleOrganization[];\n  allowSecondaryEmail = false;\n  organizationID;\n  async ngOnInit() {\n    try {\n      this.organizations = await this.organizationService.getAllOrganizationsWithNoDetails();\n      this.firstFormGroup = this.formBuilder.group({\n        role: ['', Validators.required]\n      });\n      this.secondFormGroup = this.formBuilder.group({\n        firstName: ['',  [Validators.required,  this.noWhitespaceValidator] ],\n        lastName: ['',  [Validators.required,  this.noWhitespaceValidator] ],\n        email: ['', [Validators.required, Validators.email, this.noWhitespaceValidator]],\n        secondaryEmail: ['', [Validators.email]]\n      });\n      this.sub = this.route.params.subscribe(params => {\n        this.organizationID = params['id'];\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n\n  checkRole() {\n    if (this.roleSelected === 'admin') {\n      this.firstFormGroup.removeControl('organizations');\n    }\n    if (this.roleSelected === 'viewer') {\n      this.firstFormGroup.addControl(\n        'organizations',\n        new FormControl('', Validators.required)\n      );\n    }\n  }\n\n  /**\n   * ON SUBMIT FOR CREATING NEW USER\n   */\n  onSubmit() {\n    const firstForm = this.firstFormGroup.value;\n    const secondForm = this.secondFormGroup.value;\n    let orgs = [];\n    if (firstForm.role === 'viewer') {\n      orgs = firstForm.organizations;\n    }\n    const newUser: UserViewModel.CreateNewUser = {\n      firstName : secondForm.firstName,\n      lastName : secondForm.lastName,\n      googleID : secondForm.email,\n      secondaryEmail: secondForm.secondaryEmail,\n      organizations : orgs,\n      role: firstForm.role\n    };\n    this.userService.createNewUser(newUser);\n    console.log(newUser);\n  }\n\n  openDialog(stepper: MatStepper) {\n    if (this.roleSelected === 'viewer') {\n      this.selectedOrganizationNames = this.organizations.filter(org => {\n        return this.selectedOrganizationIds.includes(org._id);\n      });\n    }\n    const dialogRef = this.dialog.open(NewUserOrganizationConfirmation, {\n      data: { orgs: this.selectedOrganizationNames, role: this.roleSelected }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.stepper.next();\n      }\n    });\n  }\n\n  addSecondaryEmail() {\n    this.allowSecondaryEmail = true;\n  }\n\n  public noWhitespaceValidator(control: FormControl) {\n    const isWhitespace = (control.value || '').trim().length === 0;\n    const isValid = !isWhitespace;\n    return isValid ? null : { whitespace: true };\n  }\n\n}\n\n@Component({\n  selector: 'new-user-organization-confirmation',\n  templateUrl: 'new-user-organization-confirmation.html'\n})\nexport class NewUserOrganizationConfirmation {\n  constructor(\n    public dialogRef: MatDialogRef<NewUserOrganizationConfirmation>,\n    @Inject(MAT_DIALOG_DATA) public data\n  ) {}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n","module.exports = \"<div class=\\\"dialog\\\" *ngIf=\\\"data.role === 'viewer'\\\">\\n  <h2 class=\\\"title\\\" >Multiple Viewer Access</h2>\\n  <div mat-dialog-content>\\n    <h4 class=\\\"subtitle\\\">Give this user Viewer Access for the following Organizations?</h4>\\n    <ul class=\\\"conditions\\\">\\n      <li *ngFor=\\\"let temp of data.orgs\\\"> {{temp.name}}</li>\\n    </ul>\\n  </div>\\n  <div mat-dialog-actions style=\\\"float:right\\\">\\n    <button mat-button (click)=\\\"onNoClick()\\\">Cancel</button>\\n    <button mat-button mat-flat-button [mat-dialog-close]=\\\"true\\\" class=\\\"primary\\\" cdkFocusInitial>Continue</button>\\n  </div>\\n</div>\\n\\n\\n<div class=\\\"dialog\\\" *ngIf=\\\"data.role === 'admin'\\\">\\n  <h2 class=\\\"title\\\"><i class=\\\"material-icons\\\">\\n    warning\\n    </i>Give Admin Access</h2>\\n  <div mat-dialog-content>\\n    <h4 class=\\\"subtitle\\\">Warning: Giving Admin access will grant the following:</h4>\\n    <ul  class=\\\"conditions\\\">\\n      <li> Lorem ipsum dolor sit amet, consectetur adipiscing elit.</li>\\n      <li> Lorem ipsum dolor sit amet, consectetur adipiscing elit.</li>\\n      <li> Lorem ipsum dolor sit amet, consectetur adipiscing elit.</li>\\n    </ul>\\n  </div>\\n  <div mat-dialog-actions style=\\\"float:right\\\">\\n    <button mat-button (click)=\\\"onNoClick()\\\">Cancel</button>\\n    <button mat-button mat-flat-button [mat-dialog-close]=\\\"true\\\" class=\\\"primary\\\" cdkFocusInitial>Continue</button>\\n  </div>\\n</div>\\n\"","module.exports = \"<div class=\\\"form-container\\\">\\n  <div class=\\\"card\\\">\\n    <div class=\\\"form\\\">\\n      <form [formGroup]=\\\"dataruleFormGroup\\\" *ngIf=\\\"dataruleFormGroup && dataRule\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n        <h2 class=\\\"title\\\">Edit Data Rule: <span class=\\\"input-header\\\">{{dataRule.name}} </span> </h2>\\n        <hr>\\n        <div class=\\\"row\\\">\\n          <h4 class=\\\"input-header\\\"> Editing rule for {{organization.name}}</h4>\\n          <i class=\\\"material-icons form-icon\\\">\\n            dns\\n          </i>\\n          <mat-form-field appearance=\\\"fill\\\" style=\\\"width:80%\\\">\\n            <mat-label>Rule Name</mat-label>\\n            <input formControlName=\\\"name\\\" matInput placeholder=\\\"Enter Name\\\">\\n            <mat-error>\\n              Rule name is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n          <i class=\\\"material-icons info-icon\\\">\\n            info\\n          </i>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <i class=\\\"material-icons form-icon\\\">\\n            storage\\n          </i>\\n          <mat-form-field appearance=\\\"fill\\\" style=\\\"width:80%\\\">\\n            <mat-label>Data Source</mat-label>\\n            <mat-select formControlName=\\\"datasource\\\">\\n              <mat-option *ngFor=\\\"let datasource of datasources\\\" value=\\\"{{datasource._id}}\\\">{{datasource.name}}</mat-option>\\n            </mat-select>\\n            <mat-error>\\n              Data source is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n          <i class=\\\"material-icons info-icon\\\">\\n            info\\n          </i>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <i class=\\\"material-icons form-icon\\\">\\n            priority_high\\n          </i>\\n          <mat-form-field appearance=\\\"fill\\\" style=\\\"width:80%\\\">\\n            <mat-label>Identifier</mat-label>\\n            <mat-select formControlName=\\\"identifier\\\">\\n                <mat-option *ngFor=\\\"let identifier of identifiers\\\" value=\\\"{{identifier}}\\\">{{identifier}}</mat-option>\\n\\n              </mat-select>\\n            <mat-error>\\n              Identifier is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n          <i class=\\\"material-icons info-icon\\\">\\n            info\\n          </i>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <i class=\\\"material-icons form-icon\\\">\\n            compare\\n          </i>\\n          <mat-form-field appearance=\\\"fill\\\" style=\\\"width:80%\\\">\\n            <mat-label>Condition</mat-label>\\n            <mat-select formControlName=\\\"condition\\\">\\n              <mat-option value=\\\"equals\\\">Equals</mat-option>\\n              <mat-option value=\\\"contains\\\">Contains</mat-option>\\n              <mat-option value=\\\"excludes\\\">Excludes</mat-option>\\n            </mat-select>\\n            <mat-error>\\n              Condition is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n          <i class=\\\"material-icons info-icon\\\">\\n            info\\n          </i>\\n\\n        </div>\\n        <div class=\\\"row\\\">\\n          <i class=\\\"material-icons form-icon\\\">\\n            title\\n          </i>\\n          <mat-form-field appearance=\\\"fill\\\" style=\\\"width:80%\\\">\\n            <mat-label>Token</mat-label>\\n            <input formControlName=\\\"token\\\" matInput placeholder=\\\"Select Data Source\\\">\\n            <mat-error>\\n              Token is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n          <i class=\\\"material-icons info-icon\\\">\\n            info\\n          </i>\\n        </div>\\n        <div class=\\\"buttons\\\">\\n          <button mat-button routerLink=\\\"../../\\\">Cancel</button>\\n          <button class=\\\"done primary\\\" [disabled]=\\\"!dataruleFormGroup.valid\\\" [ngClass]=\\\"{'button-disabled': !dataruleFormGroup.valid}\\\"\\n            mat-flat-button type=\\\"submit\\\">Done </button>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"\"","import { OrganizationService } from 'src/app/shared/services/organization.service';\nimport { Subscription } from 'rxjs';\nimport { ActivatedRoute } from '@angular/router';\nimport { DatarulesService } from './../../shared/services/datarules.service';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport * as DataViewModel from '../../shared/view-models/data.viewmodel';\n\n\n\n@Component({\n  selector: 'app-edit-data-rule',\n  templateUrl: './edit-data-rule.component.html',\n  styleUrls: ['./edit-data-rule.component.scss']\n})\nexport class EditDataRuleComponent implements OnInit, OnDestroy {\n  dataruleFormGroup: FormGroup;\n  datasources: DataViewModel.DataSource[];\n  constructor(\n    private formBuilder: FormBuilder,\n    private datarulesService: DatarulesService,\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    private dataruleService: DatarulesService\n  ) {}\n  identifiers: string[];\n  organizationId;\n  sub: Subscription;\n  dataRules: DataViewModel.DataRule[];\n  dataRule: DataViewModel.DataRule;\n  dataRuleId;\n  organization;\n  async ngOnInit() {\n    try {\n      this.sub = this.route.params.subscribe(params => {\n        this.organizationId = params['id'];\n        this.dataRuleId = params['ruleID'];\n      });\n      this.dataRules = await this.datarulesService.getDataRules('orgID');\n      this.dataRule = this.dataRules.find( element => {\n        return element._id === this.dataRuleId;\n      });\n      this.datasources = await this.datarulesService.getAllDataSourceForOrganization(\n        'id'\n      );\n\n      this.identifiers = [\n        'Identifier 1',\n        'Identifier 2',\n        'Identifier 3',\n        'Identifier 4'\n      ];\n      this.dataruleFormGroup = this.formBuilder.group({\n        name: [this.dataRule.name, [Validators.required,  this.noWhitespaceValidator]],\n        datasource: [this.dataRule.datasource, Validators.required],\n        identifier: [this.dataRule.identifier, Validators.required],\n        condition: [this.dataRule.condition, Validators.required],\n        token: [this.dataRule.token, [Validators.required,  this.noWhitespaceValidator]]\n      });\n      this.organization = await this.organizationService.getLocalOrganization(this.organizationId);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.sub) {\n      this.sub.unsubscribe();\n    }\n  }\n\n  public noWhitespaceValidator(control: FormControl) {\n    const isWhitespace = (control.value || '').trim().length === 0;\n    const isValid = !isWhitespace;\n    return isValid ? null : { whitespace: true };\n  }\n\n  onSubmit() {\n    const form = this.dataruleFormGroup.value;\n    const datarule = {\n      _id: this.dataRuleId,\n      name: form.name,\n      datasourceID: form.datasource,\n      identifier: form.identifier,\n      condition: form.condition,\n      token: form.token,\n      organizationID: this.organizationId\n    };\n    this.dataruleService.editDataRule(datarule);\n    console.log(datarule);\n  }\n\n}\n","module.exports = \"<div class=\\\"form-container\\\">\\n  <div class=\\\"card\\\">\\n    <div class=\\\"form\\\" *ngIf=\\\"orgForm && org\\\">\\n      <!-- *********************************  -->\\n      <form [formGroup]=\\\"orgForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n        <h2 class=\\\"title\\\"> Edit Organization: <span class=\\\"input-header\\\">{{org.name}} </span></h2>\\n        <hr>\\n        <h4 class=\\\"input-header\\\"> Please enter organization information </h4>\\n        <div class=\\\"row\\\">\\n          <i class=\\\"material-icons form-icon\\\">\\n            business\\n          </i>\\n          <mat-form-field appearance=\\\"fill\\\" style=\\\"width:80%\\\">\\n            <mat-label>Organization Name</mat-label>\\n            <input matInput type=\\\"text\\\" id=\\\"name\\\" placeholder=\\\"Enter Name\\\" formControlName=\\\"orgName\\\">\\n            <mat-error>\\n              Organization name is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n          <i class=\\\"material-icons info-icon\\\" matTooltip=\\\"{{orgNameTooltip}}\\\">\\n            info\\n          </i>\\n        </div>\\n        <h4 class=\\\"input-header\\\">Categories\\n            <i class=\\\"material-icons info-icon\\\" matTooltip=\\\"{{orgNameTooltip}}\\\">\\n              info\\n            </i>\\n        </h4>\\n        <div formArrayName=\\\"itemRows\\\">\\n          <div *ngFor=\\\"let itemrow of orgForm.controls.itemRows.controls; let i=index\\\" [formGroupName]=\\\"i\\\">\\n            <div class=\\\"row\\\">\\n              <i class=\\\"material-icons form-icon\\\">\\n                book\\n              </i>\\n              <mat-form-field appearance=\\\"fill\\\" style=\\\"width:80%\\\">\\n                <mat-label>Category </mat-label>\\n                <input type=\\\"text\\\" placeholder=\\\"Pick one\\\" aria-label=\\\"Number\\\" matInput formControlName=\\\"itemname\\\" [matAutocomplete]=\\\"auto\\\">\\n                <mat-autocomplete autoActiveFirstOption #auto=\\\"matAutocomplete\\\">\\n                  <mat-option *ngFor=\\\"let option of options | category: this.orgForm.controls.itemRows.controls[i].controls.itemname.value\\\" [value]=\\\"option\\\">\\n                    <span>{{option}} </span>\\n                  </mat-option>\\n                </mat-autocomplete>\\n                <mat-error>\\n                  Category name is <strong>required</strong>\\n                </mat-error>\\n                <mat-error *ngIf=\\\"orgForm.get('itemRows').getError('duplicate')\\\">\\n                  Duplicated Category\\n                </mat-error>\\n              </mat-form-field>\\n              <i class=\\\"material-icons close-icon\\\" *ngIf=\\\"orgForm.controls.itemRows.controls.length > 1\\\" (click)=\\\"deleteRow(i)\\\">\\n                close\\n              </i>\\n            </div>\\n          </div>\\n        </div>\\n        <p class=\\\"custom-error\\\" *ngIf=\\\"orgForm.get('itemRows').getError('duplicate')\\\">\\n            Cannot have duplicate categories </p>\\n        <p class=\\\"add-row\\\" (click)=\\\"addNewRow('')\\\">+ Add another category</p>\\n        <div class=\\\"buttons\\\">\\n          <button mat-button routerLink=\\\"../\\\">Cancel</button>\\n          <button class=\\\"done primary\\\" [disabled]=\\\"!orgForm.valid\\\" [ngClass]=\\\"{'button-disabled': !orgForm.valid}\\\" mat-flat-button type=\\\"submit\\\">Done\\n          </button>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"\"","import { OrganizationService } from './../../shared/services/organization.service';\nimport { Component, OnInit, OnChanges } from '@angular/core';\nimport {\n  FormControl,\n  FormBuilder,\n  Validators,\n  FormArray\n} from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport { FormGroup } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport * as OrganizationViewModel from '../../shared/view-models/organization.viewmodel';\n\n@Component({\n  selector: 'app-edit-organization',\n  templateUrl: './edit-organization.component.html',\n  styleUrls: ['./edit-organization.component.scss']\n})\nexport class EditOrganizationComponent implements OnInit {\n  constructor(\n    private organizatinonService: OrganizationService,\n    private _fb: FormBuilder,\n    private route: ActivatedRoute\n  ) {}\n  options = [];\n\n  orgNameTooltip =\n    'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Peccata paria. Restinguet citius, si ardentem acceperit. ';\n\n  myControl = new FormControl();\n  filteredOptions: Observable<string[]>;\n  selectedCategories = [''];\n  organizationID;\n  sub: any;\n  orgs: OrganizationViewModel.OrganizationDetails[];\n  org: OrganizationViewModel.OrganizationDetails;\n  orgForm: FormGroup;\n  async ngOnInit() {\n    try {\n      this.sub = this.route.params.subscribe(params => {\n        this.organizationID = params['id'];\n      });\n      this.org = await this.organizatinonService.getLocalOrganization(this.organizationID);\n      this.options = await this.organizatinonService.getAllCategories();\n      this.filteredOptions = this.myControl.valueChanges.pipe(\n        startWith(''),\n        map(value => this._filter(value))\n      );\n      this.orgForm = this._fb.group({\n        orgName: new FormControl(this.org.name, [\n          Validators.required,\n          this.noWhitespaceValidator\n        ]),\n        itemRows: this._fb.array([this.initItemRows('')], this.noDuplicate)\n      });\n      const control = <FormArray>this.orgForm.controls['itemRows'];\n      control.removeAt(0);\n      for (const category of this.org.categories) {\n        this.addNewRow(category);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  private _filter(value: string): string[] {\n    const filterValue = value.toLowerCase();\n\n    return this.options.filter(\n      option => option.toLowerCase().indexOf(filterValue) === 0\n    );\n  }\n\n  addAnotherCategory() {\n    this.selectedCategories.push('');\n  }\n\n  initItemRows(name) {\n    return this._fb.group({\n      itemname: [name, [Validators.required, this.noWhitespaceValidator]]\n    });\n  }\n\n  addNewRow(name) {\n    const control = <FormArray>this.orgForm.controls['itemRows'];\n    control.push(this.initItemRows(name));\n  }\n\n  deleteRow(index: number) {\n    const control = <FormArray>this.orgForm.controls['itemRows'];\n    control.removeAt(index);\n  }\n\n  get controls() {\n    return this.orgForm.controls;\n  }\n\n  onSubmit() {\n    const temp = [];\n\n    for (const itemname of this.orgForm.value.itemRows) {\n      temp.push(itemname.itemname);\n    }\n    const org = {\n      _id: this.organizationID,\n      name: this.orgForm.value.orgName,\n      categories: temp\n    };\n    this.organizatinonService.editOrganization(org);\n  }\n\n  public noWhitespaceValidator(control: FormControl) {\n    const isWhitespace = (control.value || '').trim().length === 0;\n    const isValid = !isWhitespace;\n    return isValid ? null : { whitespace: true };\n  }\n\n  public getForm() {\n    return this.orgForm;\n  }\n\n  public noDuplicate(array): Validators {\n    if (array.errors) {\n      console.log(array.errors.duplicate);\n    }\n    if (array.value) {\n      const temp = [];\n      for (const itemname of array.value) {\n        if (!temp.includes(itemname.itemname)) {\n          temp.push(itemname.itemname);\n        } else {\n          return { duplicate: true };\n        }\n      }\n    }\n    return null;\n  }\n}\n","module.exports = \"<div class=\\\"form-container\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"form\\\">\\n        <h2 class=\\\"title\\\">Edit Report: <span class=\\\"input-header\\\">Report Name </span> </h2>\\n        <hr>\\n            <form [formGroup]=\\\"reportInfoForm\\\" (ngSubmit)=\\\"onSubmit()\\\" *ngIf=\\\"reportInfoForm\\\">\\n                <h4 class=\\\"input-header\\\"> Please Enter Report Information</h4>\\n                <div class=\\\"row\\\">\\n                    <i class=\\\"material-icons form-icon\\\">\\n                      business\\n                    </i>\\n                    <mat-form-field appearance=\\\"fill\\\" style=\\\"width:80%\\\">\\n                      <mat-label>Organization</mat-label>\\n                      <mat-select formControlName=\\\"organization\\\">\\n                        <mat-option (click)=\\\"selectOrg()\\\" *ngFor=\\\"let organization of organizations\\\" value=\\\"{{organization._id}}\\\">{{organization.name}}</mat-option>\\n                      </mat-select>\\n                      <mat-error>\\n                        Organization is <strong>required</strong>\\n                      </mat-error>\\n\\n                    </mat-form-field>\\n                    <i class=\\\"material-icons info-icon\\\">\\n                        info\\n                      </i>\\n                  </div>\\n                  <div class=\\\"row\\\">\\n                    <p class=\\\"create-new-text\\\">Organization not on the list? <span class=\\\"create-new-button\\\">Create New Organization </span></p>\\n                  </div>\\n              <div class=\\\"row\\\">\\n                <i class=\\\"material-icons form-icon\\\">\\n                  assessment\\n                </i>\\n                <mat-form-field appearance=\\\"fill\\\" style=\\\"width:80%\\\">\\n                  <mat-label>Report Name</mat-label>\\n                  <input formControlName=\\\"name\\\" matInput placeholder=\\\"Report Name\\\">\\n                  <mat-error>\\n                    Report name is <strong>required</strong>\\n                  </mat-error>\\n                </mat-form-field>\\n                <i class=\\\"material-icons info-icon\\\">\\n                  info\\n                </i>\\n              </div>\\n              <div class=\\\"row\\\">\\n                <i class=\\\"material-icons form-icon\\\">\\n                  link\\n                </i>\\n                <mat-form-field appearance=\\\"fill\\\" style=\\\"width:80%\\\">\\n                  <mat-label>Data Studio Link</mat-label>\\n                  <input formControlName=\\\"datastudioLink\\\" matInput placeholder=\\\"Data Studio Link\\\">\\n                  <mat-error>\\n                    Data Studio Link is <strong>required</strong>\\n                  </mat-error>\\n                </mat-form-field>\\n                <i class=\\\"material-icons info-icon\\\">\\n                  info\\n                </i>\\n              </div>\\n\\n              <div formArrayName=\\\"datasourceRows\\\" *ngIf=\\\"reportInfoForm.controls.datasourceRows.controls\\\">\\n                  <div *ngFor=\\\"let datasource of reportInfoForm.controls.datasourceRows.controls; let i=index\\\" [formGroupName]=\\\"i\\\">\\n                  <h4 class=\\\"input-header\\\">Data Source {{i+1}}\\n                      <i class=\\\"material-icons info-icon\\\">\\n                          info\\n                        </i>\\n                   </h4>\\n                  <div class=\\\"row\\\">\\n                    <i class=\\\"material-icons form-icon\\\">\\n                      storage\\n                    </i>\\n                    <mat-form-field appearance=\\\"fill\\\" style=\\\"width:80%\\\">\\n                      <mat-label>Data Source</mat-label>\\n                      <mat-select formControlName=\\\"name\\\">\\n                        <mat-option *ngFor=\\\"let datasource of datasources\\\" value=\\\"{{datasource.name}}\\\">{{datasource.name}}</mat-option>\\n                      </mat-select>\\n                      <mat-error>\\n                        Data Source is <strong>required</strong>\\n                      </mat-error>\\n                    </mat-form-field>\\n                    <i class=\\\"material-icons close-icon\\\" *ngIf=\\\"reportInfoForm?.controls?.datasourceRows?.controls.length > 1\\\" (click)=\\\"deleteRow(i)\\\">\\n                        close\\n                      </i>\\n                  </div>\\n                  <div class=\\\"row\\\">\\n                    <i class=\\\"material-icons form-icon\\\">\\n                      class\\n                    </i>\\n                    <mat-form-field appearance=\\\"fill\\\" style=\\\"width:80%\\\">\\n                      <mat-label>Data Studio ID</mat-label>\\n                      <input formControlName=\\\"datastudioId\\\" matInput placeholder=\\\"Data Studio ID\\\">\\n                      <mat-error>\\n                        Data Studio ID is <strong>required</strong>\\n                      </mat-error>\\n                    </mat-form-field>\\n                    <i class=\\\"material-icons info-icon\\\">\\n                      info\\n                    </i>\\n                  </div>\\n                </div>\\n              </div>\\n              <p class=\\\"custom-error\\\" *ngIf=\\\"reportInfoForm.get('datasourceRows').getError('duplicate')\\\">\\n                  Cannot have duplicate Data Sources </p>\\n              <p class=\\\"add-row\\\" (click)=\\\"addNewRow('','')\\\">+ Add another Data source</p>\\n              <div class=\\\"buttons\\\">\\n                <button mat-button type='button' routerLink=\\\"../\\\">Back</button>\\n                <button mat-button type='submit' mat-flat-button class=\\\"done primary\\\" [disabled]=\\\"!reportInfoForm.valid\\\" [ngClass]=\\\"{'button-disabled': !reportInfoForm.valid}\\\">Done</button>\\n              </div>\\n            </form>\\n      </div>\\n    </div>\\n  </div>\\n\"","module.exports = \"\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport * as ReportViewModel from '../../shared/view-models/report.viewmodel';\nimport { ReportService } from 'src/app/shared/services/report.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { OrganizationService } from 'src/app/shared/services/organization.service';\nimport * as OrganizationViewModel from './../../shared/view-models/organization.viewmodel';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  FormControl,\n  FormArray\n} from '@angular/forms';\nimport * as DataViewModel from '../../shared/view-models/data.viewmodel';\nimport { DatarulesService } from 'src/app/shared/services/datarules.service';\nimport { MatStepper } from '@angular/material';\n\n@Component({\n  selector: 'app-edit-report',\n  templateUrl: './edit-report.component.html',\n  styleUrls: ['./edit-report.component.scss']\n})\nexport class EditReportComponent implements OnInit {\n  @ViewChild('stepper')\n  stepper: MatStepper;\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private organizationService: OrganizationService,\n    private formBuilder: FormBuilder,\n    private datarulesService: DatarulesService,\n    private reportService: ReportService\n  ) {}\n  organizations: OrganizationViewModel.SimpleOrganization[];\n  orgForm: FormGroup;\n  reportInfoForm: FormGroup;\n  datasources: DataViewModel.DataSource[];\n  selectedOrg;\n  organizationID;\n  sub: any;\n  report: ReportViewModel.Report;\n  reportID: string;\n\n  async ngOnInit() {\n    try {\n      this.sub = await this.route.params.subscribe(params => {\n        this.reportID = params['reportID'];\n      });\n      this.organizations = await this.organizationService.getAllOrganizationsWithNoDetails();\n      this.datasources = await this.datarulesService.getAllDataSourceForOrganization(\n        this.reportID);\n      this.report = await this.reportService.getReport(this.reportID);\n      this.organizationID = this.report.organization._id;\n      if (this.organizationID) {\n        this.selectedOrg = this.organizations.find(org => {\n          return org._id === this.organizationID;\n        });\n      }\n      this.reportInfoForm = this.formBuilder.group({\n        organization: [ this.report.organization._id, Validators.required],\n        name: [this.report.name, [Validators.required, this.noWhitespaceValidator]],\n        datastudioLink: [this.report.link, [Validators.required, this.noWhitespaceValidator]],\n        datasourceRows: this.formBuilder.array(\n          [this.initItemRows('', '')],\n          this.noDuplicate\n        )\n      });\n      const control = <FormArray>this.reportInfoForm.controls['datasourceRows'];\n      control.removeAt(0);\n      for ( const datasource of this.report.datasources) {\n        this.addNewRow(datasource.name, datasource._id);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  initItemRows(name, id) {\n    return this.formBuilder.group({\n      name: [name, [Validators.required]],\n      datastudioId: [id, [Validators.required, this.noWhitespaceValidator]]\n    });\n  }\n\n  addNewRow(name, id) {\n    const control = <FormArray>this.reportInfoForm.controls['datasourceRows'];\n    control.push(this.initItemRows(name, id));\n  }\n\n  deleteRow(index: number) {\n    const control = <FormArray>this.reportInfoForm.controls['datasourceRows'];\n    control.removeAt(index);\n  }\n\n  selectOrg() {\n    this.selectedOrg = this.organizations.find(org => {\n      return org._id === this.orgForm.value.organization;\n    });\n  }\n\n  public noWhitespaceValidator(control: FormControl) {\n    const isWhitespace = (control.value || '').trim().length === 0;\n    const isValid = !isWhitespace;\n    return isValid ? null : { whitespace: true };\n  }\n\n  public noDuplicate(array): Validators {\n    if (array.errors) {\n      console.log(array.errors.duplicate);\n    }\n    if (array.value) {\n      const temp = [];\n      for (const datasource of array.value) {\n        if (!temp.includes(datasource.name)) {\n          if (datasource.name !== '') {\n            temp.push(datasource.name);\n          }\n        } else {\n\n          return { duplicate: true };\n        }\n      }\n      return null;\n    }\n  }\n\n  onSubmit() {\n    const rForm = this.reportInfoForm.value;\n    const report = {\n      _id: this.reportID,\n      organizationID: this.organizationID,\n      name: rForm.name,\n      datastudioLink: rForm.datastudioLink,\n      datasources: rForm.datasourceRows,\n    };\n    this.reportService.editReport(report);\n    console.log(report);\n  }\n}\n","module.exports = \"<div class=\\\"form-container\\\">\\n  <div class=\\\"card\\\" *ngIf=\\\"firstFormGroup  && user\\\">\\n    <div class=\\\"form\\\">\\n      <h2 class=\\\"title\\\">Edit User: <span class=\\\"input-header\\\"> {{user.firstName}}   {{user.lastName}}    </span></h2>\\n      <hr>\\n            <form [formGroup]=\\\"firstFormGroup\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n              <ng-template matStepLabel>Fill out your name</ng-template>\\n              <div class=\\\"row\\\">\\n                <h4 class=\\\"input-header\\\"> Viewer for <span *ngFor=\\\"let org of user.organizations; let i = index\\\">{{org.name}}<span *ngIf=\\\"i < user.organizations.length -1\\\">,</span> &nbsp;</span></h4>\\n                <i class=\\\"material-icons form-icon\\\">\\n                  business\\n                </i>\\n                <mat-form-field appearance=\\\"fill\\\" style=\\\"width:80%\\\">\\n                  <mat-label>Role</mat-label>\\n                  <mat-select formControlName=\\\"role\\\" [(value)]=\\\"roleSelected\\\" >\\n                    <mat-option value=\\\"Admin\\\" (click)=\\\"openDialog()\\\">Admin</mat-option>\\n                    <mat-option value=\\\"Viewer\\\" (click)=\\\"checkRole()\\\">Viewer</mat-option>\\n                  </mat-select>\\n                  <mat-error>\\n                      Role is <strong>required</strong>\\n                    </mat-error>\\n                </mat-form-field>\\n                <i class=\\\"material-icons info-icon\\\">\\n                  info\\n                </i>\\n              </div>\\n\\n              <div class=\\\"row\\\" *ngIf=\\\"firstFormGroup.value.role === 'Viewer'\\\">\\n                <i class=\\\"material-icons form-icon\\\">\\n                  business\\n                </i>\\n                <mat-form-field appearance=\\\"fill\\\" style=\\\"width:80%\\\">\\n                  <mat-label>Select Organization(s)</mat-label>\\n                  <mat-select  formControlName=\\\"organizations\\\" [(ngModel)]=\\\"selectedOrganizationIds\\\"  multiple>\\n                    <mat-option *ngFor=\\\"let organization of organizations\\\" value=\\\"{{organization._id}}\\\">{{organization.name}}</mat-option>\\n                  </mat-select>\\n                  <mat-error>\\n                      Organization is <strong>required</strong>\\n                    </mat-error>\\n                </mat-form-field>\\n                <i class=\\\"material-icons info-icon\\\">\\n                  info\\n                </i>\\n                <p class=\\\"create-new-text\\\" style=\\\"padding-left: 35px;\\n                padding-bottom: 10px;\\\">Organization not on the list? <span class=\\\"create-new-button\\\" routerLink=\\\"/admin/o/new-organization\\\">Create\\n                    New Organization </span></p>\\n              </div>\\n\\n\\n            <div class=\\\"row\\\">\\n              <i class=\\\"material-icons form-icon\\\">\\n                  person_outline\\n              </i>\\n              <mat-form-field appearance=\\\"fill\\\" style=\\\"width:80%\\\">\\n                <mat-label   >First Name</mat-label>\\n                <input formControlName=\\\"firstName\\\" matInput placeholder=\\\"\\\">\\n                <mat-error>\\n                  First Name is <strong>required</strong>\\n                </mat-error>\\n              </mat-form-field>\\n              <i class=\\\"material-icons info-icon\\\">\\n                info\\n              </i>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <i class=\\\"material-icons form-icon\\\">\\n                person_outline\\n              </i>\\n              <mat-form-field appearance=\\\"fill\\\" style=\\\"width:80%\\\">\\n                <mat-label >Last Name</mat-label>\\n                <input formControlName=\\\"lastName\\\" matInput placeholder=\\\"\\\">\\n                <mat-error>\\n                  Last Name is <strong>required</strong>\\n                </mat-error>\\n              </mat-form-field>\\n              <i class=\\\"material-icons info-icon\\\">\\n                info\\n              </i>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <i class=\\\"material-icons form-icon\\\">\\n                email\\n              </i>\\n              <mat-form-field appearance=\\\"fill\\\" style=\\\"width:80%\\\">\\n                <mat-label>Gmail</mat-label>\\n                <input  type=\\\"email\\\" formControlName=\\\"email\\\" matInput placeholder=\\\"\\\">\\n                <mat-error *ngIf=\\\"firstFormGroup?.controls.email?.errors?.required \\\">\\n                  Email is <strong>required</strong>\\n                </mat-error>\\n                <mat-error *ngIf=\\\"firstFormGroup?.controls.email?.errors?.email \\\">\\n                 Must be in email format\\n                </mat-error>\\n              </mat-form-field>\\n              <i class=\\\"material-icons info-icon\\\">\\n                info\\n              </i>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <i class=\\\"material-icons form-icon\\\">\\n                alternate_email\\n              </i>\\n              <mat-form-field appearance=\\\"fill\\\" style=\\\"width:80%\\\">\\n                <mat-label  >Secondary Email</mat-label>\\n                <input formControlName=\\\"secondaryEmail\\\" type=\\\"email\\\" matInput placeholder=\\\"\\\">\\n                <mat-hint>Not Required</mat-hint>\\n                <mat-error>\\n                  Must be in email format\\n                 </mat-error>\\n              </mat-form-field>\\n              <i class=\\\"material-icons info-icon\\\">\\n                info\\n              </i>\\n            </div>\\n            <div class=\\\"buttons\\\" *ngIf=\\\"firstFormGroup\\\">\\n              <button mat-button  type=\\\"button\\\" routerLink=\\\"../\\\">Back</button>\\n              <button class=\\\"done primary\\\" mat-flat-button  [disabled]=\\\"!firstFormGroup.valid\\\" [ngClass]=\\\"{'button-disabled': !firstFormGroup.valid}\\\" type=\\\"submit\\\">Done</button>\\n            </div>\\n          </form>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \".create-new-button:hover {\\n  cursor: pointer; }\\n\"","import { NewUserOrganizationConfirmation } from './../create-new-user/create-new-user.component';\nimport { ActivatedRoute } from '@angular/router';\nimport { OrganizationService } from './../../shared/services/organization.service';\nimport { Component, OnInit, ViewChild, Inject } from '@angular/core';\nimport * as OrganizationViewModel from './../../shared/view-models/organization.viewmodel';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  FormControl\n} from '@angular/forms';\nimport {\n  MatDialog,\n  MatDialogRef,\n  MAT_DIALOG_DATA,\n  MatStepper\n} from '@angular/material';\nimport * as UserViewModel from '../../shared/view-models/user.viewmodel';\nimport { UserService } from 'src/app/shared/services/user.service';\n\n@Component({\n  selector: 'app-edit-user',\n  templateUrl: './edit-user.component.html',\n  styleUrls: ['./edit-user.component.scss']\n})\nexport class EditUserComponent implements OnInit {\n  constructor(\n    private organizationService: OrganizationService,\n    private formBuilder: FormBuilder,\n    public dialog: MatDialog,\n    private route: ActivatedRoute,\n    private userService: UserService\n  ) {}\n  sub: any;\n  roleSelected;\n  organizations: OrganizationViewModel.SimpleOrganization[];\n  selectedOrganizationIds: string[] = [];\n  firstFormGroup: FormGroup;\n  secondFormGroup: FormGroup;\n  selectedOrganizationNames: OrganizationViewModel.SimpleOrganization[];\n  organizationID;\n  userID: string;\n  user: UserViewModel.User;\n  async ngOnInit() {\n    try {\n      this.organizations = await this.organizationService.getAllOrganizationsWithNoDetails();\n\n      this.sub = this.route.params.subscribe(params => {\n        this.organizationID = params['id'];\n        this.userID = params['userID'];\n      });\n      this.user = await this.userService.getUser(this.userID);\n      for await (const org of this.user.organizations) {\n        this.selectedOrganizationIds.push(org._id);\n      }\n      this.firstFormGroup = await this.formBuilder.group({\n        role: [this.user.role, Validators.required],\n        organizations: ['', Validators.required],\n        firstName: [\n          this.user.firstName,\n          [Validators.required, this.noWhitespaceValidator]\n        ],\n        lastName: [\n          this.user.lastName,\n          [Validators.required, this.noWhitespaceValidator]\n        ],\n        email: [\n          this.user.googleID,\n          [Validators.required, Validators.email, this.noWhitespaceValidator]\n        ],\n        secondaryEmail: [this.user.secondaryEmail, Validators.email]\n      });\n      await console.log(this.user);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  checkRole() {\n    if (this.roleSelected === 'admin') {\n      this.firstFormGroup.removeControl('organizations');\n    }\n    if (this.roleSelected === 'viewer') {\n      this.firstFormGroup.addControl(\n        'organizations',\n        new FormControl('', Validators.required)\n      );\n    }\n  }\n\n  /**\n   * ON SUBMIT FOR CREATING NEW USER\n   */\n  onSubmit() {\n    const firstForm = this.firstFormGroup.value;\n    let orgs = [];\n\n    if (firstForm.role === 'Viewer') {\n      orgs = firstForm.organizations;\n      const newUser: UserViewModel.EditUser = {\n        _id: this.userID,\n        firstName: firstForm.firstName,\n        lastName: firstForm.lastName,\n        googleID: firstForm.email,\n        secondaryEmail: firstForm.secondaryEmail,\n        organizations: orgs,\n        role: firstForm.role\n      };\n      this.userService.editUser(newUser);\n      console.log(newUser);\n    }\n    if (firstForm.role === 'Admin') {\n      const newUser: UserViewModel.EditUser = {\n        _id: this.userID,\n        firstName: firstForm.firstName,\n        lastName: firstForm.lastName,\n        googleID: firstForm.email,\n        secondaryEmail: firstForm.secondaryEmail,\n        organizations: [],\n        role: firstForm.role\n      };\n      this.userService.editUser(newUser);\n      console.log(newUser);\n    }\n  }\n\n  openDialog() {\n    const dialogRef = this.dialog.open(NewUserOrganizationConfirmation, {\n      data: { orgs: '', role: 'admin' }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(true);\n      if (!result) {\n        this.firstFormGroup.controls['role'].setValue('Viewer');\n      }\n    });\n  }\n\n  public noWhitespaceValidator(control: FormControl) {\n    const isWhitespace = (control.value || '').trim().length === 0;\n    const isValid = !isWhitespace;\n    return isValid ? null : { whitespace: true };\n  }\n}\n","module.exports = \"<mat-toolbar class=\\\"toolbar\\\">\\n  <div class=\\\"company\\\">\\n    <div class=\\\"icon-container\\\">\\n      <div class=\\\"icon\\\">\\n        <img src=\\\"../../assets/company-icon.png\\\" alt=\\\"Smiley face\\\">\\n      </div>\\n    </div>\\n    <span class=\\\"name\\\"> Company </span>\\n  </div>\\n  <div class=\\\"ghost-title\\\">\\n      Acting as: <span>{{name}}</span>&nbsp; <span class=\\\"close\\\"> <i class=\\\"material-icons\\\" (click)=\\\"disableGhost()\\\">\\n          close\\n        </i></span>\\n\\n\\n  </div>\\n</mat-toolbar>\\n\\n<div class=\\\"viewer-container\\\">\\n\\n  <div class=\\\"viewer-content\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\\n\"","module.exports = \"/* Tool bar top colour */\\n/* Main content colour */\\n/*************** SIDE NAVIGATION VARIABLES *******************/\\n/* Side nav color */\\n/********* ORGANIZATION DETAILS VARIABLES **********/\\n/******* GHOST HEADER TITLE ******/\\n/*********** LIST CARD VARIABLES  ***********/\\n/********* BREADCRUMBS STYLING ******/\\n/******* FORMS STYLING & FILTERS ******/\\n/***** Filter Card ***/\\n/****** Buttons Colors  **/\\n/**** Empty List Color Styles ****/\\n.toolbar {\\n  background-color: #616161;\\n  color: white;\\n  z-index: 20;\\n  position: fixed; }\\n.toolbar .menu-icon {\\n    min-width: unset;\\n    padding: 0; }\\n.toolbar .menu-icon i {\\n      font-size: 2.5em; }\\n.company {\\n  height: 64px; }\\n.company .icon-container {\\n    height: 64px;\\n    width: 64px;\\n    position: relative; }\\n.company .icon-container img {\\n      height: 45px;\\n      width: 45px;\\n      position: absolute;\\n      right: 0;\\n      left: -30px;\\n      top: 0;\\n      bottom: 5px;\\n      margin: auto auto; }\\n.company .name {\\n    position: absolute;\\n    top: 15px;\\n    font-size: 25px;\\n    font-weight: bold;\\n    color: white;\\n    left: 65px; }\\n.viewer-container {\\n  background-color: #f5f5f5;\\n  min-height: calc(100vh - 64px);\\n  padding-top: 64px;\\n  height: auto; }\\n.ghost-title {\\n  text-align: center;\\n  width: 100%;\\n  color: #c0c0c0; }\\n.ghost-title .close i {\\n    background-color: white;\\n    color: #616161;\\n    border-radius: 50%;\\n    position: relative;\\n    top: 5px; }\\n.ghost-title .close i:hover {\\n    cursor: pointer; }\\n\"","import { GhostService } from './../../shared/services/ghost.service';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Route, ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-ghost',\n  templateUrl: './ghost.component.html',\n  styleUrls: ['./ghost.component.scss']\n})\nexport class GhostComponent implements OnInit, OnDestroy {\n\n  constructor(private ghostService: GhostService, private router: Router, private route: ActivatedRoute) { }\n  sub: any;\n  name: string;\n  ngOnInit() {\n    this.sub = this.route.params.subscribe(params => {\n      this.name = params['userName'];\n    });\n\n  }\n\n  disableGhost() {\n    this.ghostService.disableGhost();\n    this.router.navigate(['../../'], { relativeTo: this.route });\n  }\n\n  ngOnDestroy(): void {\n   if (this.sub) {\n     this.sub.unsubscribe();\n   }\n  }\n\n}\n","module.exports = \"<div class=\\\"dialog\\\">\\n    <h2 class=\\\"title delete\\\"><i class=\\\"material-icons\\\">\\n        warning\\n      </i>Delete {{data.datarule}}?</h2>\\n    <div mat-dialog-content>\\n      <h4 class=\\\"subtitle\\\">Warning: this cannot be undone</h4>\\n      <p>Iam id ipsum absurdum, maximum malum neglegi. Quoniam, si dis placet, ab Epicuro loqui discimus. Duo Reges: constructio interrete.</p>\\n    </div>\\n    <div mat-dialog-actions style=\\\"float:right\\\">\\n      <button mat-button (click)=\\\"onNoClick()\\\">Cancel</button>\\n      <button mat-button mat-flat-button [mat-dialog-close]=\\\"true\\\" class=\\\"danger\\\" cdkFocusInitial>Continue</button>\\n    </div>\\n  </div>\\n\"","module.exports = \"\\n\\n\\n<div class=\\\"dialog\\\">\\n  <h2 class=\\\"title delete\\\"><i class=\\\"material-icons\\\">\\n      warning\\n    </i>Delete {{data.organization}}?</h2>\\n  <div mat-dialog-content>\\n    <h4 class=\\\"subtitle\\\">Warning: this cannot be undone</h4>\\n    <ul class=\\\"conditions\\\">\\n      <li> Lorem ipsum dolor sit amet, consectetur adipiscing elit.</li>\\n      <li> Lorem ipsum dolor sit amet, consectetur adipiscing elit.</li>\\n      <li> Lorem ipsum dolor sit amet, consectetur adipiscing elit.</li>\\n    </ul>\\n  </div>\\n  <div mat-dialog-actions style=\\\"float:right\\\">\\n    <button mat-button (click)=\\\"onNoClick()\\\">Cancel</button>\\n    <button mat-button mat-flat-button [mat-dialog-close]=\\\"true\\\" class=\\\"danger\\\" cdkFocusInitial>Continue</button>\\n  </div>\\n</div>\\n\"","module.exports = \"<div *ngIf=\\\"organization != null\\\">\\n  <div class=\\\"breadcrumb-container\\\">\\n    <div> <span routerLink=\\\"../\\\"><i class=\\\"material-icons\\\"> business </i> Organization List </span> &nbsp;&nbsp; <i class=\\\"material-icons arrow\\\">\\n        keyboard_arrow_right </i> <i style=\\\"margin-left: -14px\\\" class=\\\"material-icons arrow\\\"> keyboard_arrow_right </i>&nbsp;&nbsp; <span\\n        class=\\\"active\\\">{{organization.name}}\\n      </span> </div>\\n  </div>\\n\\n  <div class=\\\"main-content-view\\\">\\n    <div class=\\\"full-content-view\\\" *ngIf=\\\"viewInitialized\\\">\\n      <div class=\\\"details\\\">\\n        <div class=\\\"card\\\">\\n          <div class=\\\"more-button\\\">\\n            <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\">\\n              <mat-icon color=\\\"more-color\\\">more_vert</mat-icon>\\n            </button>\\n\\n            <mat-menu #menu=\\\"matMenu\\\">\\n              <button mat-menu-item routerLink=\\\"./edit-organization\\\">Edit</button>\\n              <button mat-menu-item (click)=\\\"openDialog()\\\">Delete</button>\\n            </mat-menu>\\n          </div>\\n          <div class=\\\"container\\\">\\n            <h2 class=\\\"title\\\">{{organization.name}}</h2>\\n            <h4 class=\\\"secondary\\\"><span *ngFor=\\\"let category of organization.categories\\\">{{category}} &nbsp; </span> </h4>\\n            <p class=\\\"stats\\\">\\n              <span class=\\\"left\\\"><i class=\\\"material-icons\\\">\\n                  assessment\\n                </i> {{organization.reportsCount}} Reports</span>\\n              <span class=\\\"middle\\\"> <i class=\\\"material-icons\\\">\\n                  person_outline\\n                </i>{{organization.usersCount}} Users</span>\\n              <span class=\\\"right\\\"> <i class=\\\"material-icons\\\">\\n                  dns\\n                </i> {{organization.datarulesCount}} Data Rules</span>\\n            </p>\\n\\n          </div>\\n\\n        </div>\\n\\n        <div class=\\\"tabs\\\">\\n          <mat-tab-group (selectedIndexChange)=\\\"selected($event)\\\">\\n            <mat-tab label=\\\"Reports\\\">\\n              <div *ngIf=\\\"!reportsInitialized\\\" style=\\\"margin:auto; padding-top: 50px; text-align: center\\\">\\n                <mat-spinner style=\\\"margin:auto\\\"></mat-spinner>\\n                <p style=\\\"text-align: center;\\\">Reports Loading...</p>\\n              </div>\\n\\n              <div *ngIf=\\\"reportsInitialized && reports.length === 0 \\\" class=\\\"empty-list\\\">\\n                <div class=\\\"icons\\\">\\n                  <i class=\\\"material-icons main\\\"> assessment </i>\\n                  <button routerLink=\\\"./new-report\\\" mat-fab class=\\\"button-fab add\\\" color=\\\"primary-button\\\"> <i class=\\\"material-icons\\\">\\n                      add\\n                    </i>\\n                  </button>\\n                </div>\\n                <h2 class=\\\"title\\\"> There are no reports.</h2>\\n                <h3 class=\\\"create-text\\\" routerLink=\\\"./new-report\\\"> Create new report</h3>\\n              </div>\\n\\n\\n              <app-report-list [allowAdd]=true *ngIf=\\\"selectedTab === 0 && reportsInitialized && reports.length > 0 \\\" [reports]=\\\"reports\\\" (reportID)=\\\"goToReport($event)\\\"\\n                style=\\\"display:flex; width: 100%; margin-bottom: 10px;\\\"></app-report-list>\\n            </mat-tab>\\n            <mat-tab label=\\\"Users\\\">\\n              <div *ngIf=\\\"!usersInitialized\\\" style=\\\"margin:auto; padding-top: 50px; text-align: center\\\">\\n                <mat-spinner style=\\\"margin:auto\\\"></mat-spinner>\\n                <p style=\\\"text-align: center;\\\">Users Loading...</p>\\n              </div>\\n              <app-user-list *ngIf=\\\"selectedTab === 1 && usersInitialized && users.length > 0 \\\" [users]=\\\"users\\\" (userID)=\\\"goToUser($event)\\\" style=\\\"display:flex; width: 100%; margin-bottom: 10px;\\\"></app-user-list>\\n\\n\\n              <div *ngIf=\\\"usersInitialized && users.length === 0 && selectedTab === 1  \\\" class=\\\"empty-list\\\">\\n                  <div class=\\\"icons\\\">\\n                    <i class=\\\"material-icons main\\\"> person_outline </i>\\n                    <button routerLink=\\\"./new-user\\\" mat-fab class=\\\"button-fab add\\\" color=\\\"primary-button\\\"> <i class=\\\"material-icons\\\">\\n                        add\\n                      </i>\\n                    </button>\\n                  </div>\\n                  <h2 class=\\\"title\\\"> There are no users.</h2>\\n                  <h3 class=\\\"create-text\\\" routerLink=\\\"./new-user\\\"> Create new user</h3>\\n                </div>\\n            </mat-tab>\\n            <mat-tab label=\\\"Data Rules\\\">\\n              <div *ngIf=\\\"!datarulesInitialized\\\" style=\\\"margin:auto; padding-top: 50px; text-align: center\\\">\\n                <mat-spinner style=\\\"margin:auto\\\"></mat-spinner>\\n                <p style=\\\"text-align: center;\\\">Data Rules Loading...</p>\\n              </div>\\n              <div class=\\\"data-rules-section\\\" *ngIf=\\\"selectedTab === 2 && datarulesInitialized && rules.length > 0\\\">\\n                <div class=\\\"left-main-content-view\\\">\\n                  <mat-accordion *ngFor=\\\"let rule of rules | datarulesList : searchName : selectedDataSource : sortValue : pagination.currentPage; let i = index\\\">\\n                    <mat-expansion-panel class=\\\"data-rules-card\\\">\\n                      <mat-expansion-panel-header>\\n                        <mat-panel-title>\\n                          <h4 class=\\\"title\\\">{{rule.name}}</h4><br>\\n                        </mat-panel-title>\\n                        <mat-panel-description>\\n                          <h5>{{rule.datasource.name}}</h5>\\n                        </mat-panel-description>\\n                      </mat-expansion-panel-header>\\n                      <hr>\\n                      <p>Created At: {{rule.date | date }}</p>\\n                      <p>Identifier: {{rule.identifier}}</p>\\n                      <p>Condition: {{rule.condition}}</p>\\n                      <p>Token: {{rule.token}}</p>\\n                      <div class=\\\"buttons\\\">\\n                        <button mat-button color=\\\"danger\\\" (click)=\\\"deleteRule(rule)\\\">Delete</button>\\n                        <button mat-button color=\\\"primary\\\" (click)=\\\"editRule(rule._id)\\\">Edit</button>\\n                      </div>\\n                    </mat-expansion-panel>\\n                    <br>\\n                  </mat-accordion>\\n                  <p class=\\\"pagination\\\" *ngIf=\\\"this.pagination\\\" style=\\\"text-align: center\\\"> <button mat-mini-fab (click)=\\\"previousPage()\\\"\\n                      color=\\\"white\\\" [disabled]=\\\"pagination.currentPage===1\\\"> <i class=\\\"material-icons\\\">\\n                        chevron_left\\n                      </i> </button>\\n                    {{this.pagination.currentPage}}/{{this.pagination.totalPages}} <button mat-mini-fab active (click)=\\\"nextPage() \\\"\\n                      [disabled]=\\\"pagination.currentPage === pagination.totalPages\\\" color=\\\"white\\\"> <i class=\\\"material-icons\\\">\\n                        chevron_right\\n                      </i> </button>\\n                  </p>\\n                </div>\\n                <div class=\\\"right-main-content-view\\\">\\n                  <!-- Filters -->\\n                  <div class=\\\"filter\\\">\\n                    <form [formGroup]=\\\"filterForm\\\" (ngSubmit)=\\\"onSearch()\\\">\\n                      <button class=\\\"reset\\\" mat-stroked-button (click)=\\\"searchFormReset()\\\">RESET</button>\\n                      <p class=\\\"title\\\"> Filter by</p>\\n                      <mat-form-field appearance=\\\"outline\\\" class=\\\"search\\\">\\n                        <mat-label class=\\\"label-color\\\">Name</mat-label>\\n                        <input matInput type=\\\"text\\\" placeholder=\\\"Search Name\\\" formControlName=\\\"name\\\">\\n                      </mat-form-field>\\n                      <p class=\\\"title\\\"> Data Source</p>\\n                      <mat-form-field appearance=\\\"outline\\\" class=\\\"select\\\">\\n                        <mat-select formControlName=\\\"selectedDataSource\\\">\\n                          <mat-option value=\\\"All\\\">All</mat-option>\\n                          <mat-option *ngFor=\\\"let datasource of dataSources\\\" value=\\\"{{datasource._id}}\\\">{{datasource.name}}</mat-option>\\n                        </mat-select>\\n                      </mat-form-field>\\n                      <br>\\n                      <button mat-raised-button class=\\\"search\\\" type=\\\"submit\\\">Search</button>\\n                    </form>\\n                  </div>\\n                  <div class=\\\"sort\\\">\\n                    <p class=\\\"title\\\"> Sort By</p>\\n                    <mat-radio-group class=\\\"example-radio-group\\\" [(ngModel)]=\\\"sortValue\\\">\\n                      <mat-radio-button *ngFor=\\\"let sort of sorts\\\" value=\\\"{{sort}}\\\" (click)=\\\"changeSort(sort)\\\" class=\\\"radio\\\">\\n                        {{sort}}\\n                      </mat-radio-button>\\n                    </mat-radio-group>\\n                  </div>\\n                  <div class=\\\"add-button\\\">\\n                    <button routerLink=\\\"./new-rule\\\" mat-fab class=\\\"button-fab\\\" color=\\\"primary-button\\\"> <i class=\\\"material-icons plus-icon\\\">\\n                        add\\n                      </i>\\n                      <i class=\\\"material-icons back-icon\\\">\\n                        dns\\n                      </i></button>\\n                  </div>\\n                </div>\\n              </div>\\n\\n              <div *ngIf=\\\"datarulesInitialized && rules.length === 0 && selectedTab === 2 \\\" class=\\\"empty-list\\\">\\n                  <div class=\\\"icons\\\">\\n                    <i class=\\\"material-icons main\\\"> dns </i>\\n                    <button routerLink=\\\"./new-rule\\\" mat-fab class=\\\"button-fab add\\\" color=\\\"primary-button\\\"> <i class=\\\"material-icons\\\">\\n                        add\\n                      </i>\\n                    </button>\\n                  </div>\\n                  <h2 class=\\\"title\\\"> There are no data rules.</h2>\\n                  <h3 class=\\\"create-text\\\" routerLink=\\\"./new-rule\\\"> Create new data rule</h3>\\n                </div>\\n            </mat-tab>\\n          </mat-tab-group>\\n        </div>\\n      </div>\\n    </div>\\n    <div *ngIf=\\\"!viewInitialized\\\" style=\\\"margin:auto; padding-top: 50px;\\\">\\n      <mat-spinner></mat-spinner>\\n      <p style=\\\"text-align: center;\\\">Loading...</p>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"/* Tool bar top colour */\\n/* Main content colour */\\n/*************** SIDE NAVIGATION VARIABLES *******************/\\n/* Side nav color */\\n/********* ORGANIZATION DETAILS VARIABLES **********/\\n/******* GHOST HEADER TITLE ******/\\n/*********** LIST CARD VARIABLES  ***********/\\n/********* BREADCRUMBS STYLING ******/\\n/******* FORMS STYLING & FILTERS ******/\\n/***** Filter Card ***/\\n/****** Buttons Colors  **/\\n/**** Empty List Color Styles ****/\\n.tabs {\\n  background-color: white;\\n  margin: 20px 0;\\n  box-shadow: 2px 3px 4px rgba(101, 101, 101, 0.5); }\\n::ng-deep .mat-tab-body .mat-tab-body-content {\\n  overflow: hidden; }\\n::ng-deep .tabs .mat-tab-header {\\n  box-shadow: 0 1px 4px rgba(101, 101, 101, 0.7) !important;\\n  border-bottom: none !important; }\\n::ng-deep .tabs .mat-tab-label {\\n  color: #3E3E3E;\\n  opacity: 1;\\n  font-size: 17px; }\\n::ng-deep .tabs .mat-tab-label-active {\\n  color: #0865ee; }\\n::ng-deep .tabs .mat-tab-body {\\n  padding: 10px; }\\n::ng-deep .mat-tab-group.mat-primary .mat-ink-bar,\\n::ng-deep .mat-tab-nav-bar.mat-primary .mat-ink-bar {\\n  background: #0865ee;\\n  height: 3px; }\\n.data-rules-card {\\n  border: 1px solid #D7D7D7;\\n  border-radius: 5px; }\\n.mat-tab {\\n  padding: 5px; }\\n.data-rules-section {\\n  margin-bottom: 10px;\\n  display: flex; }\\n.data-rules-section .left-main-content-view {\\n    margin-top: 10px; }\\n.data-rules-section .left-main-content-view p {\\n      margin: 0;\\n      color: #3e3e3e;\\n      font-weight: 500; }\\n.data-rules-section .left-main-content-view .buttons {\\n      text-align: right; }\\n.data-rules-section .left-main-content-view hr {\\n      border-top: 1px solid #b4b4b4;\\n      margin-top: -10px; }\\n.data-rules-section .left-main-content-view .title {\\n      color: #E7554B; }\\n.data-rules-section .left-main-content-view .mat-expansion-panel-content {\\n      padding-top: 5px;\\n      border-top: 1px solid rgba(0, 0, 0, 0.12); }\\n.data-rules-section .left-main-content-view .mat-expansion-panel {\\n      border-radius: 3px; }\\n\"","import { DatarulesService } from './../../shared/services/datarules.service';\nimport { OrganizationService } from './../../shared/services/organization.service';\nimport { Component, OnInit, OnDestroy, Inject } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport * as OrganizationViewModel from '../../shared/view-models/organization.viewmodel';\nimport * as DataViewModel from '../../shared/view-models/data.viewmodel';\nimport { ReportService } from '../../shared/services/report.service';\nimport * as ReportViewModel from '../../shared/view-models/report.viewmodel';\nimport { UserService } from '../../shared/services/user.service';\nimport * as UserViewModel from '../../shared/view-models/user.viewmodel';\nimport { PaginationService } from '../../shared/services/pagination.service';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'app-organization-details',\n  templateUrl: './organization-details.component.html',\n  styleUrls: ['./organization-details.component.scss']\n})\nexport class OrganizationDetailsComponent implements OnInit, OnDestroy {\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private organizationService: OrganizationService,\n    private dataruleService: DatarulesService,\n    private reportService: ReportService,\n    private userService: UserService,\n    private paginationService: PaginationService,\n    public dialog: MatDialog\n  ) {}\n  // Subscription for route\n  sub: any;\n  // Organization Object\n  organization: OrganizationViewModel.OrganizationDetails;\n  // Organization ID\n  organizationID: string;\n  // reports\n  reports: ReportViewModel.SimpleReport[];\n  // rules array\n  rules: DataViewModel.DataRule[];\n  // users array\n  users: UserViewModel.SimpleUserView[];\n  selectedTab = 0;\n  dataSources: DataViewModel.DataSource[];\n  filterForm = new FormGroup({\n    name: new FormControl(''),\n    selectedDataSource: new FormControl('All')\n  });\n  formInitialize = false;\n  sorts = ['Latest', 'Alphabetical'];\n  sortValue = this.sorts[0];\n  searchName;\n  pageSubscription: Subscription;\n  pagination;\n  selectedDataSource = 'All';\n  reportsInitialized = false;\n  usersInitialized = false;\n  datarulesInitialized = false;\n  viewInitialized = false;\n\n  async ngOnInit() {\n    try {\n      this.sub = this.route.params.subscribe(params => {\n        this.organizationID = params['id'];\n      });\n      // gets organization info\n      this.organization = await this.organizationService.getOrganizationById(\n        this.organizationID\n      );\n      // gets reports for this organization\n      this.reports = await this.reportService.getReportByOrganization('orgID');\n\n      this.pageSubscription = this.paginationService.paginationChanged.subscribe(\n        pagination => {\n          this.pagination = pagination;\n        }\n      );\n      this.viewInitialized = true;\n      this.reportsInitialized = true;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  async selected(event) {\n    this.selectedTab = event;\n    if (event === 1) {\n      if (!this.users) {\n        await this.getUsers();\n        await this.userService.setLocalUsers(this.users);\n        this.usersInitialized = await true;\n      }\n    }\n    if (event === 2) {\n      if (!this.rules) {\n        await this.getRules();\n        this.datarulesInitialized = await true;\n      }\n      this.paginationService.resetPage();\n    }\n  }\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n    if (this.pageSubscription) {\n      this.pageSubscription.unsubscribe();\n    }\n  }\n\n  // gets users for this organization\n  async getUsers() {\n    this.users = await this.userService.getUsersByOrganization('orgID');\n    await this.userService.setLocalUsers(this.users);\n  }\n\n  // gets data rules for this organization\n  async getRules() {\n    this.rules = await this.dataruleService.getDataRules(this.organizationID);\n    this.dataSources = [];\n    for (const rule of this.rules) {\n      if (((this.dataSources.filter(datasource => {\n        return datasource._id === rule.datasource._id;\n      })).length === 0)) {\n        this.dataSources.push(rule.datasource);\n      }\n    }\n    console.log(this.dataSources);\n  }\n\n  goToUser(userId) {\n    this.router.navigate(['./u', userId], { relativeTo: this.route });\n  }\n\n  goToReport(reportID) {\n    this.router.navigate(['./r', reportID], { relativeTo: this.route });\n  }\n\n  editRule(ruleID) {\n    this.router.navigate(['./edit-rule', ruleID], { relativeTo: this.route });\n  }\n\n  changeSort(sort) {\n    this.paginationService.resetPage();\n    this.sortValue = sort;\n  }\n\n  onSearch() {\n    this.paginationService.resetPage();\n    const temp = this.filterForm.value;\n    this.searchName = temp.name;\n    this.selectedDataSource = temp.selectedDataSource;\n  }\n\n  searchFormReset() {\n    this.filterForm.reset();\n    this.paginationService.resetPage();\n    this.filterForm.patchValue({ selectedDataSource: 'All' });\n  }\n\n  // Pagination Methods\n  nextPage() {\n    if (this.pagination.currentPage < this.pagination.totalPages) {\n      this.paginationService.changePage(this.pagination.currentPage + 1);\n    }\n  }\n  // Pagination Methods\n  previousPage() {\n    if (this.pagination.currentPage > 1) {\n      this.paginationService.changePage(this.pagination.currentPage - 1);\n    }\n  }\n\n  openDialog() {\n    const dialogRef = this.dialog.open(DeleteOrganizationConfirmation, {\n      data: { organization: this.organization.name }\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.organizationService.deleteOrganization(this.organizationID);\n        this.router.navigate(['../list'], { relativeTo: this.route });\n      }\n    });\n  }\n\n  deleteRule(datarule: DataViewModel.DataRule) {\n    const dialogRef = this.dialog.open(DeleteDataruleConfirmation, {\n      data: { datarule: datarule.name }\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.dataruleService.deleteDataRule(datarule._id);\n      }\n    });\n  }\n}\n\n@Component({\n  selector: 'delete-organization-confirmation',\n  templateUrl: 'delete-organization-confirmation.html'\n})\nexport class DeleteOrganizationConfirmation {\n  constructor(\n    public dialogRef: MatDialogRef<DeleteOrganizationConfirmation>,\n    @Inject(MAT_DIALOG_DATA) public data\n  ) {}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n\n@Component({\n  selector: 'delete-datarule-confirmation',\n  templateUrl: 'delete-datarule-confirmation.html'\n})\nexport class DeleteDataruleConfirmation {\n  constructor(\n    public dialogRef: MatDialogRef<DeleteDataruleConfirmation>,\n    @Inject(MAT_DIALOG_DATA) public data\n  ) {}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n","module.exports = \"<div class=\\\"breadcrumb-container\\\">\\n  <div class=\\\"breadcrumb\\\"> <span class=\\\"active\\\"> <i class=\\\"material-icons\\\"> business </i> Organization List </span></div>\\n</div>\\n\\n<div class=\\\"main-content-view\\\">\\n  <div class=\\\"left-main-content-view\\\" *ngIf=\\\"initialized  && organizations.length > 0\\\">\\n    <div class=\\\"list\\\" *ngIf=\\\"pagination\\\">\\n      <div *ngFor=\\\"let organization of organizations  |   orgList:  search: selectedCategories : sortValue: pagination.currentPage \\\" class=\\\"card\\\">\\n        <div class=\\\"container\\\" (click)=\\\"goToDetails(organization._id)\\\">\\n          <h2 class=\\\"title\\\">{{organization.name}}</h2>\\n          <h4 class=\\\"secondary\\\"><span *ngFor=\\\"let category of organization.categories, let i = index\\\">{{category}}<span *ngIf=\\\"i < organization.categories.length -1\\\">,&nbsp;&nbsp;</span>\\n            </span> </h4>\\n          <p class=\\\"stats\\\">\\n            <span class=\\\"left\\\"><i class=\\\"material-icons\\\">\\n                assessment\\n              </i> {{organization.reportsCount}} Reports</span>\\n            <span class=\\\"middle\\\"> <i class=\\\"material-icons\\\">\\n                person_outline\\n              </i>{{organization.usersCount}} Users</span>\\n            <span class=\\\"right\\\"> <i class=\\\"material-icons\\\">\\n                dns\\n              </i> {{organization.datarulesCount}} Data Rules</span>\\n          </p>\\n        </div>\\n      </div>\\n    </div>\\n    <p class=\\\"pagination\\\" *ngIf=\\\"this.pagination\\\" style=\\\"text-align: center\\\"> <button mat-mini-fab (click)=\\\"previousPage()\\\" color=\\\"white\\\"\\n        [disabled]=\\\"pagination.currentPage===1\\\"> <i class=\\\"material-icons\\\">\\n          chevron_left\\n        </i> </button>\\n      {{this.pagination.currentPage}}/{{this.pagination.totalPages}} <button mat-mini-fab active (click)=\\\"nextPage() \\\" [disabled]=\\\"pagination.currentPage === pagination.totalPages\\\"\\n        color=\\\"white\\\"> <i class=\\\"material-icons\\\">\\n          chevron_right\\n        </i> </button>\\n    </p>\\n  </div>\\n  <div class=\\\"right-main-content-view\\\" *ngIf=\\\"initialized && organizations.length > 0\\\">\\n    <div class=\\\"filter\\\" style=\\\"margin-top: 13px\\\">\\n      <form [formGroup]=\\\"filterForm\\\" (ngSubmit)=\\\"onSearch()\\\">\\n        <button class=\\\"reset\\\" mat-stroked-button (click)=\\\"searchFormReset()\\\">RESET</button>\\n        <p class=\\\"title\\\"> Filter by</p>\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"search\\\">\\n          <mat-label class=\\\"label-color\\\">Name</mat-label>\\n          <input matInput type=\\\"text\\\" placeholder=\\\"Search Name\\\" formControlName=\\\"name\\\">\\n        </mat-form-field>\\n        <p class=\\\"title\\\"> Company Type</p>\\n        <div class=\\\"checkbox\\\" *ngFor=\\\"let category of categories\\\">\\n          <mat-checkbox value=\\\"{{category}}\\\" formControlName=\\\"{{category}}\\\">{{category}}</mat-checkbox>\\n        </div>\\n        <br>\\n        <button mat-raised-button class=\\\"search\\\" type=\\\"submit\\\">Search</button>\\n      </form>\\n    </div>\\n\\n    <div class=\\\"sort\\\">\\n      <p class=\\\"title\\\"> Sort By</p>\\n      <mat-radio-group class=\\\"example-radio-group\\\" [(ngModel)]=\\\"sortValue\\\">\\n        <mat-radio-button *ngFor=\\\"let sort of sorts\\\" value=\\\"{{sort}}\\\" (click)=\\\"changeSort(sort)\\\" class=\\\"radio\\\">\\n          {{sort}}\\n        </mat-radio-button>\\n      </mat-radio-group>\\n    </div>\\n\\n    <div class=\\\"add-button\\\">\\n      <button routerLink=\\\"../new-organization\\\" mat-fab class=\\\"button-fab\\\" color=\\\"primary-button\\\"> <i class=\\\"material-icons plus-icon\\\">\\n          add\\n        </i>\\n        <i class=\\\"material-icons back-icon\\\">\\n          business\\n        </i></button>\\n    </div>\\n  </div>\\n\\n  <div *ngIf=\\\"!initialized\\\" style=\\\"margin:auto; padding-top: 50px;\\\">\\n    <mat-spinner></mat-spinner>\\n    <p style=\\\"text-align: center;\\\">Loading...</p>\\n  </div>\\n\\n  <div *ngIf=\\\"initialized && organizations.length === 0 \\\" class=\\\"empty-list\\\" style=\\\"\\\">\\n    <div class=\\\"icons\\\">\\n      <i class=\\\"material-icons main\\\"> business </i>\\n      <button routerLink=\\\"../new-organization\\\" mat-fab class=\\\"button-fab add\\\" color=\\\"primary-button\\\"> <i class=\\\"material-icons\\\">\\n          add\\n        </i>\\n        </button>\\n    </div>\\n    <h2 class=\\\"title\\\"> There are no organizations.</h2>\\n    <h3 class=\\\"create-text\\\" routerLink=\\\"../new-organization\\\"> Create new organization</h3>\\n  </div>\\n</div>\\n\"","module.exports = \".plus-icon {\\n  background-color: #0877c1;\\n  position: relative;\\n  top: 15px;\\n  z-index: 20;\\n  left: 30px;\\n  font-size: 30px;\\n  border-radius: 50%;\\n  border: 4px solid white;\\n  font-weight: normal; }\\n\\n.back-icon {\\n  position: relative;\\n  margin-left: -30px;\\n  font-size: 55px;\\n  color: #ffffff;\\n  font-weight: normal;\\n  right: 5px; }\\n\"","import { PaginationService } from './../../../shared/services/pagination.service';\nimport { OrganizationService } from './../../../shared/services/organization.service';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport * as OrganizationViewModel from '../../../shared/view-models/organization.viewmodel';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-organization-list',\n  templateUrl: './organization-list.component.html',\n  styleUrls: ['./organization-list.component.scss']\n})\nexport class OrganizationListComponent implements OnInit, OnDestroy {\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    private paginationService: PaginationService\n  ) {}\n  sorts = ['Alphabetical', 'Most Reports', 'Most Users', 'Most Data Rules'];\n  // Array of all organizations\n  organizations: OrganizationViewModel.OrganizationDetails[];\n  searchValue = '';\n  // All categories\n  sortValue = this.sorts[0];\n  categories: string[] = [];\n  search = '';\n  selectedCategories: string[] = [];\n  viewChange = false;\n\n  pagination;\n  pageSubscription: Subscription;\n\n  // form group for filter\n  filterForm = new FormGroup({\n    name: new FormControl('')\n  });\n  initialized = false;\n  async ngOnInit() {\n    // Gets all organizations OnInit\n    try {\n      this.organizations = await this.organizationService.getAllOrganizations();\n      this.organizationService.setLocalOrg(this.organizations);\n      await this.getAllCategories(this.organizations);\n      for (const category of this.categories) {\n        this.filterForm.addControl(category, new FormControl(''));\n      }\n      this.pageSubscription = this.paginationService.paginationChanged.subscribe((pagination) => {\n        this.pagination = pagination;\n      });\n      this.paginationService.getPagination();\n      this.paginationService.changePage(1);\n      this.initialized = true;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  // Go to organization details\n  goToDetails(id) {\n    console.log(id);\n    this.router.navigate(['../', id], { relativeTo: this.route });\n  }\n\n  // Get all categories with no repetition\n  getAllCategories(orgs: OrganizationViewModel.OrganizationDetails[]) {\n    orgs.forEach(org => {\n      org.categories.forEach(category => {\n        if (!this.categories.includes(category)) {\n          this.categories.push(category);\n        }\n      });\n    });\n  }\n\n  // changes sort preferences\n  changeSort(sort) {\n    this.sortValue = sort;\n    this.paginationService.changePage(1);\n  }\n\n  // On Search, will search stuff\n  onSearch() {\n    this.selectedCategories = [];\n    const temp = this.filterForm.value;\n    for (const category of this.categories) {\n      if (category in temp) {\n        if (temp[category]) {\n          this.selectedCategories.push(category);\n        }\n      }\n    }\n    this.search = temp.name;\n    this.paginationService.changePage(1);\n  }\n\n  searchFormReset() {\n    this.filterForm.reset();\n  }\n\n  // Pagination Methods\n  nextPage() {\n    if (this.pagination.currentPage < this.pagination.totalPages) {\n      this.paginationService.changePage(this.pagination.currentPage + 1);\n    }\n  }\n\n  previousPage() {\n    if (this.pagination.currentPage > 1) {\n      this.paginationService.changePage(this.pagination.currentPage - 1);\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.pageSubscription) {\n      this.pageSubscription.unsubscribe();\n\n    }\n  }\n}\n","module.exports = \"<router-outlet></router-outlet>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-organization',\n  templateUrl: './organization.component.html',\n  styleUrls: ['./organization.component.scss']\n})\nexport class OrganizationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"form-container\\\">\\n  <div class=\\\"card\\\">\\n    <div class=\\\"form\\\">\\n      <h2 class=\\\"title\\\"> Share Report</h2>\\n      <hr>\\n      <mat-horizontal-stepper #stepper>\\n        <!-- First Step -->\\n        <mat-step [stepControl]=\\\"orgForm\\\" *ngIf=\\\"orgForm\\\">\\n          <form [formGroup]=\\\"orgForm\\\">\\n\\n            <div class=\\\"row\\\">\\n              <h4 class=\\\"input-header\\\"> Please select organization to share report <i class=\\\"material-icons info-icon\\\">\\n                  info\\n                </i></h4>\\n              <i class=\\\"material-icons form-icon\\\">\\n                business\\n              </i>\\n              <mat-form-field appearance=\\\"fill\\\" style=\\\"width:80%\\\">\\n                <mat-label>Select Organization</mat-label>\\n                <mat-select formControlName=\\\"organization\\\">\\n                  <mat-option (click)=\\\"selectOrg()\\\" *ngFor=\\\"let organization of organizations\\\" value=\\\"{{organization._id}}\\\">{{organization.name}}</mat-option>\\n                </mat-select>\\n                <mat-error>\\n                  Organization is <strong>required</strong>\\n                </mat-error>\\n              </mat-form-field>\\n            </div>\\n            <div class=\\\"row\\\">\\n\\n              <p class=\\\"create-new-text\\\">Organization not on the list? <span class=\\\"create-new-button\\\">Create New Organization </span></p>\\n            </div>\\n            <div class=\\\"buttons\\\">\\n              <button mat-button type='button' routerLink=\\\"../\\\">Cancel</button>\\n              <button mat-button type='button' mat-flat-button class=\\\"done primary\\\" [disabled]=\\\"!orgForm.valid\\\" [ngClass]=\\\"{'button-disabled': !orgForm.valid}\\\"\\n                matStepperNext>Next</button>\\n            </div>\\n          </form>\\n        </mat-step>\\n        <!-- ***** 2nd step: Selecting from list-->\\n        <mat-step *ngIf=\\\"reports && selectedOrg\\\">\\n          <!-- selecting report -->\\n          <form>\\n            <div class=\\\"row\\\">\\n              <h4 class=\\\"input-header\\\"> Please Select a report to share to {{selectedOrg.name}} </h4>\\n            </div>\\n            <div class=\\\"main-content-view\\\" style=\\\"padding:0\\\">\\n              <app-report-list [reports]=\\\"reports\\\" [allowAdd]=false (reportID)=\\\"selectReport($event)\\\" style=\\\"display:flex; width: 100%; margin-bottom: 10px;\\\"></app-report-list>\\n            </div>\\n            <div class=\\\"buttons\\\">\\n              <button mat-button matStepperPrevious>Cancel</button><button [disabled]=\\\"!selectedReport\\\" [ngClass]=\\\"{'button-disabled': !selectedReport}\\\"\\n                (click)=\\\"selectStep(2)\\\" class=\\\"done primary\\\" mat-flat-button>Next</button>\\n            </div>\\n          </form>\\n        </mat-step>\\n\\n        <mat-step *ngIf=\\\"selectedReport && selectedOrg\\\">\\n          <form *ngIf=\\\"selectedReport\\\">\\n\\n            <div class=\\\"row\\\">\\n              <h4 class=\\\"input-header\\\">New Report for {{selectedOrg.name}}</h4>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <p style=\\\"margin:0\\\">This report is currently being used by \\\"2\\\" other organizations:</p>\\n              <ul>\\n                <li>\\n                  Org 1\\n                </li>\\n                <li>\\n                  Org 2\\n                </li>\\n              </ul>\\n            </div>\\n            <div class=\\\"main-content-view\\\" style=\\\"padding:0\\\">\\n              <div style=\\\"max-width:700px; width: 100%; margin-bottom: 10px;\\\">\\n                <div class=\\\"list\\\">\\n                  <div class=\\\"card\\\">\\n                    <div class=\\\"container\\\">\\n                      <h4 class=\\\"title\\\"><strong> {{selectedReport.name}}</strong></h4>\\n                      <p class=\\\"secondary\\\">{{selectedReport.organization.name}}</p>\\n                      <p class=\\\"content\\\"> {{selectedReport.date | date}} </p>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"buttons\\\">\\n              <button mat-button matStepperPrevious>Cancel</button><button class=\\\"done primary\\\" mat-flat-button>Done</button>\\n            </div>\\n          </form>\\n        </mat-step>\\n      </mat-horizontal-stepper>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \".create-new-button:hover {\\n  cursor: pointer; }\\n\\n::ng-deep .mat-horizontal-stepper-header-container {\\n  display: none !important; }\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport * as ReportViewModel from '../../shared/view-models/report.viewmodel';\nimport { ReportService } from 'src/app/shared/services/report.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { OrganizationService } from 'src/app/shared/services/organization.service';\nimport * as OrganizationViewModel from './../../shared/view-models/organization.viewmodel';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport * as DataViewModel from '../../shared/view-models/data.viewmodel';\nimport { DatarulesService } from 'src/app/shared/services/datarules.service';\nimport { MatStepper } from '@angular/material';\n\n@Component({\n  selector: 'app-share-report',\n  templateUrl: './share-report.component.html',\n  styleUrls: ['./share-report.component.scss']\n})\nexport class ShareReportComponent  implements OnInit {\n  @ViewChild('stepper')\n  stepper: MatStepper;\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private reportService: ReportService,\n    private organizationService: OrganizationService,\n    private formBuilder: FormBuilder,\n    private datarulesService: DatarulesService\n  ) {}\n  reports: ReportViewModel.SimpleReport[];\n  organizations: OrganizationViewModel.SimpleOrganization[];\n  orgForm: FormGroup;\n  selectTypeForm: FormGroup;\n\n  datasources: DataViewModel.DataSource[];\n  selectedReport: ReportViewModel.SimpleReport;\n  selectedOrg;\n  organizationID;\n  sub: any;\n\n  async ngOnInit() {\n    try {\n      this.reports = await this.reportService.getReportByOrganization('orgID');\n      this.organizations = await this.organizationService.getAllOrganizationsWithNoDetails();\n      this.datasources = await this.datarulesService.getAllDataSourceForOrganization(\n        'id'\n      );\n      this.orgForm = this.formBuilder.group({\n        organization: ['', Validators.required]\n      });\n      this.sub = this.route.params.subscribe(params => {\n        this.organizationID = params['id'];\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  selectReport(id) {\n    this.selectedReport = this.reports.find(report => {\n      return report._id === id;\n    });\n  }\n\n  selectStep(id) {\n    this.stepper.selectedIndex = id;\n  }\n\n  selectOrg() {\n   this.selectedOrg = this.organizations.find(org => {\n     return org._id === this.orgForm.value.organization;\n   });\n  }\n}\n","module.exports = \"<div class=\\\"dialog\\\">\\n    <h2 class=\\\"title delete\\\"><i class=\\\"material-icons\\\">\\n        warning\\n      </i>Delete {{data.user}}?</h2>\\n    <div mat-dialog-content>\\n      <h4 class=\\\"subtitle\\\">Warning: this cannot be undone</h4>\\n      <p>Iam id ipsum absurdum, maximum malum neglegi. Quoniam, si dis placet, ab Epicuro loqui discimus. Duo Reges: constructio interrete.</p>\\n    </div>\\n    <div mat-dialog-actions style=\\\"float:right\\\">\\n      <button mat-button (click)=\\\"onNoClick()\\\">Cancel</button>\\n      <button mat-button mat-flat-button [mat-dialog-close]=\\\"true\\\" class=\\\"danger\\\" cdkFocusInitial>Continue</button>\\n    </div>\\n  </div>\\n\"","module.exports = \"<div *ngIf=\\\"organization != null && user != null && viewInitialized\\\">\\n\\n  <div class=\\\"breadcrumb-container\\\">\\n    <!-- Breadcrumbs for user details under user list-->\\n    <div *ngIf=\\\"this.orgID === undefined\\\">\\n      <div class=\\\"breadcrumb\\\"> <span routerLink=\\\"../../\\\"><i class=\\\"material-icons\\\">\\n            person_outline </i> User List </span> &nbsp;&nbsp; <i class=\\\"material-icons arrow\\\"> keyboard_arrow_right </i> <i style=\\\"margin-left: -14px\\\"\\n          class=\\\"material-icons arrow\\\"> keyboard_arrow_right </i>&nbsp;&nbsp; <span class=\\\"active\\\"> {{user.firstName}} {{user.lastName}}\\n        </span> </div>\\n    </div>\\n\\n    <!-- Breadcrumbs for user details under organization list-->\\n    <div *ngIf=\\\"this.orgID != undefined\\\">\\n      <div class=\\\"breadcrumb\\\"> <span routerLink=\\\"../../../\\\"><i class=\\\"material-icons\\\">\\n            business </i> Organization List </span> &nbsp;&nbsp; <i class=\\\"material-icons arrow\\\"> keyboard_arrow_right </i> <i style=\\\"margin-left: -14px\\\"\\n          class=\\\"material-icons arrow\\\"> keyboard_arrow_right </i>&nbsp;&nbsp; <span routerLink=\\\"../../\\\"> {{organization.name}}</span>\\n        &nbsp;&nbsp; <i class=\\\"material-icons arrow\\\"> keyboard_arrow_right </i> <i style=\\\"margin-left: -14px\\\" class=\\\"material-icons arrow\\\">\\n          keyboard_arrow_right </i>&nbsp;&nbsp; <span class=\\\"active\\\"> {{user.firstName}} {{user.lastName}} </span> </div>\\n    </div>\\n\\n  </div>\\n\\n  <div class=\\\"main-content-view\\\">\\n    <div class=\\\"full-content-view\\\">\\n\\n\\n      <div class=\\\"details\\\">\\n        <div class=\\\"more-button\\\">\\n          <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\">\\n            <mat-icon color=\\\"more-color\\\">more_vert</mat-icon>\\n          </button>\\n\\n          <mat-menu #menu=\\\"matMenu\\\">\\n            <button mat-menu-item (click)=\\\"ghostView()\\\">User View</button>\\n            <mat-divider></mat-divider>\\n            <button mat-menu-item routerLink=\\\"./edit-user\\\">Edit</button>\\n            <button mat-menu-item (click)=\\\"openDialog()\\\">Delete</button>\\n          </mat-menu>\\n        </div>\\n        <div class=\\\"card\\\">\\n          <div class=\\\"container\\\">\\n            <h2 class=\\\"title\\\"> {{user.firstName}} {{user.lastName}}</h2>\\n            <h4 class=\\\"secondary\\\">Viewer</h4>\\n            <p class=\\\"content\\\">Gmail: {{user.googleID}}</p>\\n            <p class=\\\"content\\\">Secondary Email: {{user.secondaryEmail}}</p>\\n            <p class=\\\"content\\\"> Accesses: <span *ngFor=\\\"let org of user.organizations\\\"> {{org.name}} </span></p>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div>\\n        <h3 class=\\\"list-title\\\">Report List</h3>\\n        <app-report-list style=\\\"display:flex; width: 100%;\\\" [reports]=\\\"reports\\\" (reportID)=\\\"goToReport($event)\\\"></app-report-list>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div *ngIf=\\\"!viewInitialized \\\" style=\\\"margin:auto; padding-top: 80px; text-align: center\\\">\\n  <mat-spinner style=\\\"margin:auto\\\"></mat-spinner>\\n  <p style=\\\"text-align: center;\\\">User Loading...</p>\\n</div>\\n\"","module.exports = \"/* Tool bar top colour */\\n/* Main content colour */\\n/*************** SIDE NAVIGATION VARIABLES *******************/\\n/* Side nav color */\\n/********* ORGANIZATION DETAILS VARIABLES **********/\\n/******* GHOST HEADER TITLE ******/\\n/*********** LIST CARD VARIABLES  ***********/\\n/********* BREADCRUMBS STYLING ******/\\n/******* FORMS STYLING & FILTERS ******/\\n/***** Filter Card ***/\\n/****** Buttons Colors  **/\\n/**** Empty List Color Styles ****/\\n.list-title {\\n  color: #3e3e3e;\\n  margin-bottom: 5px; }\\n\"","import { GhostService } from './../../shared/services/ghost.service';\nimport { ReportService } from './../../shared/services/report.service';\nimport { OrganizationService } from './../../shared/services/organization.service';\nimport { UserService } from './../../shared/services/user.service';\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport * as UserViewModel from '../../shared/view-models/user.viewmodel';\nimport * as ReportViewModel from '../../shared/view-models/report.viewmodel';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'app-user-details',\n  templateUrl: './user-details.component.html',\n  styleUrls: ['./user-details.component.scss']\n})\nexport class UserDetailsComponent implements OnInit {\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private userService: UserService,\n    private organizationService: OrganizationService,\n    private reportService: ReportService,\n    public dialog: MatDialog,\n    private ghostsService: GhostService\n  ) {}\n\n  sub: any;\n  userID: string;\n  orgID: string;\n  reports: ReportViewModel.SimpleReport[];\n\n  organization; // Name of the org from previous view for breadcrumbs purposes\n  user: UserViewModel.User;\n  viewInitialized = false;\n\n  async ngOnInit() {\n    try {\n      this.sub = this.route.params.subscribe(params => {\n        this.orgID = params['id'];\n        this.userID = params['userID'];\n      });\n      if (this.orgID) {\n        this.organization = await this.organizationService.getLocalOrganization(this.orgID);\n      } else {\n        this.organization = false;\n      }\n      this.user = await this.userService.getUser(this.userID);\n      this.reports = await this.reportService.getReportByOrganizations([\n        'orgIDs'\n      ]);\n      this.viewInitialized = true;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  ghostView() {\n    const userName = this.user.firstName + ' ' + this.user.lastName;\n    this.ghostsService.activatedGhost();\n    this.router.navigate(['./ghost', userName], { relativeTo: this.route });\n  }\n\n\n  // Gets the name of the organization for breadcrumbs & user acceses\n  private getOrganization(id) {\n    return this.organizationService.getOrganizationById(id);\n  }\n\n  // Gets the user details\n  private getUserDetails(id) {\n    return this.userService.getUser(id);\n  }\n\n  public goToReport(reportID) {\n    this.router.navigate(['./r', reportID], { relativeTo: this.route });\n  }\n\n  openDialog() {\n    const user = this.user.firstName + ' ' + this.user.lastName;\n    const dialogRef = this.dialog.open(DeleteUserConfirmation, {\n      data: { user: user }\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.userService.deleteUser(this.userID);\n        this.router.navigate(['../../'], { relativeTo: this.route });\n      }\n    });\n  }\n}\n\n@Component({\n  selector: 'delete-user-confirmation',\n  templateUrl: 'delete-user-confirmation.html'\n})\nexport class DeleteUserConfirmation {\n  constructor(\n    public dialogRef: MatDialogRef<DeleteUserConfirmation>,\n    @Inject(MAT_DIALOG_DATA) public data\n  ) {}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n","module.exports = \"<div class=\\\"left-main-content-view\\\">\\n  <div *ngIf=\\\"reports != null \\\">\\n    <div class=\\\"list\\\">\\n      <div *ngFor=\\\"let report of reports | reportList: searchName: selectedOrganization : sortValue :  pagination.currentPage\\\" class=\\\"card\\\">\\n        <div class=\\\"container\\\" (click)=\\\"reportClicked(report._id)\\\">\\n          <h4 class=\\\"title\\\"><strong> {{report.name}}</strong></h4>\\n          <p class=\\\"secondary\\\">{{report.organization.name}}</p>\\n          <p class=\\\"content\\\"> {{report.date | date}} </p>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <p class=\\\"pagination\\\" *ngIf=\\\"this.pagination\\\" style=\\\"text-align: center\\\"> <button mat-mini-fab (click)=\\\"previousPage()\\\" color=\\\"white\\\"\\n    [disabled]=\\\"pagination.currentPage===1\\\"> <i class=\\\"material-icons\\\">\\n      chevron_left\\n    </i> </button>\\n  {{this.pagination.currentPage}}/{{this.pagination.totalPages}} <button mat-mini-fab active (click)=\\\"nextPage() \\\" [disabled]=\\\"pagination.currentPage === pagination.totalPages\\\"\\n    color=\\\"white\\\"> <i class=\\\"material-icons\\\">\\n      chevron_right\\n    </i> </button>\\n</p>\\n\\n</div>\\n<div class=\\\"right-main-content-view\\\" *ngIf=\\\"formInitialize\\\">\\n  <div class=\\\"filter\\\">\\n    <form [formGroup]=\\\"filterForm\\\" (ngSubmit)=\\\"onSearch()\\\">\\n      <button class=\\\"reset\\\" mat-stroked-button (click)=\\\"searchFormReset()\\\">RESET</button>\\n      <p class=\\\"title\\\"> Filter by</p>\\n      <mat-form-field appearance=\\\"outline\\\" class=\\\"search\\\">\\n        <mat-label class=\\\"label-color\\\">Name</mat-label>\\n        <input matInput type=\\\"text\\\" placeholder=\\\"Search Name\\\" formControlName=\\\"name\\\">\\n      </mat-form-field>\\n      <p class=\\\"title\\\" *ngIf=\\\"organizations.length > 1\\\"> Organization</p>\\n      <mat-form-field appearance=\\\"outline\\\" class=\\\"select\\\" *ngIf=\\\"organizations.length > 1\\\">\\n        <mat-select formControlName=\\\"selectedOrganization\\\">\\n          <mat-option value=\\\"All\\\">All</mat-option>\\n          <mat-option *ngFor=\\\"let organization of organizations\\\" value=\\\"{{organization._id}}\\\">{{organization.name}}</mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n      <br>\\n      <button mat-raised-button class=\\\"search\\\" type=\\\"submit\\\">Search</button>\\n    </form>\\n  </div>\\n  <div class=\\\"sort\\\">\\n    <p class=\\\"title\\\"> Sort By</p>\\n    <mat-radio-group class=\\\"example-radio-group\\\" [(ngModel)]=\\\"sortValue\\\">\\n      <mat-radio-button *ngFor=\\\"let sort of sorts\\\" value=\\\"{{sort}}\\\" (click)=\\\"changeSort(sort)\\\" class=\\\"radio\\\">\\n        {{sort}}\\n      </mat-radio-button>\\n    </mat-radio-group>\\n  </div>\\n\\n\\n  <div class=\\\"add-button\\\" *ngIf=\\\"allowAdd\\\">\\n    <button mat-fab class=\\\"button-fab\\\" color=\\\"primary-button\\\" *ngIf=\\\"organizationID\\\" routerLink='new-report'> <i class=\\\"material-icons plus-icon\\\">\\n      add\\n    </i>\\n    <i class=\\\"material-icons back-icon\\\">\\n      assessment\\n    </i></button>\\n    <button mat-fab class=\\\"button-fab\\\" color=\\\"primary-button\\\" *ngIf=\\\"!organizationID\\\" routerLink='../new-report'> <i class=\\\"material-icons plus-icon\\\">\\n      add\\n    </i>\\n    <i class=\\\"material-icons back-icon\\\">\\n      assessment\\n    </i></button>\\n  </div>\\n</div>\\n\"","module.exports = \"\"","import { ActivatedRoute } from '@angular/router';\nimport { OrganizationService } from './../../services/organization.service';\nimport { Subscription } from 'rxjs';\nimport {\n  Component,\n  OnInit,\n  Input,\n  Output,\n  EventEmitter,\n  OnDestroy,\n  OnChanges\n} from '@angular/core';\nimport * as ReportViewModel from '../../view-models/report.viewmodel';\nimport { PaginationService } from '../../services/pagination.service';\nimport * as OrganizationViewModel from '../../view-models/organization.viewmodel';\nimport { FormControl, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-report-list',\n  templateUrl: './report-list.component.html',\n  styleUrls: ['./report-list.component.scss']\n})\nexport class ReportListComponent implements OnInit, OnDestroy, OnChanges {\n  constructor(\n    private paginationService: PaginationService,\n    private organizationService: OrganizationService,\n    private route: ActivatedRoute\n  ) {}\n  @Input()\n  reports: ReportViewModel.SimpleReport[];\n  @Input()\n  allowAdd: boolean;\n  @Output()\n  reportID = new EventEmitter<string>();\n  sub: any;\n  pageSubscription: Subscription;\n  organizations: OrganizationViewModel.SimpleOrganization[] = [];\n  pagination;\n  sorts = ['Latest', 'Alphabetical'];\n  selectedOrganization = '';\n  sortValue = this.sorts[0];\n  organizationID;\n  searchName;\n  filterForm = new FormGroup({\n    name: new FormControl('')\n  });\n  formInitialize = false;\n  userID;\n\n  async ngOnInit() {\n    try {\n      this.paginationService.resetPage();\n      this.sub = this.route.params.subscribe(params => {\n        this.organizationID = params['id'];\n        this.userID = params['userID'];\n      });\n      this.pageSubscription = this.paginationService.paginationChanged.subscribe(\n        pagination => {\n          this.pagination = pagination;\n        }\n      );\n      this.paginationService.getPagination();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async ngOnChanges() {\n    if (this.reports != null && this.organizations != null) {\n      for (const report of this.reports) {\n        if (!this.organizations.includes(report.organization)) {\n          this.organizations.push(report.organization);\n        }\n      }\n      if (this.organizations.length > 1) {\n        this.filterForm.addControl(\n          'selectedOrganization',\n          new FormControl('All')\n        );\n      }\n      this.formInitialize = true;\n    }\n  }\n\n  reportClicked(id: string) {\n    this.reportID.emit(id);\n  }\n\n  changeSort(sort) {\n    this.paginationService.resetPage();\n    this.sortValue = sort;\n  }\n\n  onSearch() {\n    this.paginationService.resetPage();\n    const temp = this.filterForm.value;\n    this.searchName = temp.name;\n    this.selectedOrganization = temp.selectedOrganization;\n  }\n\n  searchFormReset() {\n    this.filterForm.reset();\n    this.filterForm.patchValue({ selectedOrganization: 'All' });\n    this.paginationService.resetPage();\n  }\n\n  // Pagination Methods\n  nextPage() {\n    if (this.pagination.currentPage < this.pagination.totalPages) {\n      this.paginationService.changePage(this.pagination.currentPage + 1);\n    }\n  }\n  // Pagination Methods\n  previousPage() {\n    if (this.pagination.currentPage > 1) {\n      this.paginationService.changePage(this.pagination.currentPage - 1);\n    }\n  }\n\n  ngOnDestroy() {\n    this.pageSubscription.unsubscribe();\n  }\n}\n","module.exports = \"<div class=\\\"left-main-content-view\\\">\\n  <div *ngIf=\\\"users != null\\\">\\n    <div class=\\\"list\\\">\\n      <div *ngFor=\\\"let user of users | userList: searchName: selectedRole: selectedOrganization : sortValue :  pagination.currentPage\\\"\\n        class=\\\"card\\\">\\n        <div class=\\\"container\\\" (click)=\\\"userClicked(user._id)\\\">\\n          <h4 class=\\\"title\\\" style=\\\"font-weight: bold\\\">{{user.firstName}} {{user.lastName}}</h4>\\n          <p class=\\\"secondary\\\"> Viewer : <span *ngFor=\\\"let org of user.organizations; let i = index\\\">\\n              {{org.name}}<span *ngIf=\\\"i < user.organizations.length-1\\\">, </span> </span> </p>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <p class=\\\"pagination\\\" *ngIf=\\\"this.pagination\\\" style=\\\"text-align: center\\\"> <button mat-mini-fab (click)=\\\"previousPage()\\\" color=\\\"white\\\"\\n    [disabled]=\\\"pagination.currentPage===1\\\"> <i class=\\\"material-icons\\\">\\n      chevron_left\\n    </i> </button>\\n  {{this.pagination.currentPage}}/{{this.pagination.totalPages}} <button mat-mini-fab active (click)=\\\"nextPage() \\\" [disabled]=\\\"pagination.currentPage === pagination.totalPages\\\"\\n    color=\\\"white\\\"> <i class=\\\"material-icons\\\">\\n      chevron_right\\n    </i> </button>\\n</p>\\n</div>\\n<div class=\\\"right-main-content-view\\\" *ngIf=\\\"formInitialize\\\">\\n  <div class=\\\"filter\\\">\\n    <form [formGroup]=\\\"filterForm\\\" (ngSubmit)=\\\"onSearch()\\\">\\n      <button class=\\\"reset\\\" mat-stroked-button (click)=\\\"searchFormReset()\\\">RESET</button>\\n      <p class=\\\"title\\\"> Filter by</p>\\n      <mat-form-field appearance=\\\"outline\\\" class=\\\"search\\\">\\n        <mat-label class=\\\"label-color\\\">Name</mat-label>\\n        <input matInput type=\\\"text\\\" placeholder=\\\"Search Name\\\" formControlName=\\\"name\\\">\\n      </mat-form-field>\\n      <p class=\\\"title\\\" *ngIf=\\\"!organizationID\\\"> Role</p>\\n      <mat-form-field appearance=\\\"outline\\\" class=\\\"select\\\" *ngIf=\\\"!organizationID\\\">\\n        <mat-select formControlName=\\\"selectedRole\\\">\\n          <mat-option value=\\\"All\\\">All</mat-option>\\n          <mat-option value=\\\"Admin\\\">Admin</mat-option>\\n          <mat-option value=\\\"Viewer\\\">Viewer</mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n      <p class=\\\"title\\\" *ngIf=\\\"!organizationID\\\"> Organization</p>\\n      <mat-form-field class=\\\"select\\\" appearance=\\\"outline\\\" *ngIf=\\\"!organizationID\\\">\\n        <mat-select formControlName=\\\"selectedOrganization\\\">\\n          <mat-option value=\\\"All\\\">All</mat-option>\\n          <mat-option *ngFor=\\\"let organization of organizations\\\" value=\\\"{{organization._id}}\\\">{{organization.name}}</mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n      <br>\\n      <button mat-raised-button class=\\\"search\\\" type=\\\"submit\\\">Search</button>\\n    </form>\\n  </div>\\n\\n  <div class=\\\"sort\\\">\\n    <p class=\\\"title\\\"> Sort By</p>\\n    <mat-radio-group class=\\\"example-radio-group\\\" [(ngModel)]=\\\"sortValue\\\">\\n      <mat-radio-button *ngFor=\\\"let sort of sorts\\\" value=\\\"{{sort}}\\\" (click)=\\\"changeSort(sort)\\\" class=\\\"radio\\\">\\n        {{sort}}\\n      </mat-radio-button>\\n    </mat-radio-group>\\n\\n  </div>\\n\\n  <div class=\\\"add-button\\\">\\n    <button  *ngIf=\\\"organizationID\\\" routerLink=\\\"./new-user\\\" mat-fab class=\\\"button-fab\\\" color=\\\"primary-button\\\"> <i class=\\\"material-icons plus-icon\\\">\\n      add\\n    </i>\\n    <i class=\\\"material-icons back-icon\\\">\\n      person_outline\\n    </i></button>\\n    <button  *ngIf=\\\"!organizationID\\\" routerLink=\\\"../new-user\\\" mat-fab class=\\\"button-fab\\\" color=\\\"primary-button\\\"> <i class=\\\"material-icons plus-icon\\\">\\n      add\\n    </i>\\n    <i class=\\\"material-icons back-icon\\\">\\n      person_outline\\n    </i></button>\\n  </div>\\n</div>\\n\"","module.exports = \"\"","import { OrganizationService } from './../../services/organization.service';\nimport { Component, OnInit, EventEmitter, Input, Output, OnDestroy } from '@angular/core';\nimport * as UserViewModel from '../../view-models/user.viewmodel';\nimport * as OrganizationViewModel from '../../view-models/organization.viewmodel';\nimport { PaginationService } from '../../services/pagination.service';\nimport { Subscription } from 'rxjs';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.scss']\n})\nexport class UserListComponent implements OnInit, OnDestroy {\n  constructor(\n    private organizationService: OrganizationService,\n    private paginationService: PaginationService,\n    private route: ActivatedRoute\n  ) {}\n\n  @Input()\n  users: UserViewModel.SimpleUserView[];\n  @Output()\n  userID = new EventEmitter<string>();\n  sub: any;\n  pageSubscription: Subscription;\n  selectedOrganization = '';\n  selectedRole = '';\n  organizations: OrganizationViewModel.SimpleOrganization[];\n  sorts = ['First Name', 'Last Name'];\n  sortValue = this.sorts[0];\n  organizationID;\n  searchName;\n  filterForm = new FormGroup({\n    name: new FormControl(''),\n    selectedRole: new FormControl('All')\n  });\n  pagination;\n  formInitialize = false;\n\n\n  async ngOnInit() {\n    try {\n      this.paginationService.resetPage();\n      this.sub = this.route.params.subscribe(params => {\n        this.organizationID = params['id'];\n      });\n      this.pageSubscription = this.paginationService.paginationChanged.subscribe(\n        pagination => {\n          this.pagination = pagination;\n        }\n      );\n      this.paginationService.getPagination();\n      if (!this.organizationID) {\n        this.organizations = await this.organizationService.getAllOrganizationsWithNoDetails();\n        this.filterForm.addControl(\n          'selectedOrganization',\n          new FormControl('All')\n        );\n      }\n      this.formInitialize = true;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  userClicked(id: string) {\n    this.userID.emit(id);\n  }\n\n  changeSort(sort) {\n    this.paginationService.resetPage();\n    this.sortValue = sort;\n  }\n\n  onSearch() {\n    this.paginationService.resetPage();\n    const temp = this.filterForm.value;\n    this.searchName = temp.name;\n    this.selectedOrganization = temp.selectedOrganization;\n    this.selectedRole = temp.selectedRole;\n  }\n\n  searchFormReset() {\n    this.filterForm.reset();\n    this.filterForm.patchValue({ selectedRole: 'All' });\n    this.filterForm.patchValue({ selectedOrganization: 'All' });\n    this.paginationService.resetPage();\n  }\n\n\n  // Pagination Methods\n  nextPage() {\n    if (this.pagination.currentPage < this.pagination.totalPages) {\n      this.paginationService.changePage(this.pagination.currentPage + 1);\n    }\n  }\n  // Pagination Methods\n  previousPage() {\n    if (this.pagination.currentPage > 1) {\n      this.paginationService.changePage(this.pagination.currentPage - 1);\n    }\n  }\n\n  ngOnDestroy() {\n    this.pageSubscription.unsubscribe();\n  }\n}\n\n","import { Pipe, PipeTransform, OnInit, OnDestroy } from '@angular/core';\n@Pipe({\n  name: 'category'\n})\nexport class CategoryPipe implements PipeTransform {\n  constructor() {}\n\n  transform(categories: any, searchName: string): any {\n    let currentList = categories;\n    if (searchName && searchName !== '') {\n      // If there's a search\n      if (searchName) {\n        currentList = currentList.filter(\n          (el: any) => el.toLowerCase().indexOf(searchName.toLowerCase()) > -1\n        );\n       }\n    }\n    return currentList;\n  }\n}\n","import { Pipe, PipeTransform, OnInit, OnDestroy } from '@angular/core';\nimport { PaginationService } from '../services/pagination.service';\n@Pipe({\n  name: 'datarulesList'\n})\nexport class DataRulesListPipe implements PipeTransform {\n\n  constructor(private paginationService: PaginationService) {}\n\n  transform(\n    rules: any,\n    searchName: string,\n    datasource: string,\n    sort: string,\n    page: number,\n  ): any {\n    if (rules) {\n      let currentList = rules;\n\n      // If there's a search\n      if (searchName) {\n        searchName = searchName.toLowerCase();\n        currentList = currentList.filter(\n          (el: any) => el.name.toLowerCase().indexOf(searchName) > -1\n        );\n      }\n\n      // if there's a organization\n      if (datasource) {\n        if (datasource !== 'All') {\n          currentList = currentList.filter(\n            element => element.datasource._id === datasource\n          );\n        }\n      }\n     // if there's a sort\n     if (sort) {\n      if (sort === 'Alphabetical') {\n        const sorted = currentList.sort(\n          (a, b) => (a.name > b.name ? 1 : a.name === b.name ? 0 : -1)\n        );\n        if (sort.charAt(0) === '-') {\n          sorted.reverse();\n        }\n        currentList = sorted;\n      }\n      if (sort === 'Latest') {\n        const sorted = currentList.sort(\n          (a, b) =>\n            new Date(a.date) < new Date(b.date)\n              ? 1\n              : new Date(a.date) === new Date(b.date)\n                ? 0\n                : -1\n        );\n        currentList = sorted;\n      }\n    }\n      this.paginationService.changeTotalPages(\n        Math.ceil(\n          currentList.length / this.paginationService.pagination.itemsPerPage\n        )\n      );\n\n      return currentList.slice(\n        this.paginationService.pagination.currentPage *\n          this.paginationService.pagination.itemsPerPage -\n          this.paginationService.pagination.itemsPerPage,\n        this.paginationService.pagination.itemsPerPage *\n          this.paginationService.pagination.currentPage\n      );\n\n    }\n    return rules;\n  }\n}\n","import { Pipe, PipeTransform, OnInit, OnDestroy } from '@angular/core';\nimport { PaginationService } from '../services/pagination.service';\n@Pipe({\n  name: 'orgList'\n})\nexport class OrgListPipe implements PipeTransform {\n\n  constructor(private paginationService: PaginationService) {}\n\n  transform(\n    organization: any,\n    searchName: string,\n    categories: string[],\n    sort: string,\n    page: number,\n  ): any {\n    if (organization) {\n      let currentList = organization;\n\n      // If there's a search\n      if (searchName) {\n        searchName = searchName.toLowerCase();\n        currentList = currentList.filter(\n          (el: any) => el.name.toLowerCase().indexOf(searchName) > -1\n        );\n      }\n\n      // If there's a category\n      if (categories.length > 0) {\n        currentList = currentList.filter(element =>\n          categories.every(temp => element.categories.indexOf(temp) >= 0)\n        );\n      }\n      // If there's a sort\n      if (sort) {\n\n        if (sort === 'Alphabetical') {\n          const sorted = currentList.sort(\n            (a, b) => (a.name > b.name ? 1 : a.name === b.name ? 0 : -1)\n          );\n          if (sort.charAt(0) === '-') {\n            sorted.reverse();\n          }\n          currentList = sorted;\n        }\n        if (sort === 'Most Reports') {\n          const sorted = currentList.sort(\n            (a, b) =>\n              Number(a.reportsCount) < Number(b.reportsCount)\n                ? 1\n                : Number(a.reportsCount) === Number(b.reportsCount)\n                  ? 0\n                  : -1\n          );\n          currentList = sorted;\n        }\n        if (sort === 'Most Users') {\n          const sorted = currentList.sort(\n            (a, b) =>\n              Number(a.usersCount) < Number(b.usersCount)\n                ? 1\n                : Number(a.usersCount) === Number(b.usersCount)\n                  ? 0\n                  : -1\n          );\n          currentList = sorted;\n        }\n        if (sort === 'Most Data Rules') {\n          const sorted = currentList.sort(\n            (a, b) =>\n              Number(a.datarulesCount) < Number(b.datarulesCount)\n                ? 1\n                : Number(a.datarulesCount) === Number(b.datarulesCount)\n                  ? 0\n                  : -1\n          );\n          currentList = sorted;\n        }\n      }\n\n      this.paginationService.changeTotalPages(\n        Math.ceil(\n          currentList.length / this.paginationService.pagination.itemsPerPage\n        )\n      );\n\n      return currentList.slice(\n        this.paginationService.pagination.currentPage *\n          this.paginationService.pagination.itemsPerPage -\n          this.paginationService.pagination.itemsPerPage,\n        this.paginationService.pagination.itemsPerPage *\n          this.paginationService.pagination.currentPage\n      );\n\n    }\n    return organization;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { PaginationService } from '../services/pagination.service';\n@Pipe({\n  name: 'pagination'\n})\nexport class PaginationPipe implements PipeTransform {\n  constructor(private paginationService: PaginationService) {}\n\n  transform(currentList: object[], page: number): any {\n    this.paginationService.changeTotalPages(\n      Math.ceil(\n        currentList.length / this.paginationService.pagination.itemsPerPage\n      )\n    );\n\n    return currentList.slice(\n      this.paginationService.pagination.currentPage *\n        this.paginationService.pagination.itemsPerPage -\n        this.paginationService.pagination.itemsPerPage,\n      this.paginationService.pagination.itemsPerPage *\n        this.paginationService.pagination.currentPage\n    );\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'searchName'\n})\nexport class SearchNamePipe implements PipeTransform {\n  transform(value: any[], input: string) {\n    console.log('searchName');\n\n    if (value) {\n      if (input) {\n        input = input.toLowerCase();\n        const temp = value.filter(\n          (el: any) => el.name.toLowerCase().indexOf(input) > -1\n        );\n        return temp;\n      }\n      return value;\n    }\n    return value;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { PaginationService } from '../services/pagination.service';\n@Pipe({\n  name: 'userList'\n})\nexport class UserListPipe implements PipeTransform {\n  constructor(private paginationService: PaginationService) {}\n  transform(\n    userList: any[],\n    searchName: string,\n    role: string,\n    organization: string,\n    sort: string,\n    page: number\n  ): any {\n    let currentList = userList;\n    // If there's a reportList\n    if (userList) {\n      // If there's a search\n      if (searchName) {\n        searchName = searchName.toLowerCase();\n        currentList = currentList.filter(\n          (el: any) =>\n            (el.firstName + ' ' + el.lastName)\n              .toLowerCase()\n              .indexOf(searchName) > -1\n        );\n      }\n\n      // if there's a organization\n      if (organization) {\n        if (organization !== 'All') {\n          currentList = currentList.filter(function(element) {\n            return element.organizations.filter(function(org) {\n                console.log(org);\n                return org._id === organization;\n              }).length > 0;\n          });\n        }\n      }\n\n      // checks for role\n      if (role !== 'All' && role) {\n        currentList = currentList.filter(element => element.role === role);\n      }\n\n\n      // if there's a sort\n      if (sort) {\n        if (sort === 'First Name') {\n          const sorted = currentList.sort(\n            (a, b) =>\n              a.firstName > b.firstName\n                ? 1\n                : a.firstName === b.firstName\n                  ? 0\n                  : -1\n          );\n          currentList = sorted;\n        }\n        if (sort === 'Last Name') {\n          const sorted = currentList.sort(\n            (a, b) =>\n              a.lastName > b.lastName ? 1 : a.lastName === b.lastName ? 0 : -1\n          );\n          currentList = sorted;\n        }\n      }\n      this.paginationService.changeTotalPages(\n        Math.ceil(\n          currentList.length / this.paginationService.pagination.itemsPerPage\n        )\n      );\n\n      return currentList.slice(\n        this.paginationService.pagination.currentPage *\n          this.paginationService.pagination.itemsPerPage -\n          this.paginationService.pagination.itemsPerPage,\n        this.paginationService.pagination.itemsPerPage *\n          this.paginationService.pagination.currentPage\n      );\n    }\n\n    return currentList;\n  }\n}\n","import { CreateNewDataRule } from './../view-models/data.viewmodel';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport * as DataViewModel from '../view-models/data.viewmodel';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DatarulesService {\n  constructor(private http: HttpClient) {}\n\n  dataRules: DataViewModel.DataRule[];\n  URL = '../../../assets/example-data/';\n\n  /**\n   * Gets all the data source for a specific organization\n   * @param organizationID - ID of the organization you want to get the data source for\n   */\n  public async getDataRules(\n    organizationID: string\n  ): Promise<DataViewModel.DataRule[]> {\n    return await this.http\n      .get<DataViewModel.DataRule[]>( this.URL +\n        'datarules.mockdata.json'\n      )\n      .toPromise();\n  }\n\n  /**\n   * Getting the list of all Datasource for specific organization\n   * @param orgID - ID of organization you want to get all available data source for it\n   */\n  public async getAllDataSourceForOrganization(\n    orgID: string\n  ): Promise<DataViewModel.DataSource[]> {\n    return await this.http\n      .get<DataViewModel.DataSource[]>(this.URL +\n        'datasources.mockdata.json'\n      )\n      .toPromise();\n  }\n\n  /**\n   * Create new data rule\n   * @param datarule - datarule object\n   */\n  public async createNewDataRule(datarule: DataViewModel.CreateNewDataRule) {\n    return await ((this.http.post(this.URL + 'createRule/', datarule)).toPromise());\n  }\n\n  /**\n   * Edit data rule\n   * @param datarule - datarule object\n   */\n  public async editDataRule(datarule: DataViewModel.EditDataRule) {\n    return await ((this.http.post(this.URL + 'editRule/', datarule)).toPromise());\n  }\n\n  /**\n   * Delete Data rule\n   * @param dataruleID - id of the data rule you want to delete\n   */\n  public async deleteDataRule(dataruleID: string) {\n    return await ((this.http.post(this.URL + 'deleteRule/', dataruleID)).toPromise());\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GhostService {\n\n  ghostStatus  = false;\n\n  ghostStatusObservable = new Subject<boolean>();\n\n  constructor() { }\n\n\n  getStatus() {\n    this.ghostStatusObservable.next(this.ghostStatus);\n  }\n\n  activatedGhost() {\n    this.ghostStatus = true;\n    this.ghostStatusObservable.next(this.ghostStatus);\n  }\n\n  disableGhost() {\n    this.ghostStatus = false;\n    this.ghostStatusObservable.next(this.ghostStatus);\n  }\n}\n"],"sourceRoot":""}