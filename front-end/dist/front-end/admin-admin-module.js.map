{"version":3,"sources":["webpack:///./src/app/admin/admin-report-details/admin-report-details.component.html","webpack:///./src/app/admin/admin-report-details/admin-report-details.component.scss","webpack:///./src/app/admin/admin-report-details/admin-report-details.component.ts","webpack:///./src/app/admin/admin-routing.module.ts","webpack:///./src/app/admin/admin.component.html","webpack:///./src/app/admin/admin.component.scss","webpack:///./src/app/admin/admin.component.ts","webpack:///./src/app/admin/admin.module.ts","webpack:///./src/app/admin/all-reports/all-report-list/all-report-list.component.html","webpack:///./src/app/admin/all-reports/all-report-list/all-report-list.component.scss","webpack:///./src/app/admin/all-reports/all-report-list/all-report-list.component.ts","webpack:///./src/app/admin/all-reports/all-reports.component.html","webpack:///./src/app/admin/all-reports/all-reports.component.scss","webpack:///./src/app/admin/all-reports/all-reports.component.ts","webpack:///./src/app/admin/all-users/all-user-list/all-user-list.component.html","webpack:///./src/app/admin/all-users/all-user-list/all-user-list.component.scss","webpack:///./src/app/admin/all-users/all-user-list/all-user-list.component.ts","webpack:///./src/app/admin/all-users/all-users.component.html","webpack:///./src/app/admin/all-users/all-users.component.scss","webpack:///./src/app/admin/all-users/all-users.component.ts","webpack:///./src/app/admin/create-new-datarule/create-new-datarule.component.html","webpack:///./src/app/admin/create-new-datarule/create-new-datarule.component.scss","webpack:///./src/app/admin/create-new-datarule/create-new-datarule.component.ts","webpack:///./src/app/admin/create-new-organization/create-new-organization.component.html","webpack:///./src/app/admin/create-new-organization/create-new-organization.component.scss","webpack:///./src/app/admin/create-new-organization/create-new-organization.component.ts","webpack:///./src/app/admin/create-new-report/create-new-report.component.html","webpack:///./src/app/admin/create-new-report/create-new-report.component.scss","webpack:///./src/app/admin/create-new-report/create-new-report.component.ts","webpack:///./src/app/admin/create-new-user/create-new-user.component.html","webpack:///./src/app/admin/create-new-user/create-new-user.component.scss","webpack:///./src/app/admin/create-new-user/create-new-user.component.ts","webpack:///./src/app/admin/create-new-user/new-user-organization-confirmation.html","webpack:///./src/app/admin/organization-details/organization-details.component.html","webpack:///./src/app/admin/organization-details/organization-details.component.scss","webpack:///./src/app/admin/organization-details/organization-details.component.ts","webpack:///./src/app/admin/organization/organization-list/organization-list.component.html","webpack:///./src/app/admin/organization/organization-list/organization-list.component.scss","webpack:///./src/app/admin/organization/organization-list/organization-list.component.ts","webpack:///./src/app/admin/organization/organization.component.html","webpack:///./src/app/admin/organization/organization.component.scss","webpack:///./src/app/admin/organization/organization.component.ts","webpack:///./src/app/admin/share-report/share-report.component.html","webpack:///./src/app/admin/share-report/share-report.component.scss","webpack:///./src/app/admin/share-report/share-report.component.ts","webpack:///./src/app/admin/user-details/user-details.component.html","webpack:///./src/app/admin/user-details/user-details.component.scss","webpack:///./src/app/admin/user-details/user-details.component.ts","webpack:///./src/app/shared/common-view/report-list/report-list.component.html","webpack:///./src/app/shared/common-view/report-list/report-list.component.scss","webpack:///./src/app/shared/common-view/report-list/report-list.component.ts","webpack:///./src/app/shared/common-view/user-list/user-list.component.html","webpack:///./src/app/shared/common-view/user-list/user-list.component.scss","webpack:///./src/app/shared/common-view/user-list/user-list.component.ts","webpack:///./src/app/shared/pipes/datarules-list.pipe.ts","webpack:///./src/app/shared/pipes/org-list.pipe.ts","webpack:///./src/app/shared/pipes/pagination.pipe.ts","webpack:///./src/app/shared/pipes/report-list.pipe.ts","webpack:///./src/app/shared/pipes/search-name.pipe.ts","webpack:///./src/app/shared/pipes/user-list.pipe.ts","webpack:///./src/app/shared/services/datarules.service.ts"],"names":[],"mappings":"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","file":"admin-admin-module.js","sourcesContent":["module.exports = \"<div *ngIf=\\\"(organization != null && user!= null && report != null) || (organization != null && !userView && report != null)\\\">\\r\\n\\r\\n  <div class=\\\"breadcrumb-container\\\">\\r\\n    <!-- Breadcrumbs for report when navigation from organization list -->\\r\\n    <div class=\\\"breadcrumb\\\" *ngIf=\\\"!userView && organizationID != undefined\\\"> <span routerLink=\\\"../../../\\\"> <i class=\\\"material-icons\\\">\\r\\n          business </i> Organization List </span> &nbsp;&nbsp; <i class=\\\"material-icons arrow\\\"> keyboard_arrow_right </i> <i style=\\\"margin-left: -14px\\\"\\r\\n        class=\\\"material-icons arrow\\\"> keyboard_arrow_right </i>&nbsp;&nbsp; <span routerLink=\\\"../../\\\">\\r\\n        {{organization.name}}</span>\\r\\n      &nbsp;&nbsp; <i class=\\\"material-icons arrow\\\"> keyboard_arrow_right </i> <i style=\\\"margin-left: -14px\\\" class=\\\"material-icons arrow\\\">\\r\\n        keyboard_arrow_right </i>&nbsp;&nbsp; <span class=\\\"active\\\"> {{report.name}} ({{report.organization.name}})</span> </div>\\r\\n\\r\\n    <!-- Breadcrumbs for report when navigation from user under organization list -->\\r\\n    <div class=\\\"breadcrumb\\\" *ngIf=\\\"userView && organizationID != undefined\\\"> <span routerLink=\\\"../../../../../\\\"> <i class=\\\"material-icons\\\">\\r\\n          business </i> Organization List </span>\\r\\n      &nbsp;&nbsp; <i class=\\\"material-icons arrow\\\"> keyboard_arrow_right </i> <i style=\\\"margin-left: -14px\\\" class=\\\"material-icons arrow\\\">\\r\\n        keyboard_arrow_right </i>&nbsp;&nbsp; <span routerLink=\\\"../../../../\\\">\\r\\n        {{organization.name}}</span>\\r\\n      &nbsp;&nbsp; <i class=\\\"material-icons arrow\\\"> keyboard_arrow_right </i> <i style=\\\"margin-left: -14px\\\" class=\\\"material-icons arrow\\\">\\r\\n        keyboard_arrow_right </i>&nbsp;&nbsp; <span routerLink=\\\"../../\\\"> {{user.firstName}} {{user.lastName}} </span> &nbsp;&nbsp; <i class=\\\"material-icons arrow\\\">\\r\\n        keyboard_arrow_right </i> <i style=\\\"margin-left: -14px\\\" class=\\\"material-icons arrow\\\"> keyboard_arrow_right </i>&nbsp;&nbsp; <span\\r\\n        class=\\\"active\\\"> {{report.name}}\\r\\n        ({{report.organization.name}})</span></div>\\r\\n\\r\\n    <!-- Breadcrumbs for report when navigation from user under user list -->\\r\\n    <div class=\\\"breadcrumb\\\" *ngIf=\\\"organizationID === undefined && userID != undefined\\\"> <span routerLink=\\\"../../../../\\\"> <i class=\\\"material-icons\\\">\\r\\n          person_outline </i> User List </span>\\r\\n      &nbsp;&nbsp; <i class=\\\"material-icons arrow\\\"> keyboard_arrow_right </i> <i style=\\\"margin-left: -14px\\\" class=\\\"material-icons arrow\\\">\\r\\n        keyboard_arrow_right </i>&nbsp;&nbsp; <span routerLink=\\\"../../\\\">{{user.firstName}} {{user.lastName}}</span> &nbsp;&nbsp; <i class=\\\"material-icons arrow\\\">\\r\\n        keyboard_arrow_right </i> <i style=\\\"margin-left: -14px\\\" class=\\\"material-icons arrow\\\"> keyboard_arrow_right </i>&nbsp;&nbsp; <span\\r\\n        class=\\\"active\\\"> {{report.name}}\\r\\n        ({{report.organization.name}})</span></div>\\r\\n\\r\\n    <!-- Breadcrumbs for report when navigation from report list -->\\r\\n    <div class=\\\"breadcrumb\\\" *ngIf=\\\"organizationID === undefined && userID === undefined\\\"> <span routerLink=\\\"../../\\\"> <i class=\\\"material-icons\\\">\\r\\n          assessment </i> Report List </span>\\r\\n      &nbsp;&nbsp; <i class=\\\"material-icons arrow\\\"> keyboard_arrow_right </i> <i style=\\\"margin-left: -14px\\\" class=\\\"material-icons arrow\\\">\\r\\n        keyboard_arrow_right </i>&nbsp;&nbsp; <span class=\\\"active\\\"> {{report.name}} ({{report.organization.name}})</span> </div>\\r\\n  </div>\\r\\n\\r\\n\\r\\n  <div class=\\\"main-content-view\\\">\\r\\n    <div class=\\\"left-main-content-view\\\">\\r\\n      <iframe class=\\\"report\\\" src=\\\"https://datastudio.google.com/embed/reporting/1XuwM0G2Rx55jEWX_Rus05td2IHN0PnQI/page/1M\\\" frameborder=\\\"0\\\"\\r\\n        style=\\\"border:0\\\" allowfullscreen></iframe>\\r\\n    </div>\\r\\n    <div class=\\\"right-main-content-view\\\">\\r\\n      <div class=\\\"filter information\\\">\\r\\n        <div class=\\\"more-button\\\" style=\\\"margin-top: -10px\\\">\\r\\n          <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\">\\r\\n            <mat-icon color=\\\"more-color\\\">more_vert</mat-icon>\\r\\n          </button>\\r\\n\\r\\n          <mat-menu #menu=\\\"matMenu\\\">\\r\\n            <button mat-menu-item>Edit</button>\\r\\n            <button mat-menu-item>Delete</button>\\r\\n          </mat-menu>\\r\\n        </div>\\r\\n        <h4 class=\\\"info-title\\\"> Report Information</h4>\\r\\n        <p> Name: <span class=\\\"info\\\">{{report.name}} </span></p>\\r\\n        <p> Organization: <span class=\\\"info\\\">{{report.organization.name}} </span></p>\\r\\n        <p>Datasource: <span class=\\\"info\\\">{{report.datasource}} </span></p>\\r\\n        <p>Date: <span class=\\\"info\\\"> {{report.date | date }}</span> </p>\\r\\n        <p>Datastudio Link: <span class=\\\"info\\\"> {{report.link}}</span></p>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"metadata\\\">\\r\\n        <mat-accordion>\\r\\n          <mat-expansion-panel style=\\\"box-shadow:none\\\">\\r\\n            <mat-expansion-panel-header style=\\\"padding: 0\\\">\\r\\n              <mat-panel-title>\\r\\n                <h4 class=\\\"info-title\\\" style=\\\"padding-top: 10px;\\\"> Metadata</h4>\\r\\n              </mat-panel-title>\\r\\n            </mat-expansion-panel-header>\\r\\n            <p>Created By: <span class=\\\"info\\\">{{ report.createdBy}}</span> </p>\\r\\n            <p>Updated By: <span class=\\\"info\\\">{{ report.updatedBy}}</span></p>\\r\\n            <p>Who can see it: </p>\\r\\n            <p *ngFor=\\\"let user of report.accessedBy\\\"> <span class=\\\"info\\\"> &nbsp;&nbsp;&#9679; &nbsp;{{user.firstName}} {{user.lastName}} </span></p>\\r\\n            <br>\\r\\n          </mat-expansion-panel>\\r\\n        </mat-accordion>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \".report {\\n  width: 100%;\\n  height: calc(100vh - 150px);\\n  background-color: white; }\\n\\n.information .info-title, .metadata .info-title {\\n  margin: 0;\\n  margin-bottom: 10px;\\n  font-weight: 500;\\n  color: initial; }\\n\\n.information p, .metadata p {\\n  font-size: 15px;\\n  margin: 2px 0;\\n  font-weight: 400;\\n  color: #979797; }\\n\\n.information p .info, .metadata p .info {\\n    color: #4a4a4a;\\n    font-weight: 500; }\\n\\n.metadata {\\n  padding: 0 15px;\\n  background-color: white;\\n  margin-top: 25px;\\n  margin-left: 15px;\\n  max-width: 300px;\\n  box-shadow: 2px 3px 4px rgba(101, 101, 101, 0.5);\\n  border: 1px solid #e1e1e1; }\\n\\n.metadata ::ng-deep .mat-expansion-panel-body {\\n    padding: 0 !important;\\n    margin-top: -10px;\\n    padding-bottom: 20px; }\\n\"","import { UserService } from './../../shared/services/user.service';\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { ReportService } from '../../shared/services/report.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport * as UserViewModel from '../../shared/view-models/user.viewmodel';\r\nimport * as OrganizationViewModel from '../../shared/view-models/organization.viewmodel';\r\nimport * as ReportViewModel from '../../shared/view-models/report.viewmodel';\r\nimport { OrganizationService } from '../../shared/services/organization.service';\r\n\r\n@Component({\r\n  selector: 'app-admin-report-details',\r\n  templateUrl: './admin-report-details.component.html',\r\n  styleUrls: ['./admin-report-details.component.scss']\r\n})\r\nexport class AdminReportDetailsComponent implements OnInit, OnDestroy {\r\n\r\n  constructor(private reportService: ReportService, private route: ActivatedRoute, private userService: UserService, private organizationService: OrganizationService) { }\r\n\r\n  sub: any;\r\n  organizationID;\r\n  userID;\r\n  reportID;\r\n  organization: OrganizationViewModel.SimpleOrganization = null;\r\n  user: UserViewModel.SimpleUserView = undefined;\r\n  report: ReportViewModel.ReportWithMetaData = null;\r\n  userView: boolean;\r\n\r\n  async ngOnInit() {\r\n    this.sub = this.route.params.subscribe(params => {\r\n      this.organizationID = params['id'];\r\n      this.userID = params['userID'];\r\n      this.reportID = params['reportID'];\r\n    });\r\n\r\n    this.report = await this.reportService.getReport('reportID');\r\n    if (this.userID !== undefined) {\r\n      this.userView = true;\r\n      this.user = await this.userService.getUser('userID');\r\n    } else {\r\n      this.userView = false;\r\n    }\r\n    this.organization = await this.organizationService.getOrganizationById('orgID');\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.sub.unsubscribe();\r\n  }\r\n\r\n}\r\n","import { ShareReportComponent } from './share-report/share-report.component';\r\nimport { CreateNewDataruleComponent } from './create-new-datarule/create-new-datarule.component';\r\nimport { CreateNewUserComponent } from './create-new-user/create-new-user.component';\r\nimport { AllReportListComponent } from './all-reports/all-report-list/all-report-list.component';\r\nimport { OrganizationListComponent } from './organization/organization-list/organization-list.component';\r\nimport { AllUserListComponent } from './all-users/all-user-list/all-user-list.component';\r\nimport { AllUsersComponent } from './all-users/all-users.component';\r\nimport { AdminGuard } from './../auth/admin-guard.service';\r\nimport { AdminReportDetailsComponent } from './admin-report-details/admin-report-details.component';\r\nimport { UserDetailsComponent } from './user-details/user-details.component';\r\nimport { OrganizationDetailsComponent } from './organization-details/organization-details.component';\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule, CanActivate } from '@angular/router';\r\nimport { AdminComponent } from './admin.component';\r\nimport { OrganizationComponent } from './organization/organization.component';\r\nimport { AllReportsComponent } from './all-reports/all-reports.component';\r\nimport { CreateNewOrganizationComponent } from './create-new-organization/create-new-organization.component';\r\nimport { CreateNewReportComponent } from './create-new-report/create-new-report.component';\r\n\r\nconst adminRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AdminComponent,\r\n    canActivate: [AdminGuard],\r\n    children: [\r\n      {\r\n        path: 'o',\r\n        component: OrganizationComponent,\r\n        children: [\r\n          { path: '', redirectTo: 'list' },\r\n          { path: 'list', component: OrganizationListComponent },\r\n          { path: 'new-organization', component: CreateNewOrganizationComponent},\r\n          { path: 'new-data-rule', component: CreateNewDataruleComponent},\r\n          { path: 'share-report', component: ShareReportComponent},\r\n          { path: ':id', component: OrganizationDetailsComponent },\r\n          { path: ':id/new-user', component: CreateNewUserComponent},\r\n          { path: ':id/new-report', component: CreateNewReportComponent},\r\n          { path: ':id/share-report', component: ShareReportComponent},\r\n          { path: ':id/u/:userID', component: UserDetailsComponent },\r\n          { path: ':id/r/:reportID', component: AdminReportDetailsComponent },\r\n          {\r\n            path: ':id/u/:userID/r/:reportID',\r\n            component: AdminReportDetailsComponent\r\n          },\r\n        ]\r\n      },\r\n      {\r\n        path: 'users',\r\n        component: AllUsersComponent,\r\n        children: [\r\n          { path: '', redirectTo: 'list' },\r\n          { path: 'list', component: AllUserListComponent },\r\n          { path: 'new-user', component: CreateNewUserComponent},\r\n          {\r\n            path: 'u/:userID',\r\n            component: UserDetailsComponent\r\n          },\r\n          {\r\n            path: 'u/:userID/r/:reportID',\r\n            component: AdminReportDetailsComponent\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        path: 'reports',\r\n        component: AllReportsComponent,\r\n        children: [\r\n          { path: '', redirectTo: 'list' },\r\n          { path: 'list', component: AllReportListComponent },\r\n          { path: 'new-report', component: CreateNewReportComponent},\r\n          { path: 'r/:reportID', component: AdminReportDetailsComponent }\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(adminRoutes)],\r\n\r\n  exports: [RouterModule]\r\n})\r\nexport class AdminRoutingModule {}\r\n","module.exports = \"<div class=\\\"main\\\">\\n\\n  <!-- Side Navigation Menu-->\\n  <div class=\\\"side-nav\\\" [ngClass]=\\\"{'side-nav-minimized': minimized}\\\">\\n    <!-- Company Title and Logo goes Here-->\\n    <div class=\\\"company\\\">\\n      <div class=\\\"icon-container\\\">\\n        <div class=\\\"icon\\\">\\n          <img src=\\\"../../assets/company-icon.png\\\" alt=\\\"Smiley face\\\">\\n        </div>\\n      </div>\\n      <span class=\\\"name\\\"> Company </span>\\n    </div>\\n\\n    <!-- Side Navigation Menus -->\\n    <div class=\\\"menu-container\\\">\\n\\n      <!-- Menu # 1 -->\\n      <div class=\\\"menu\\\" routerLink=\\\"o\\\" routerLinkActive=\\\"menu-active\\\" >\\n        <i class=\\\"material-icons\\\">\\n          business\\n        </i>\\n        <span class=\\\"text\\\">\\n          Organizations\\n        </span>\\n      </div>\\n\\n      <!-- Menu # 2 -->\\n      <div class=\\\"menu\\\" routerLink=\\\"reports\\\" routerLinkActive=\\\"menu-active\\\">\\n        <i class=\\\"material-icons\\\">\\n          assessment\\n        </i>\\n        <span class=\\\"text\\\">\\n          Reports\\n        </span>\\n      </div>\\n\\n      <!-- Menu # 3 -->\\n      <div class=\\\"menu\\\" routerLink=\\\"users\\\" routerLinkActive=\\\"menu-active\\\">\\n        <i class=\\\"material-icons\\\">\\n          person_outline\\n        </i>\\n        <span class=\\\"text\\\">\\n          Users\\n        </span>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"right-content\\\" [ngClass]=\\\"{'right-content-minimized': minimized}\\\">\\n    <!-- Top Toolbar -->\\n    <mat-toolbar class=\\\"toolbar\\\">\\n      <button mat-button class=\\\"menu-icon\\\" (click)=\\\"toggleMenu()\\\">\\n        <i class=\\\"material-icons \\\">\\n          menu\\n        </i>\\n      </button>\\n    </mat-toolbar>\\n\\n    <!-- Main Content -->\\n    <div class=\\\"main-content\\\">\\n      <router-outlet></router-outlet>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"/* Tool bar top colour */\\n/* Main content colour */\\n/*************** SIDE NAVIGATION VARIABLES *******************/\\n/* Side nav color */\\n/********* ORGANIZATION DETAILS VARIABLES **********/\\n/*********** LIST CARD VARIABLES  ***********/\\n/********* BREADCRUMBS STYLING ******/\\n/******* FORMS STYLING & FILTERS ******/\\n/***** Filter Card ***/\\n/****** Buttons Colors  **/\\n.side-nav {\\n  width: 190px;\\n  height: 100%;\\n  background-color: #323232;\\n  position: fixed;\\n  transition: padding-left 0.5s;\\n  /* For Safari 3.1 to 6.0 */\\n  transition: width 0.5s;\\n  overflow: hidden;\\n  z-index: 40; }\\n.company {\\n  height: 64px; }\\n.company .icon-container {\\n    height: 64px;\\n    width: 64px;\\n    position: relative; }\\n.company .icon-container img {\\n      height: 45px;\\n      width: 45px;\\n      position: absolute;\\n      right: 0;\\n      left: 0;\\n      top: 0;\\n      bottom: 0;\\n      margin: auto auto; }\\n.company .name {\\n    position: absolute;\\n    top: 22px;\\n    font-size: 20px;\\n    font-weight: bold;\\n    color: white;\\n    left: 70px; }\\n.menu-container {\\n  position: relative; }\\n.menu-container .menu-active {\\n    background-color: #555555; }\\n.menu-container .menu:hover {\\n    cursor: pointer; }\\n.menu-container .menu {\\n    height: 50px;\\n    color: white; }\\n.menu-container .menu .material-icons {\\n      font-size: 30px;\\n      position: relative;\\n      top: 11px;\\n      left: 16px; }\\n.menu-container .menu .text {\\n      position: absolute;\\n      font-size: 17px;\\n      left: 64px;\\n      margin-top: 17px; }\\n.side-nav-minimized {\\n  width: 64px !important; }\\n.toolbar {\\n  background-color: #616161;\\n  color: white;\\n  z-index: 20;\\n  position: fixed; }\\n.toolbar .menu-icon {\\n    min-width: unset;\\n    padding: 0; }\\n.toolbar .menu-icon i {\\n      font-size: 2.5em; }\\n.right-content {\\n  margin-left: 190px;\\n  transition: margin-left 0.5s; }\\n.main-content {\\n  background-color: #f5f5f5;\\n  min-height: calc(100vh - 64px);\\n  padding-top: 64px;\\n  height: 100%;\\n  height: auto; }\\n.right-content-minimized {\\n  margin-left: 64px !important; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.scss']\n})\nexport class AdminComponent implements OnInit {\n  minimized = false;\n  constructor(private route: Router) { }\n\n  ngOnInit() {\n    this.route.navigate(['admin/o']);\n  }\n\n\n  toggleMenu() {\n    this.minimized = !this.minimized;\n    console.log('toggled');\n  }\n\n}\n","import { ReportListPipe } from './../shared/pipes/report-list.pipe';\r\nimport { SearchNamePipe } from './../shared/pipes/search-name.pipe';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AdminComponent } from './admin.component';\r\nimport { OrganizationListComponent } from './organization/organization-list/organization-list.component';\r\nimport { AngularMaterialModule } from '../../angular-material/angular-material.module';\r\nimport { AdminRoutingModule } from './admin-routing.module';\r\nimport { OrganizationDetailsComponent } from './organization-details/organization-details.component';\r\nimport { OrganizationComponent } from './organization/organization.component';\r\nimport { UserDetailsComponent } from './user-details/user-details.component';\r\nimport { AdminReportDetailsComponent } from './admin-report-details/admin-report-details.component';\r\nimport { UserListComponent } from '../shared/common-view/user-list/user-list.component';\r\nimport { ReportListComponent } from '../shared/common-view/report-list/report-list.component';\r\nimport { AllUsersComponent } from './all-users/all-users.component';\r\nimport { AllReportsComponent } from './all-reports/all-reports.component';\r\nimport { AllUserListComponent } from './all-users/all-user-list/all-user-list.component';\r\nimport { AllReportListComponent } from './all-reports/all-report-list/all-report-list.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { PaginationPipe } from '../shared/pipes/pagination.pipe';\r\nimport { OrgListPipe } from '../shared/pipes/org-list.pipe';\r\nimport { UserListPipe } from '../shared/pipes/user-list.pipe';\r\nimport { DataRulesListPipe } from '../shared/pipes/datarules-list.pipe';\r\nimport { CreateNewOrganizationComponent } from './create-new-organization/create-new-organization.component';\r\nimport { CreateNewReportComponent } from './create-new-report/create-new-report.component';\r\nimport { CreateNewDataruleComponent } from './create-new-datarule/create-new-datarule.component';\r\nimport { CreateNewUserComponent, NewUserOrganizationConfirmation } from './create-new-user/create-new-user.component';\nimport { ShareReportComponent } from './share-report/share-report.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AdminComponent,\r\n    OrganizationListComponent,\r\n    OrganizationDetailsComponent,\r\n    OrganizationComponent,\r\n    UserDetailsComponent,\r\n    AdminReportDetailsComponent,\r\n    UserListComponent,\r\n    ReportListComponent,\r\n    AllUsersComponent,\r\n    AllReportsComponent,\r\n    AllUserListComponent,\r\n    AllReportListComponent,\r\n    SearchNamePipe,\r\n    PaginationPipe,\r\n    OrgListPipe,\r\n    ReportListPipe,\r\n    UserListPipe,\r\n    DataRulesListPipe,\r\n    CreateNewOrganizationComponent,\r\n    CreateNewReportComponent,\r\n    CreateNewDataruleComponent,\r\n    CreateNewUserComponent,\r\n    NewUserOrganizationConfirmation,\r\n    ShareReportComponent\r\n\r\n\r\n  ],\r\n  imports: [CommonModule, AdminRoutingModule, AngularMaterialModule, FormsModule, ReactiveFormsModule],\r\n  entryComponents: [NewUserOrganizationConfirmation],\r\n})\r\nexport class AdminModule {}\r\n","module.exports = \"<div class=\\\"breadcrumb-container\\\">\\n    <div class=\\\"breadcrumb\\\"> <span class=\\\"active\\\"><i class=\\\"material-icons\\\">\\n        assessment </i> Report List</span></div>\\n  </div>\\n\\n  <div class=\\\"main-content-view\\\">\\n      <app-report-list [reports] = \\\"reports\\\" [allowAdd]=true (reportID)=\\\"goToReport($event)\\\" style=\\\"display:flex; width: 100%; margin-bottom: 10px;\\\"></app-report-list>\\n\\n  </div>\\n\"","module.exports = \"\"","import { ReportService } from './../../../shared/services/report.service';\nimport { Component, OnInit } from '@angular/core';\nimport * as Filter from '../../../shared/view-models/filter.viewmodel';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport * as ReportViewModel from '../../../shared/view-models/report.viewmodel';\n@Component({\n  selector: 'app-all-report-list',\n  templateUrl: './all-report-list.component.html',\n  styleUrls: ['./all-report-list.component.scss']\n})\nexport class AllReportListComponent implements OnInit {\n  constructor(private route: ActivatedRoute, private router: Router, private reportService: ReportService) {}\n  reports: ReportViewModel.SimpleReport[];\n  async ngOnInit() {\n    try {\n      this.reports = await this.reportService.getReportByOrganization('orgID');\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  goToReport(reportID) {\n    this.router.navigate(['/admin/reports/r', reportID], { relativeTo: this.route });\n  }\n}\n","module.exports = \"<router-outlet></router-outlet>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-all-reports',\n  templateUrl: './all-reports.component.html',\n  styleUrls: ['./all-reports.component.scss']\n})\nexport class AllReportsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"breadcrumb-container\\\">\\n  <div class=\\\"breadcrumb\\\"> <span class=\\\"active\\\"> <i class=\\\"material-icons\\\">\\n        person_outline </i> User List</span></div>\\n</div>\\n\\n<div class=\\\"main-content-view\\\">\\n  <app-user-list [users]=\\\"users\\\" (userID)=\\\"goToUser($event)\\\" style=\\\"display:flex; width: 100%; margin-bottom: 10px;\\\"></app-user-list>\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { UserService } from '../../../shared/services/user.service';\nimport * as UserViewModel from '../../../shared/view-models/user.viewmodel';\n\n@Component({\n  selector: 'app-all-user-list',\n  templateUrl: './all-user-list.component.html',\n  styleUrls: ['./all-user-list.component.scss']\n})\nexport class AllUserListComponent implements OnInit {\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private userService: UserService\n  ) {}\n\n  users: UserViewModel.SimpleUserView[];\n  async ngOnInit() {\n    try {\n      this.users = await this.userService.getUsersByOrganization('All');\n    } catch (error) {\n      console.log('error');\n    }\n  }\n\n  goToUser(userId) {\n    this.router.navigate(['/admin/users/u', userId], {\n      relativeTo: this.route\n    });\n  }\n}\n","module.exports = \"<router-outlet></router-outlet>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport * as Filters from '../../shared/view-models/filter.viewmodel';\nimport { Router, ActivatedRoute } from '@angular/router';\n@Component({\n  selector: 'app-all-users',\n  templateUrl: './all-users.component.html',\n  styleUrls: ['./all-users.component.scss']\n})\nexport class AllUsersComponent implements OnInit {\n  constructor(private router: Router, private route: ActivatedRoute) {}\n\n  filters: Filters.UserFilter;\n\n  ngOnInit() {\n    this.filters = {\n      name: '',\n      organizationID: 'ALL',\n      role: '',\n      sort: ''\n    };\n  }\n\n  goToUser(userId) {\n    this.router.navigate(['./u', userId], { relativeTo: this.route });\n  }\n}\n","module.exports = \"<div class=\\\"form-container\\\">\\n  <div class=\\\"card\\\">\\n    <div class=\\\"form\\\">\\n      <form [formGroup]=\\\"dataruleFormGroup\\\" *ngIf=\\\"dataruleFormGroup\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n        <h2 class=\\\"title\\\"> Create New Data Rule</h2>\\n        <hr>\\n        <div class=\\\"row\\\">\\n          <h4 class=\\\"input-header\\\"> New Rule for \\\"Organization\\\"</h4>\\n          <i class=\\\"material-icons form-icon\\\">\\n            dns\\n          </i>\\n          <mat-form-field appearance=\\\"fill\\\" style=\\\"width:80%\\\">\\n            <mat-label>Rule Name</mat-label>\\n            <input formControlName=\\\"name\\\" matInput placeholder=\\\"Enter Name\\\">\\n            <mat-error>\\n              Rule name is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n          <i class=\\\"material-icons info-icon\\\">\\n            info\\n          </i>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <i class=\\\"material-icons form-icon\\\">\\n            storage\\n          </i>\\n          <mat-form-field appearance=\\\"fill\\\" style=\\\"width:80%\\\">\\n            <mat-label>Data Source</mat-label>\\n            <mat-select formControlName=\\\"datasource\\\">\\n              <mat-option *ngFor=\\\"let datasource of datasources\\\" value=\\\"{{datasource.id}}\\\">{{datasource.name}}</mat-option>\\n            </mat-select>\\n            <mat-error>\\n              Data source is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n          <i class=\\\"material-icons info-icon\\\">\\n            info\\n          </i>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <i class=\\\"material-icons form-icon\\\">\\n            priority_high\\n          </i>\\n          <mat-form-field appearance=\\\"fill\\\" style=\\\"width:80%\\\">\\n            <mat-label>Identifier</mat-label>\\n            <mat-select formControlName=\\\"identifier\\\">\\n                <mat-option *ngFor=\\\"let identifier of identifiers\\\" value=\\\"{{identifier}}\\\">{{identifier}}</mat-option>\\n\\n              </mat-select>\\n            <mat-error>\\n              Identifier is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n          <i class=\\\"material-icons info-icon\\\">\\n            info\\n          </i>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <i class=\\\"material-icons form-icon\\\">\\n            compare\\n          </i>\\n          <mat-form-field appearance=\\\"fill\\\" style=\\\"width:80%\\\">\\n            <mat-label>Condition</mat-label>\\n            <mat-select formControlName=\\\"condition\\\">\\n              <mat-option value=\\\"equals\\\">Equals</mat-option>\\n              <mat-option value=\\\"contains\\\">Contains</mat-option>\\n              <mat-option value=\\\"excludes\\\">Excludes</mat-option>\\n            </mat-select>\\n            <mat-error>\\n              Condition is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n          <i class=\\\"material-icons info-icon\\\">\\n            info\\n          </i>\\n\\n        </div>\\n        <div class=\\\"row\\\">\\n          <i class=\\\"material-icons form-icon\\\">\\n            title\\n          </i>\\n          <mat-form-field appearance=\\\"fill\\\" style=\\\"width:80%\\\">\\n            <mat-label>Token</mat-label>\\n            <input formControlName=\\\"token\\\" matInput placeholder=\\\"Select Data Source\\\">\\n            <mat-error>\\n              Token is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n          <i class=\\\"material-icons info-icon\\\">\\n            info\\n          </i>\\n        </div>\\n        <div class=\\\"buttons\\\">\\n          <button mat-button routerLink=\\\"..\\\">Cancel</button>\\n          <button class=\\\"done primary\\\" [disabled]=\\\"!dataruleFormGroup.valid\\\" [ngClass]=\\\"{'button-disabled': !dataruleFormGroup.valid}\\\"\\n            mat-flat-button type=\\\"submit\\\">Done </button>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"\"","import { Subscription } from 'rxjs';\nimport { ActivatedRoute } from '@angular/router';\nimport { DatarulesService } from './../../shared/services/datarules.service';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport * as DataViewModel from '../../shared/view-models/data.viewmodel';\n\n@Component({\n  selector: 'app-create-new-datarule',\n  templateUrl: './create-new-datarule.component.html',\n  styleUrls: ['./create-new-datarule.component.scss']\n})\nexport class CreateNewDataruleComponent implements OnInit, OnDestroy {\n  dataruleFormGroup: FormGroup;\n  datasources: DataViewModel.DataSource[];\n  constructor(\n    private formBuilder: FormBuilder,\n    private datarulesService: DatarulesService,\n    private route: ActivatedRoute\n  ) {}\n  identifiers: string[];\n  organizationId;\n  sub: Subscription;\n  async ngOnInit() {\n    try {\n      this.sub = this.route.params.subscribe(params => {\n        this.organizationId = params['id'];\n      });\n      this.datasources = await this.datarulesService.getAllDataSourceForOrganization(\n        'id'\n      );\n\n      this.identifiers = [\n        'Identifier 1',\n        'Identifier 2',\n        'Identifier 3',\n        'Identifier 4'\n      ];\n      this.dataruleFormGroup = this.formBuilder.group({\n        name: ['', Validators.required],\n        datasource: ['', Validators.required],\n        identifier: ['', Validators.required],\n        condition: ['', Validators.required],\n        token: ['', Validators.required]\n      });\n    } catch (error) {}\n  }\n\n  ngOnDestroy() {\n    if (this.sub) {\n      this.sub.unsubscribe();\n    }\n  }\n\n  onSubmit() {\n    const form = this.dataruleFormGroup.value;\n    const datarule = {\n      name: form.name,\n      datasource: form.datasource,\n      identifier: form.identifier,\n      condition: form.condition,\n      token: form.token,\n      organization: this.organizationId\n    };\n    console.log(datarule);\n  }\n}\n","module.exports = \"<div class=\\\"form-container\\\">\\n  <div class=\\\"card\\\">\\n    <div class=\\\"form\\\" *ngIf=\\\"orgForm\\\">\\n      <!-- *********************************  -->\\n      <form [formGroup]=\\\"orgForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n        <h2 class=\\\"title\\\"> Create New Organization</h2>\\n        <hr>\\n        <h4 class=\\\"input-header\\\"> Please enter organization information </h4>\\n        <div class=\\\"row\\\">\\n          <i class=\\\"material-icons form-icon\\\">\\n            business\\n          </i>\\n          <mat-form-field appearance=\\\"fill\\\" style=\\\"width:80%\\\">\\n            <mat-label>Organization Name</mat-label>\\n            <input matInput type=\\\"text\\\" id=\\\"name\\\" placeholder=\\\"Enter Name\\\" formControlName=\\\"orgName\\\">\\n            <mat-error>\\n              Organization name is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n          <i class=\\\"material-icons info-icon\\\" matTooltip=\\\"{{orgNameTooltip}}\\\">\\n            info\\n          </i>\\n        </div>\\n        <h4 class=\\\"input-header\\\">Categories <span style=\\\"position: relative;top: 6px; left: -10px;\\\">\\n            <i class=\\\"material-icons info-icon\\\" matTooltip=\\\"{{orgNameTooltip}}\\\">\\n              info\\n            </i> </span>\\n        </h4>\\n        <div formArrayName=\\\"itemRows\\\">\\n          <div *ngFor=\\\"let itemrow of orgForm.controls.itemRows.controls; let i=index\\\" [formGroupName]=\\\"i\\\">\\n            <div class=\\\"row\\\">\\n              <i class=\\\"material-icons form-icon\\\">\\n                book\\n              </i>\\n              <mat-form-field appearance=\\\"fill\\\" style=\\\"width:80%\\\">\\n                <mat-label>Category </mat-label>\\n                <input type=\\\"text\\\" placeholder=\\\"Pick one\\\" aria-label=\\\"Number\\\" matInput formControlName=\\\"itemname\\\" [matAutocomplete]=\\\"auto\\\">\\n                <mat-autocomplete autoActiveFirstOption #auto=\\\"matAutocomplete\\\">\\n                  <mat-option *ngFor=\\\"let option of filteredOptions | async\\\" [value]=\\\"option\\\">\\n                    <span>{{option}} </span>\\n                  </mat-option>\\n                </mat-autocomplete>\\n                <mat-error>\\n                  Category name is <strong>required</strong>\\n                </mat-error>\\n                <mat-error *ngIf=\\\"orgForm.get('itemRows').getError('duplicate')\\\">\\n                  Duplicated Category\\n                </mat-error>\\n              </mat-form-field>\\n              <i class=\\\"material-icons close-icon\\\" *ngIf=\\\"orgForm.controls.itemRows.controls.length > 1\\\" (click)=\\\"deleteRow(i)\\\">\\n                close\\n              </i>\\n            </div>\\n          </div>\\n        </div>\\n        <p class=\\\"custom-error\\\" *ngIf=\\\"orgForm.get('itemRows').getError('duplicate')\\\">\\n            Cannot have duplicate categories </p>\\n        <p class=\\\"add-row\\\" (click)=\\\"addNewRow()\\\">+ Add another category</p>\\n        <div class=\\\"buttons\\\">\\n          <button mat-button routerLink=\\\"../list\\\">Cancel</button>\\n          <button class=\\\"done primary\\\" [disabled]=\\\"!orgForm.valid\\\" [ngClass]=\\\"{'button-disabled': !orgForm.valid}\\\" mat-flat-button type=\\\"submit\\\">Done\\n          </button>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"\"","import { OrganizationService } from './../../shared/services/organization.service';\nimport { Component, OnInit, OnChanges } from '@angular/core';\nimport {\n  FormControl,\n  FormBuilder,\n  Validators,\n  FormArray\n} from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport { FormGroup } from '@angular/forms';\nimport { templateJitUrl } from '@angular/compiler';\n\n@Component({\n  selector: 'app-create-new-organization',\n  templateUrl: './create-new-organization.component.html',\n  styleUrls: ['./create-new-organization.component.scss']\n})\nexport class CreateNewOrganizationComponent implements OnInit{\n  constructor(\n    private organizatinonService: OrganizationService,\n    private _fb: FormBuilder\n  ) {}\n  options = [];\n\n  orgNameTooltip =\n    'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Peccata paria. Restinguet citius, si ardentem acceperit. Sed quid sentiat, non videtis. Vide, quantum, inquam, fallare, Torquate. Age, inquies, ista parva sunt.';\n\n  myControl = new FormControl();\n  filteredOptions: Observable<string[]>;\n  selectedCategories = [''];\n\n  orgForm: FormGroup;\n\n  async ngOnInit() {\n    try {\n      this.options = await this.organizatinonService.getAllCategories();\n      this.filteredOptions = this.myControl.valueChanges.pipe(\n        startWith(''),\n        map(value => this._filter(value))\n      );\n      this.orgForm = this._fb.group({\n        orgName: new FormControl('', [\n          Validators.required,\n          this.noWhitespaceValidator\n        ]),\n        itemRows: this._fb.array([this.initItemRows()], this.noDuplicate )\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n\n  private _filter(value: string): string[] {\n    const filterValue = value.toLowerCase();\n\n    return this.options.filter(\n      option => option.toLowerCase().indexOf(filterValue) === 0\n    );\n  }\n\n  addAnotherCategory() {\n    this.selectedCategories.push('');\n  }\n\n\n  initItemRows() {\n    return this._fb.group({\n      itemname: ['', [Validators.required, this.noWhitespaceValidator]]\n    });\n  }\n\n  addNewRow() {\n    const control = <FormArray>this.orgForm.controls['itemRows'];\n    control.push(this.initItemRows());\n  }\n\n  deleteRow(index: number) {\n    const control = <FormArray>this.orgForm.controls['itemRows'];\n    control.removeAt(index);\n  }\n\n  get controls() {\n    return this.orgForm.controls;\n  }\n\n  onSubmit() {\n    const temp = [];\n\n    for (const itemname of this.orgForm.value.itemRows) {\n      temp.push(itemname.itemname);\n    }\n    const org = {\n      name: this.orgForm.value.orgName,\n      categories: temp\n    };\n    console.log(org);\n  }\n\n  public noWhitespaceValidator(control: FormControl) {\n    const isWhitespace = (control.value || '').trim().length === 0;\n    const isValid = !isWhitespace;\n    return isValid ? null : { whitespace: true };\n  }\n\n  public getForm() {\n    return this.orgForm;\n  }\n\n  public noDuplicate(array): Validators {\n    if (array.errors) {\n      console.log(array.errors.duplicate);\n    }\n    if (array.value) {\n      const temp = [];\n      for (const itemname of array.value) {\n        if (!temp.includes(itemname.itemname)) {\n          temp.push(itemname.itemname);\n        } else {\n          return { duplicate: true};\n        }\n      }\n    }\n    return null;\n  }\n}\n","module.exports = \"<div class=\\\"form-container\\\">\\n  <div class=\\\"card\\\">\\n    <div class=\\\"form\\\">\\n        <h2 class=\\\"title\\\"> Create New Report</h2>\\n        <hr>\\n      <mat-horizontal-stepper #stepper>\\n        <!-- First Step -->\\n        <mat-step [stepControl]=\\\"orgForm\\\" *ngIf=\\\"orgForm && !organizationID\\\">\\n          <form [formGroup]=\\\"orgForm\\\">\\n\\n            <div class=\\\"row\\\">\\n              <h4 class=\\\"input-header\\\"> Please select organization for new report <i class=\\\"material-icons info-icon\\\">\\n                  info\\n                </i></h4>\\n              <i class=\\\"material-icons form-icon\\\">\\n                business\\n              </i>\\n              <mat-form-field appearance=\\\"fill\\\" style=\\\"width:80%\\\">\\n                <mat-label>Select Organization</mat-label>\\n                <mat-select formControlName=\\\"organization\\\">\\n                  <mat-option (click)=\\\"selectOrg()\\\" *ngFor=\\\"let organization of organizations\\\" value=\\\"{{organization.id}}\\\">{{organization.name}}</mat-option>\\n                </mat-select>\\n                <mat-error>\\n                  Organization is <strong>required</strong>\\n                </mat-error>\\n              </mat-form-field>\\n            </div>\\n            <div class=\\\"row\\\">\\n\\n              <p class=\\\"create-new-text\\\">Organization not on the list? <span class=\\\"create-new-button\\\">Create New Organization </span></p>\\n            </div>\\n            <div class=\\\"buttons\\\">\\n              <button mat-button type='button' routerLink=\\\"../\\\">Cancel</button>\\n              <button mat-button type='button' mat-flat-button class=\\\"done primary\\\" [disabled]=\\\"!orgForm.valid\\\" [ngClass]=\\\"{'button-disabled': !orgForm.valid}\\\" matStepperNext >Next</button>\\n            </div>\\n          </form>\\n        </mat-step>\\n\\n        <!-- 2nd -->\\n        <mat-step [stepControl]=\\\"reportInfoForm\\\" *ngIf=\\\"reportInfoForm && selectedOrg || reportInfoForm && organizationID\\\">\\n          <form [formGroup]=\\\"reportInfoForm\\\" (ngSubmit)=\\\"onSubmit()\\\" >\\n            <div class=\\\"row\\\">\\n              <h4 class=\\\"input-header\\\">New Report for {{selectedOrg.name}} </h4>\\n              <h4 class=\\\"input-header\\\">Please enter report information</h4>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <i class=\\\"material-icons form-icon\\\">\\n                assessment\\n              </i>\\n              <mat-form-field appearance=\\\"fill\\\" style=\\\"width:80%\\\">\\n                <mat-label>Report Name</mat-label>\\n                <input formControlName=\\\"name\\\" matInput placeholder=\\\"Report Name\\\">\\n                <mat-error>\\n                  Report name is <strong>required</strong>\\n                </mat-error>\\n              </mat-form-field>\\n              <i class=\\\"material-icons info-icon\\\">\\n                info\\n              </i>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <i class=\\\"material-icons form-icon\\\">\\n                link\\n              </i>\\n              <mat-form-field appearance=\\\"fill\\\" style=\\\"width:80%\\\">\\n                <mat-label>Data Studio Link</mat-label>\\n                <input formControlName=\\\"datastudioLink\\\" matInput placeholder=\\\"Data Studio Link\\\">\\n                <mat-error>\\n                  Data Studio Link is <strong>required</strong>\\n                </mat-error>\\n              </mat-form-field>\\n              <i class=\\\"material-icons info-icon\\\">\\n                info\\n              </i>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <i class=\\\"material-icons form-icon\\\">\\n                class\\n              </i>\\n              <mat-form-field appearance=\\\"fill\\\" style=\\\"width:80%\\\">\\n                <mat-label>Data Studio ID</mat-label>\\n                <input formControlName=\\\"datastudioId\\\" matInput placeholder=\\\"Data Studio ID\\\">\\n                <mat-error>\\n                  Data Studio ID is <strong>required</strong>\\n                </mat-error>\\n              </mat-form-field>\\n              <i class=\\\"material-icons info-icon\\\">\\n                info\\n              </i>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <i class=\\\"material-icons form-icon\\\">\\n                storage\\n              </i>\\n              <mat-form-field appearance=\\\"fill\\\" style=\\\"width:80%\\\">\\n                <mat-label>Data Source(s)</mat-label>\\n                <mat-select formControlName=\\\"datasources\\\" multiple>\\n                  <mat-option *ngFor=\\\"let datasource of datasources\\\" value=\\\"{{datasource.id}}\\\">{{datasource.name}}</mat-option>\\n                </mat-select>\\n                <mat-error>\\n                  At least one data source is <strong>required</strong>\\n                </mat-error>\\n              </mat-form-field>\\n              <i class=\\\"material-icons info-icon\\\">\\n                info\\n              </i>\\n            </div>\\n            <div class=\\\"buttons\\\">\\n              <button mat-button type='button' *ngIf=\\\"!organizationID\\\" (click)=\\\"selectStep(0)\\\">Back</button>\\n              <button mat-button type='button'  *ngIf=\\\"organizationID\\\"  routerLink=\\\"../\\\">Back</button>\\n              <button mat-button type='submit' mat-flat-button class=\\\"done primary\\\" [disabled]=\\\"!reportInfoForm.valid\\\" [ngClass]=\\\"{'button-disabled': !reportInfoForm.valid}\\\">Done</button>\\n            </div>\\n          </form>\\n        </mat-step>\\n      </mat-horizontal-stepper>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \".create-new-button:hover {\\n  cursor: pointer; }\\n\\n::ng-deep .mat-horizontal-stepper-header-container {\\n  display: none !important; }\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport * as ReportViewModel from '../../shared/view-models/report.viewmodel';\nimport { ReportService } from 'src/app/shared/services/report.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { OrganizationService } from 'src/app/shared/services/organization.service';\nimport * as OrganizationViewModel from './../../shared/view-models/organization.viewmodel';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport * as DataViewModel from '../../shared/view-models/data.viewmodel';\nimport { DatarulesService } from 'src/app/shared/services/datarules.service';\nimport { MatStepper } from '@angular/material';\n\n@Component({\n  selector: 'app-create-new-report',\n  templateUrl: './create-new-report.component.html',\n  styleUrls: ['./create-new-report.component.scss']\n})\nexport class CreateNewReportComponent implements OnInit {\n  @ViewChild('stepper')\n  stepper: MatStepper;\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private organizationService: OrganizationService,\n    private formBuilder: FormBuilder,\n    private datarulesService: DatarulesService\n  ) {}\n  reports: ReportViewModel.SimpleReport[];\n  organizations: OrganizationViewModel.SimpleOrganization[];\n  orgForm: FormGroup;\n  reportInfoForm: FormGroup;\n  datasources: DataViewModel.DataSource[];\n  selectedOrg;\n  organizationID;\n  sub: any;\n\n  async ngOnInit() {\n    try {\n      this.organizations = await this.organizationService.getAllOrganizationsWithNoDetails();\n      this.datasources = await this.datarulesService.getAllDataSourceForOrganization(\n        'id'\n      );\n      this.orgForm = this.formBuilder.group({\n        organization: ['', Validators.required]\n      });\n      this.reportInfoForm = this.formBuilder.group({\n        name: ['', Validators.required],\n        datastudioLink: ['', Validators.required],\n        datastudioId: ['', Validators.required],\n        datasources: ['', Validators.required]\n      });\n      this.sub = this.route.params.subscribe(params => {\n        this.organizationID = params['id'];\n        if (this.organizationID) {\n          this.selectedOrg = this.organizations.find(org => {\n            return org.id === this.organizationID;\n          });\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n\n  selectStep(id) {\n    this.stepper.selectedIndex = id;\n  }\n\n  selectOrg() {\n   this.selectedOrg = this.organizations.find(org => {\n     return org.id === this.orgForm.value.organization;\n   });\n  }\n\n  onSubmit() {\n    let organization;\n    if (this.organizationID) {\n      organization = this.organizationID;\n    } else {\n      organization = this.orgForm.value.organization;\n    }\n    const rForm = this.reportInfoForm.value;\n    const report = {\n      name: rForm.name,\n      datastudioLink: rForm.datastudioLink,\n      datastudioId: rForm.datastudioId,\n      datasources:  rForm.datasources,\n      organization: organization\n    };\n\n    console.log(report);\n\n  }\n}\n","module.exports = \"<div class=\\\"form-container\\\">\\n  <div class=\\\"card\\\">\\n    <div class=\\\"form\\\">\\n      <h2 class=\\\"title\\\"> Create New User</h2>\\n      <hr>\\n      <mat-horizontal-stepper linear #stepper *ngIf=\\\"firstFormGroup && secondFormGroup\\\">\\n        <!-- First Step-->\\n        <mat-step [stepControl]=\\\"firstFormGroup\\\">\\n            <form [formGroup]=\\\"firstFormGroup\\\">\\n              <ng-template matStepLabel>Fill out your name</ng-template>\\n              <div class=\\\"row\\\">\\n                <h4 class=\\\"input-header\\\"> Please select role for new user <i class=\\\"material-icons info-icon\\\">\\n                    info\\n                  </i></h4>\\n                <i class=\\\"material-icons form-icon\\\">\\n                  business\\n                </i>\\n                <mat-form-field appearance=\\\"fill\\\" style=\\\"width:80%\\\">\\n                  <mat-label>Role</mat-label>\\n                  <mat-select formControlName=\\\"role\\\" [(value)]=\\\"roleSelected\\\" >\\n                    <mat-option value=\\\"admin\\\" (click)=\\\"checkRole()\\\">Admin</mat-option>\\n                    <mat-option value=\\\"viewer\\\" (click)=\\\"checkRole()\\\">Viewer</mat-option>\\n                  </mat-select>\\n                  <mat-error>\\n                      Role is <strong>required</strong>\\n                    </mat-error>\\n                </mat-form-field>\\n              </div>\\n              <div class=\\\"row\\\" *ngIf=\\\"roleSelected === 'viewer'\\\">\\n                <h4 class=\\\"input-header\\\"> Please select organization(s) for new user <i class=\\\"material-icons info-icon\\\">\\n                    info\\n                  </i></h4>\\n                <i class=\\\"material-icons form-icon\\\">\\n                  business\\n                </i>\\n                <mat-form-field appearance=\\\"fill\\\" style=\\\"width:80%\\\">\\n                  <mat-label>Select Organization(s)</mat-label>\\n                  <mat-select  formControlName=\\\"organizations\\\" [(value)]=\\\"selectedOrganizationIds\\\" multiple>\\n                    <mat-option *ngFor=\\\"let organization of organizations\\\" value=\\\"{{organization.id}}\\\">{{organization.name}}</mat-option>\\n                  </mat-select>\\n                  <mat-error>\\n                      Organization is <strong>required</strong>\\n                    </mat-error>\\n                </mat-form-field>\\n                <p class=\\\"create-new-text\\\">Organization not on the list? <span class=\\\"create-new-button\\\" routerLink=\\\"/admin/o/new-organization\\\">Create\\n                    New Organization </span></p>\\n              </div>\\n              <div class=\\\"buttons\\\">\\n                <button mat-button type='button'  routerLink=\\\"../\\\">Cancel</button>\\n                <button mat-button type='button' mat-flat-button class=\\\"done primary\\\" [disabled]=\\\"!firstFormGroup.valid\\\" [ngClass]=\\\"{'button-disabled': !firstFormGroup.valid}\\\" (click)=\\\"openDialog()\\\">Next</button>\\n              </div>\\n            </form>\\n        </mat-step>\\n        <!-- Second Step-->\\n        <mat-step [stepControl]=\\\"secondFormGroup\\\">\\n          <form [formGroup]=\\\"secondFormGroup\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n            <p class=\\\"description\\\" *ngIf=\\\"roleSelected === 'admin'\\\"> New Admin user</p>\\n            <p class=\\\"description\\\" *ngIf=\\\"roleSelected === 'viewer'\\\"> New Viewer for <span *ngFor=\\\"let org of selectedOrganizationNames; let i = index\\\">{{org.name}}<span *ngIf=\\\"i < selectedOrganizationNames.length - 1\\\">,</span>&nbsp;</span></p>\\n            <h4 class=\\\"input-header\\\"> Please enter user information </h4>\\n            <div class=\\\"row\\\">\\n              <i class=\\\"material-icons form-icon\\\">\\n                  person_outline\\n              </i>\\n              <mat-form-field appearance=\\\"fill\\\" style=\\\"width:80%\\\">\\n                <mat-label   >First Name</mat-label>\\n                <input formControlName=\\\"firstName\\\" matInput placeholder=\\\"\\\">\\n                <mat-error>\\n                  First Name is <strong>required</strong>\\n                </mat-error>\\n              </mat-form-field>\\n              <i class=\\\"material-icons info-icon\\\">\\n                info\\n              </i>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <i class=\\\"material-icons form-icon\\\">\\n                person_outline\\n              </i>\\n              <mat-form-field appearance=\\\"fill\\\" style=\\\"width:80%\\\">\\n                <mat-label >Last Name</mat-label>\\n                <input formControlName=\\\"lastName\\\" matInput placeholder=\\\"\\\">\\n                <mat-error>\\n                  Last Name is <strong>required</strong>\\n                </mat-error>\\n              </mat-form-field>\\n              <i class=\\\"material-icons info-icon\\\">\\n                info\\n              </i>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <i class=\\\"material-icons form-icon\\\">\\n                email\\n              </i>\\n              <mat-form-field appearance=\\\"fill\\\" style=\\\"width:80%\\\">\\n                <mat-label>Email</mat-label>\\n                <input  type=\\\"email\\\" formControlName=\\\"email\\\" matInput placeholder=\\\"\\\">\\n                <mat-error *ngIf=\\\"secondFormGroup?.controls.email?.errors?.required \\\">\\n                  Email is <strong>required</strong>\\n                </mat-error>\\n                <mat-error *ngIf=\\\"secondFormGroup?.controls.email?.errors?.email \\\">\\n                 Must be in email format\\n                </mat-error>\\n              </mat-form-field>\\n              <i class=\\\"material-icons info-icon\\\">\\n                info\\n              </i>\\n            </div>\\n            <div class=\\\"row\\\" *ngIf=\\\"allowSecondaryEmail\\\">\\n              <i class=\\\"material-icons form-icon\\\">\\n                alternate_email\\n              </i>\\n              <mat-form-field appearance=\\\"fill\\\" style=\\\"width:80%\\\">\\n                <mat-label  >Secondary Email</mat-label>\\n                <input formControlName=\\\"secondaryEmail\\\" type=\\\"email\\\" matInput placeholder=\\\"\\\">\\n                <mat-hint>Not Required</mat-hint>\\n                <mat-error *ngIf=\\\"secondFormGroup?.controls.secondaryEmail?.errors?.email \\\">\\n                  Must be in email format\\n                 </mat-error>\\n              </mat-form-field>\\n              <i class=\\\"material-icons info-icon\\\">\\n                info\\n              </i>\\n            </div>\\n            <p class=\\\"add-row\\\"  *ngIf=\\\"!allowSecondaryEmail\\\" (click)=\\\"addSecondaryEmail()\\\">+ Add secondary email</p>\\n\\n            <div class=\\\"buttons\\\">\\n              <button mat-button matStepperPrevious type=\\\"button\\\">Back</button>\\n              <button class=\\\"done primary\\\" mat-flat-button  [disabled]=\\\"!secondFormGroup.valid\\\" [ngClass]=\\\"{'button-disabled': !secondFormGroup.valid}\\\" type=\\\"submit\\\">Done</button>\\n            </div>\\n          </form>\\n        </mat-step>\\n      </mat-horizontal-stepper>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \".create-new-button:hover {\\n  cursor: pointer; }\\n\\n::ng-deep .mat-horizontal-stepper-header-container {\\n  display: none !important; }\\n\"","import { ActivatedRoute } from '@angular/router';\nimport { OrganizationService } from './../../shared/services/organization.service';\nimport { Component, OnInit, ViewChild, Inject } from '@angular/core';\nimport * as OrganizationViewModel from './../../shared/view-models/organization.viewmodel';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  FormControl\n} from '@angular/forms';\nimport {\n  MatDialog,\n  MatDialogRef,\n  MAT_DIALOG_DATA,\n  MatStepper\n} from '@angular/material';\nimport * as UserViewModel from '../../shared/view-models/user.viewmodel';\n\n@Component({\n  selector: 'app-create-new-user',\n  templateUrl: './create-new-user.component.html',\n  styleUrls: ['./create-new-user.component.scss']\n})\nexport class CreateNewUserComponent implements OnInit {\n  @ViewChild('stepper')\n  stepper;\n\n  constructor(\n    private organizationService: OrganizationService,\n    private formBuilder: FormBuilder,\n    public dialog: MatDialog,\n    private route: ActivatedRoute\n  ) {}\n  sub: any;\n  roleSelected;\n  organizations: OrganizationViewModel.SimpleOrganization[];\n  selectedOrganizationIds: string[];\n  firstFormGroup: FormGroup;\n  secondFormGroup: FormGroup;\n  selectedOrganizationNames: OrganizationViewModel.SimpleOrganization[];\n  allowSecondaryEmail = false;\n  organizationID;\n  async ngOnInit() {\n    try {\n      this.organizations = await this.organizationService.getAllOrganizationsWithNoDetails();\n      this.firstFormGroup = this.formBuilder.group({\n        role: ['', Validators.required]\n      });\n      this.secondFormGroup = this.formBuilder.group({\n        firstName: ['', Validators.required],\n        lastName: ['', Validators.required],\n        email: ['', [Validators.required, Validators.email]],\n        secondaryEmail: ['', Validators.email]\n      });\n      this.sub = this.route.params.subscribe(params => {\n        this.organizationID = params['id'];\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n\n  checkRole() {\n    if (this.roleSelected === 'admin') {\n      this.firstFormGroup.removeControl('organizations');\n    }\n    if (this.roleSelected === 'viewer') {\n      this.firstFormGroup.addControl(\n        'organizations',\n        new FormControl('', Validators.required)\n      );\n    }\n  }\n\n  /**\n   * ON SUBMIT FOR CREATING NEW USER\n   */\n  onSubmit() {\n    const firstForm = this.firstFormGroup.value;\n    const secondForm = this.secondFormGroup.value;\n    let orgs = [];\n    if (firstForm.role === 'viewer') {\n      orgs = firstForm.organizations;\n    }\n    const newUser: UserViewModel.CreateNewUser = {\n      firstName : secondForm.firstName,\n      lastName : secondForm.lastName,\n      googleId : secondForm.email,\n      secondaryEmail: secondForm.secondaryEmail,\n      organizations : orgs,\n      role: firstForm.role\n    };\n    console.log(newUser);\n  }\n\n  openDialog(stepper: MatStepper) {\n    if (this.roleSelected === 'viewer') {\n      this.selectedOrganizationNames = this.organizations.filter(org => {\n        return this.selectedOrganizationIds.includes(org.id);\n      });\n    }\n    const dialogRef = this.dialog.open(NewUserOrganizationConfirmation, {\n      data: { orgs: this.selectedOrganizationNames, role: this.roleSelected }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(true);\n      if (result) {\n        this.stepper.next();\n      }\n    });\n  }\n\n  addSecondaryEmail() {\n    this.allowSecondaryEmail = true;\n  }\n}\n\n@Component({\n  selector: 'new-user-organization-confirmation',\n  templateUrl: 'new-user-organization-confirmation.html'\n})\nexport class NewUserOrganizationConfirmation {\n  constructor(\n    public dialogRef: MatDialogRef<NewUserOrganizationConfirmation>,\n    @Inject(MAT_DIALOG_DATA) public data\n  ) {}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n","module.exports = \"<div class=\\\"dialog\\\" *ngIf=\\\"data.role === 'viewer'\\\">\\r\\n  <h2 class=\\\"title\\\" >Multiple Viewer Access</h2>\\r\\n  <div mat-dialog-content>\\r\\n    <h4 class=\\\"subtitle\\\">Give this user Viewer Access for the following Organizations?</h4>\\r\\n    <ul class=\\\"conditions\\\">\\r\\n      <li *ngFor=\\\"let temp of data.orgs\\\"> {{temp.name}}</li>\\r\\n    </ul>\\r\\n  </div>\\r\\n  <div mat-dialog-actions style=\\\"float:right\\\">\\r\\n    <button mat-button (click)=\\\"onNoClick()\\\">Cancel</button>\\r\\n    <button mat-button mat-flat-button [mat-dialog-close]=\\\"true\\\" class=\\\"primary\\\" cdkFocusInitial>Continue</button>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div class=\\\"dialog\\\" *ngIf=\\\"data.role === 'admin'\\\">\\r\\n  <h2 class=\\\"title\\\"><i class=\\\"material-icons\\\">\\r\\n    warning\\r\\n    </i>Give Admin Access</h2>\\r\\n  <div mat-dialog-content>\\r\\n    <h4 class=\\\"subtitle\\\">Warning: Giving Admin access will grant the following:</h4>\\r\\n    <ul  class=\\\"conditions\\\">\\r\\n      <li> Lorem ipsum dolor sit amet, consectetur adipiscing elit.</li>\\r\\n      <li> Lorem ipsum dolor sit amet, consectetur adipiscing elit.</li>\\r\\n      <li> Lorem ipsum dolor sit amet, consectetur adipiscing elit.</li>\\r\\n    </ul>\\r\\n  </div>\\r\\n  <div mat-dialog-actions style=\\\"float:right\\\">\\r\\n    <button mat-button (click)=\\\"onNoClick()\\\">Cancel</button>\\r\\n    <button mat-button mat-flat-button [mat-dialog-close]=\\\"true\\\" class=\\\"primary\\\" cdkFocusInitial>Continue</button>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"<div *ngIf=\\\"organization != null\\\">\\r\\n  <div class=\\\"breadcrumb-container\\\">\\r\\n    <div> <span routerLink=\\\"../\\\"><i class=\\\"material-icons\\\"> business </i> Organization List </span> &nbsp;&nbsp; <i class=\\\"material-icons arrow\\\">\\r\\n        keyboard_arrow_right </i> <i style=\\\"margin-left: -14px\\\" class=\\\"material-icons arrow\\\"> keyboard_arrow_right </i>&nbsp;&nbsp; <span\\r\\n        class=\\\"active\\\">{{organization.name}}\\r\\n      </span> </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"main-content-view\\\">\\r\\n    <div class=\\\"full-content-view\\\">\\r\\n      <div class=\\\"details\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n          <div class=\\\"more-button\\\">\\r\\n            <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\">\\r\\n              <mat-icon color=\\\"more-color\\\">more_vert</mat-icon>\\r\\n            </button>\\r\\n\\r\\n            <mat-menu #menu=\\\"matMenu\\\">\\r\\n              <button mat-menu-item>Edit</button>\\r\\n              <button mat-menu-item>Delete</button>\\r\\n            </mat-menu>\\r\\n          </div>\\r\\n          <div class=\\\"container\\\">\\r\\n            <h2 class=\\\"title\\\">{{organization.name}}</h2>\\r\\n            <h4 class=\\\"secondary\\\"><span *ngFor=\\\"let category of organization.categories\\\">{{category}} &nbsp; </span> </h4>\\r\\n            <p class=\\\"stats\\\">\\r\\n              <span class=\\\"left\\\"><i class=\\\"material-icons\\\">\\r\\n                  assessment\\r\\n                </i> {{organization.reportsCount}} Reports</span>\\r\\n              <span class=\\\"middle\\\"> <i class=\\\"material-icons\\\">\\r\\n                  person_outline\\r\\n                </i>{{organization.usersCount}} Users</span>\\r\\n              <span class=\\\"right\\\"> <i class=\\\"material-icons\\\">\\r\\n                  dns\\r\\n                </i> {{organization.datarulesCount}} Data Rules</span>\\r\\n            </p>\\r\\n\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"tabs\\\">\\r\\n          <mat-tab-group (selectedIndexChange)=\\\"selected($event)\\\">\\r\\n            <mat-tab label=\\\"Reports\\\">\\r\\n              <app-report-list [allowAdd]=true *ngIf=\\\"selectedTab === 0\\\" [reports]=\\\"reports\\\" (reportID)=\\\"goToReport($event)\\\" style=\\\"display:flex; width: 100%; margin-bottom: 10px;\\\"></app-report-list>\\r\\n            </mat-tab>\\r\\n            <mat-tab label=\\\"Users\\\">\\r\\n              <app-user-list *ngIf=\\\"selectedTab === 1\\\" [users]=\\\"users\\\" (userID)=\\\"goToUser($event)\\\" style=\\\"display:flex; width: 100%; margin-bottom: 10px;\\\"></app-user-list>\\r\\n            </mat-tab>\\r\\n            <mat-tab label=\\\"Data Rules\\\">\\r\\n              <div class=\\\"data-rules-section\\\" *ngIf=\\\"selectedTab === 2\\\">\\r\\n                <div class=\\\"left-main-content-view\\\">\\r\\n                  <mat-accordion *ngFor=\\\"let rule of rules | datarulesList : searchName : selectedDataSource : sortValue : pagination.currentPage; let i = index\\\">\\r\\n                    <mat-expansion-panel class=\\\"data-rules-card\\\">\\r\\n                      <mat-expansion-panel-header>\\r\\n                        <mat-panel-title>\\r\\n                          <h4 class=\\\"title\\\">{{rule.name}}</h4><br>\\r\\n                        </mat-panel-title>\\r\\n                        <mat-panel-description>\\r\\n                          <h5>{{rule.datasource.name}}</h5>\\r\\n                        </mat-panel-description>\\r\\n                      </mat-expansion-panel-header>\\r\\n                      <hr>\\r\\n                      <p>Created At: {{rule.date | date }}</p>\\r\\n                      <p>Identifier: {{rule.identifier}}</p>\\r\\n                      <p>Condition: {{rule.condition}}</p>\\r\\n                      <p>Token: {{rule.token}}</p>\\r\\n                      <div class=\\\"buttons\\\">\\r\\n                        <button mat-button color=\\\"danger\\\">Delete</button>\\r\\n                        <button mat-button color=\\\"primary\\\">Edit</button>\\r\\n                      </div>\\r\\n                    </mat-expansion-panel>\\r\\n                    <br>\\r\\n                  </mat-accordion>\\r\\n                  <p class=\\\"pagination\\\" *ngIf=\\\"this.pagination\\\" style=\\\"text-align: center\\\"> <button mat-mini-fab (click)=\\\"previousPage()\\\" color=\\\"white\\\"\\r\\n                    [disabled]=\\\"pagination.currentPage===1\\\"> <i class=\\\"material-icons\\\">\\r\\n                      chevron_left\\r\\n                    </i> </button>\\r\\n                  {{this.pagination.currentPage}}/{{this.pagination.totalPages}} <button mat-mini-fab active (click)=\\\"nextPage() \\\" [disabled]=\\\"pagination.currentPage === pagination.totalPages\\\"\\r\\n                    color=\\\"white\\\"> <i class=\\\"material-icons\\\">\\r\\n                      chevron_right\\r\\n                    </i> </button>\\r\\n                </p>\\r\\n                </div>\\r\\n                <div class=\\\"right-main-content-view\\\">\\r\\n                  <!-- Filters -->\\r\\n                  <div class=\\\"filter\\\">\\r\\n                    <form [formGroup]=\\\"filterForm\\\" (ngSubmit)=\\\"onSearch()\\\">\\r\\n                      <button class=\\\"reset\\\" mat-stroked-button (click)=\\\"searchFormReset()\\\">RESET</button>\\r\\n                      <p class=\\\"title\\\"> Filter by</p>\\r\\n                      <mat-form-field appearance=\\\"outline\\\" class=\\\"search\\\">\\r\\n                        <mat-label class=\\\"label-color\\\">Name</mat-label>\\r\\n                        <input matInput type=\\\"text\\\" placeholder=\\\"Search Name\\\" formControlName=\\\"name\\\">\\r\\n                      </mat-form-field>\\r\\n                      <p class=\\\"title\\\"> Data Source</p>\\r\\n                      <mat-form-field appearance=\\\"outline\\\" class=\\\"select\\\">\\r\\n                        <mat-select formControlName=\\\"selectedDataSource\\\">\\r\\n                          <mat-option value=\\\"All\\\">All</mat-option>\\r\\n                          <mat-option *ngFor=\\\"let datasource of dataSources\\\" value=\\\"{{datasource.id}}\\\">{{datasource.name}}</mat-option>\\r\\n                        </mat-select>\\r\\n                      </mat-form-field>\\r\\n                      <br>\\r\\n                      <button mat-raised-button class=\\\"search\\\" type=\\\"submit\\\">Search</button>\\r\\n                    </form>\\r\\n                  </div>\\r\\n                  <div class=\\\"sort\\\">\\r\\n                    <p class=\\\"title\\\"> Sort By</p>\\r\\n                    <mat-radio-group class=\\\"example-radio-group\\\" [(ngModel)]=\\\"sortValue\\\">\\r\\n                      <mat-radio-button *ngFor=\\\"let sort of sorts\\\" value=\\\"{{sort}}\\\" (click)=\\\"changeSort(sort)\\\" class=\\\"radio\\\">\\r\\n                        {{sort}}\\r\\n                      </mat-radio-button>\\r\\n                    </mat-radio-group>\\r\\n                  </div>\\r\\n                  <div class=\\\"add-button\\\">\\r\\n                    <button routerLink=\\\"../new-data-rule\\\" mat-fab class=\\\"button-fab\\\" color=\\\"primary-button\\\"> <i class=\\\"material-icons plus-icon\\\">\\r\\n                      add\\r\\n                    </i>\\r\\n                    <i class=\\\"material-icons back-icon\\\">\\r\\n                      dns\\r\\n                    </i></button>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </mat-tab>\\r\\n          </mat-tab-group>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"organization == null\\\">\\r\\n  <mat-spinner></mat-spinner>\\r\\n</div>\\r\\n\"","module.exports = \"/* Tool bar top colour */\\n/* Main content colour */\\n/*************** SIDE NAVIGATION VARIABLES *******************/\\n/* Side nav color */\\n/********* ORGANIZATION DETAILS VARIABLES **********/\\n/*********** LIST CARD VARIABLES  ***********/\\n/********* BREADCRUMBS STYLING ******/\\n/******* FORMS STYLING & FILTERS ******/\\n/***** Filter Card ***/\\n/****** Buttons Colors  **/\\n.tabs {\\n  background-color: white;\\n  margin: 20px 0;\\n  box-shadow: 2px 3px 4px rgba(101, 101, 101, 0.5); }\\n::ng-deep .mat-tab-body .mat-tab-body-content {\\n  overflow: hidden; }\\n::ng-deep .tabs .mat-tab-header {\\n  box-shadow: 0 1px 4px rgba(101, 101, 101, 0.7) !important;\\n  border-bottom: none !important; }\\n::ng-deep .tabs .mat-tab-label {\\n  color: #3E3E3E;\\n  opacity: 1;\\n  font-size: 17px; }\\n::ng-deep .tabs .mat-tab-label-active {\\n  color: #0865ee; }\\n::ng-deep .tabs .mat-tab-body {\\n  padding: 10px; }\\n::ng-deep .mat-tab-group.mat-primary .mat-ink-bar,\\n::ng-deep .mat-tab-nav-bar.mat-primary .mat-ink-bar {\\n  background: #0865ee;\\n  height: 3px; }\\n.data-rules-card {\\n  border: 1px solid #D7D7D7;\\n  border-radius: 5px; }\\n.mat-tab {\\n  padding: 5px; }\\n.data-rules-section {\\n  margin-bottom: 10px;\\n  display: flex; }\\n.data-rules-section .left-main-content-view {\\n    margin-top: 10px; }\\n.data-rules-section .left-main-content-view p {\\n      margin: 0;\\n      color: #3e3e3e;\\n      font-weight: 500; }\\n.data-rules-section .left-main-content-view .buttons {\\n      text-align: right; }\\n.data-rules-section .left-main-content-view hr {\\n      border-top: 1px solid #b4b4b4;\\n      margin-top: -10px; }\\n.data-rules-section .left-main-content-view .title {\\n      color: #E7554B; }\\n.data-rules-section .left-main-content-view .mat-expansion-panel-content {\\n      padding-top: 5px;\\n      border-top: 1px solid rgba(0, 0, 0, 0.12); }\\n.data-rules-section .left-main-content-view .mat-expansion-panel {\\n      border-radius: 3px; }\\n\"","import { DatarulesService } from './../../shared/services/datarules.service';\r\nimport { OrganizationService } from './../../shared/services/organization.service';\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport * as OrganizationViewModel from '../../shared/view-models/organization.viewmodel';\r\nimport * as Filter from '../../shared/view-models/filter.viewmodel';\r\nimport * as DataViewModel from '../../shared/view-models/data.viewmodel';\r\nimport { ReportService } from '../../shared/services/report.service';\r\nimport * as ReportViewModel from '../../shared/view-models/report.viewmodel';\r\nimport { UserService } from '../../shared/services/user.service';\r\nimport * as UserViewModel from '../../shared/view-models/user.viewmodel';\r\nimport { PaginationService } from '../../shared/services/pagination.service';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-organization-details',\r\n  templateUrl: './organization-details.component.html',\r\n  styleUrls: ['./organization-details.component.scss']\r\n})\r\nexport class OrganizationDetailsComponent implements OnInit, OnDestroy {\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private organizationService: OrganizationService,\r\n    private dataruleService: DatarulesService,\r\n    private reportService: ReportService,\r\n    private userService: UserService,\r\n    private paginationService: PaginationService\r\n  ) {}\r\n  // Subscription for route\r\n  sub: any;\r\n  // Organization Object\r\n  organization: OrganizationViewModel.OrganizationDetails;\r\n  // Organization ID\r\n  organizationID: string;\r\n  // reports\r\n  reports: ReportViewModel.SimpleReport[];\r\n  // rules array\r\n  rules: DataViewModel.DataRule[];\r\n  // users array\r\n  users: UserViewModel.SimpleUserView[];\r\n  selectedTab = 0;\r\n  dataSources: DataViewModel.DataSource[];\r\n  filterForm = new FormGroup({\r\n    name: new FormControl(''),\r\n    selectedDataSource: new FormControl('All')\r\n  });\r\n  formInitialize = false;\r\n  sorts = ['Latest', 'Alphabetical'];\r\n  sortValue = this.sorts[0];\r\n  searchName;\r\n  pageSubscription: Subscription;\r\n  pagination;\r\n  selectedDataSource = 'All';\r\n\r\n  async ngOnInit() {\r\n    try {\r\n      this.sub = this.route.params.subscribe(params => {\r\n        this.organizationID = params['id'];\r\n      });\r\n      // gets organization info\r\n      this.organization = await this.organizationService.getOrganizationById(\r\n        this.organizationID\r\n      );\r\n      // gets reports for this organization\r\n      this.reports = await this.reportService.getReportByOrganization('orgID');\r\n      // gets data rules for this organization\r\n      this.rules = await this.dataruleService.getDataRules(this.organizationID);\r\n      // gets users for this organization\r\n      this.users = await this.userService.getUsersByOrganization('orgID');\r\n      // get all data sources for this organization\r\n      this.dataSources = await this.dataruleService.getAllDataSourceForOrganization(\r\n        'orgID'\r\n      );\r\n      this.pageSubscription = this.paginationService.paginationChanged.subscribe(\r\n        pagination => {\r\n          this.pagination = pagination;\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  selected(event) {\r\n    this.selectedTab = event;\r\n    if (event === 2) {\r\n      this.paginationService.resetPage();\r\n    }\r\n  }\r\n  ngOnDestroy() {\r\n    this.sub.unsubscribe();\r\n    if (this.pageSubscription) {\r\n      this.pageSubscription.unsubscribe();\r\n\r\n    }\r\n  }\r\n\r\n  goToUser(userId) {\r\n    this.router.navigate(['./u', userId], { relativeTo: this.route });\r\n  }\r\n\r\n  goToReport(reportID) {\r\n    this.router.navigate(['./r', reportID], { relativeTo: this.route });\r\n  }\r\n\r\n  changeSort(sort) {\r\n    this.paginationService.resetPage();\r\n    this.sortValue = sort;\r\n  }\r\n\r\n  onSearch() {\r\n    console.log(this.filterForm.value);\r\n    this.paginationService.resetPage();\r\n    const temp = this.filterForm.value;\r\n    this.searchName = temp.name;\r\n    this.selectedDataSource = temp.selectedDataSource;\r\n  }\r\n\r\n  searchFormReset() {\r\n    this.filterForm.reset();\r\n    this.paginationService.resetPage();\r\n    this.filterForm.patchValue({ selectedDataSource: 'All' });\r\n  }\r\n\r\n    // Pagination Methods\r\n    nextPage() {\r\n      if (this.pagination.currentPage < this.pagination.totalPages) {\r\n        this.paginationService.changePage(this.pagination.currentPage + 1);\r\n      }\r\n    }\r\n    // Pagination Methods\r\n    previousPage() {\r\n      if (this.pagination.currentPage > 1) {\r\n        this.paginationService.changePage(this.pagination.currentPage - 1);\r\n      }\r\n    }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"breadcrumb-container\\\">\\r\\n  <div class=\\\"breadcrumb\\\"> <span class=\\\"active\\\"> <i class=\\\"material-icons\\\"> business </i> Organization List </span></div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"main-content-view\\\">\\r\\n  <div class=\\\"left-main-content-view\\\">\\r\\n    <div class=\\\"list\\\" *ngIf=\\\"pagination\\\">\\r\\n      <div *ngFor=\\\"let organization of organizations  |   orgList:  search: selectedCategories : sortValue: pagination.currentPage \\\" class=\\\"card\\\">\\r\\n        <div class=\\\"container\\\" (click)=\\\"goToDetails(organization.id)\\\">\\r\\n          <h2 class=\\\"title\\\">{{organization.name}}</h2>\\r\\n          <h4 class=\\\"secondary\\\"><span *ngFor=\\\"let category of organization.categories, let i = index\\\">{{category}}<span *ngIf=\\\"i < organization.categories.length -1\\\">,&nbsp;&nbsp;</span>\\r\\n            </span> </h4>\\r\\n          <p class=\\\"stats\\\">\\r\\n            <span class=\\\"left\\\"><i class=\\\"material-icons\\\">\\r\\n                assessment\\r\\n              </i> {{organization.reportsCount}} Reports</span>\\r\\n            <span class=\\\"middle\\\"> <i class=\\\"material-icons\\\">\\r\\n                person_outline\\r\\n              </i>{{organization.usersCount}} Users</span>\\r\\n            <span class=\\\"right\\\"> <i class=\\\"material-icons\\\">\\r\\n                dns\\r\\n              </i> {{organization.datarulesCount}} Data Rules</span>\\r\\n          </p>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <p class=\\\"pagination\\\" *ngIf=\\\"this.pagination\\\" style=\\\"text-align: center\\\"> <button mat-mini-fab (click)=\\\"previousPage()\\\" color=\\\"white\\\"\\r\\n      [disabled]=\\\"pagination.currentPage===1\\\"> <i class=\\\"material-icons\\\">\\r\\n        chevron_left\\r\\n      </i> </button>\\r\\n    {{this.pagination.currentPage}}/{{this.pagination.totalPages}} <button mat-mini-fab active (click)=\\\"nextPage() \\\" [disabled]=\\\"pagination.currentPage === pagination.totalPages\\\"\\r\\n      color=\\\"white\\\"> <i class=\\\"material-icons\\\">\\r\\n        chevron_right\\r\\n      </i> </button>\\r\\n  </p>\\r\\n  </div>\\r\\n  <div class=\\\"right-main-content-view\\\">\\r\\n    <div class=\\\"filter\\\" style=\\\"margin-top: 13px\\\">\\r\\n      <form [formGroup]=\\\"filterForm\\\" (ngSubmit)=\\\"onSearch()\\\">\\r\\n        <button class=\\\"reset\\\" mat-stroked-button (click)=\\\"searchFormReset()\\\">RESET</button>\\r\\n        <p class=\\\"title\\\"> Filter by</p>\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"search\\\">\\r\\n          <mat-label class=\\\"label-color\\\">Name</mat-label>\\r\\n          <input matInput type=\\\"text\\\" placeholder=\\\"Search Name\\\" formControlName=\\\"name\\\">\\r\\n        </mat-form-field>\\r\\n        <p class=\\\"title\\\"> Company Type</p>\\r\\n        <div class=\\\"checkbox\\\" *ngFor=\\\"let category of categories\\\">\\r\\n          <mat-checkbox value=\\\"{{category}}\\\" formControlName=\\\"{{category}}\\\">{{category}}</mat-checkbox>\\r\\n        </div>\\r\\n        <br>\\r\\n        <button mat-raised-button class=\\\"search\\\" type=\\\"submit\\\">Search</button>\\r\\n      </form>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"sort\\\">\\r\\n      <p class=\\\"title\\\"> Sort By</p>\\r\\n      <mat-radio-group class=\\\"example-radio-group\\\" [(ngModel)]=\\\"sortValue\\\">\\r\\n        <mat-radio-button *ngFor=\\\"let sort of sorts\\\" value=\\\"{{sort}}\\\" (click)=\\\"changeSort(sort)\\\" class=\\\"radio\\\">\\r\\n          {{sort}}\\r\\n        </mat-radio-button>\\r\\n      </mat-radio-group>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"add-button\\\">\\r\\n      <button routerLink=\\\"../new-organization\\\" mat-fab class=\\\"button-fab\\\" color=\\\"primary-button\\\"> <i class=\\\"material-icons plus-icon\\\">\\r\\n          add\\r\\n        </i>\\r\\n        <i class=\\\"material-icons back-icon\\\">\\r\\n          business\\r\\n        </i></button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \".plus-icon {\\n  background-color: #0877c1;\\n  position: relative;\\n  top: 15px;\\n  z-index: 20;\\n  left: 30px;\\n  font-size: 30px;\\n  border-radius: 50%;\\n  border: 4px solid white;\\n  font-weight: normal; }\\n\\n.back-icon {\\n  position: relative;\\n  margin-left: -30px;\\n  font-size: 55px;\\n  color: #ffffff;\\n  font-weight: normal;\\n  right: 5px; }\\n\"","import { PaginationService } from './../../../shared/services/pagination.service';\r\nimport { OrganizationService } from './../../../shared/services/organization.service';\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport * as OrganizationViewModel from '../../../shared/view-models/organization.viewmodel';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-organization-list',\r\n  templateUrl: './organization-list.component.html',\r\n  styleUrls: ['./organization-list.component.scss']\r\n})\r\nexport class OrganizationListComponent implements OnInit, OnDestroy {\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private organizationService: OrganizationService,\r\n    private paginationService: PaginationService\r\n  ) {}\r\n  sorts = ['Alphabetical', 'Most Reports', 'Most Users', 'Most Data Rules'];\r\n  // Array of all organizations\r\n  organizations: OrganizationViewModel.OrganizationDetails[];\r\n  searchValue = '';\r\n  // All categories\r\n  sortValue = this.sorts[0];\r\n  categories: string[] = [];\r\n  search = '';\r\n  selectedCategories: string[] = [];\r\n  viewChange = false;\r\n\r\n  pagination;\r\n  pageSubscription: Subscription;\r\n\r\n  // form group for filter\r\n  filterForm = new FormGroup({\r\n    name: new FormControl('')\r\n  });\r\n\r\n  async ngOnInit() {\r\n    // Gets all organizations OnInit\r\n    try {\r\n      this.organizations = await this.organizationService.getAllOrganizations();\r\n      await this.getAllCategories(this.organizations);\r\n      for (const category of this.categories) {\r\n        this.filterForm.addControl(category, new FormControl(''));\r\n      }\r\n      this.pageSubscription = this.paginationService.paginationChanged.subscribe((pagination) => {\r\n        this.pagination = pagination;\r\n      });\r\n      this.paginationService.getPagination();\r\n      this.paginationService.changePage(1);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  // Go to organization details\r\n  goToDetails(id) {\r\n    this.router.navigate(['../', id], { relativeTo: this.route });\r\n  }\r\n\r\n  // Get all categories with no repetition\r\n  getAllCategories(orgs: OrganizationViewModel.OrganizationDetails[]) {\r\n    orgs.forEach(org => {\r\n      org.categories.forEach(category => {\r\n        if (!this.categories.includes(category)) {\r\n          this.categories.push(category);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  // changes sort preferences\r\n  changeSort(sort) {\r\n    this.sortValue = sort;\r\n    this.paginationService.changePage(1);\r\n  }\r\n\r\n  // On Search, will search stuff\r\n  onSearch() {\r\n    this.selectedCategories = [];\r\n    console.log(this.filterForm.value);\r\n    const temp = this.filterForm.value;\r\n    for (const category of this.categories) {\r\n      if (category in temp) {\r\n        if (temp[category]) {\r\n          this.selectedCategories.push(category);\r\n        }\r\n      }\r\n    }\r\n    this.search = temp.name;\r\n    this.paginationService.changePage(1);\r\n  }\r\n\r\n  searchFormReset() {\r\n    this.filterForm.reset();\r\n  }\r\n\r\n  // Pagination Methods\r\n  nextPage() {\r\n    if (this.pagination.currentPage < this.pagination.totalPages) {\r\n      this.paginationService.changePage(this.pagination.currentPage + 1);\r\n    }\r\n  }\r\n\r\n  previousPage() {\r\n    if (this.pagination.currentPage > 1) {\r\n      this.paginationService.changePage(this.pagination.currentPage - 1);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.pageSubscription) {\r\n      this.pageSubscription.unsubscribe();\r\n\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<router-outlet></router-outlet>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-organization',\n  templateUrl: './organization.component.html',\n  styleUrls: ['./organization.component.scss']\n})\nexport class OrganizationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"form-container\\\">\\n  <div class=\\\"card\\\">\\n    <div class=\\\"form\\\">\\n      <h2 class=\\\"title\\\"> Share Report</h2>\\n      <hr>\\n      <mat-horizontal-stepper #stepper>\\n        <!-- First Step -->\\n        <mat-step [stepControl]=\\\"orgForm\\\" *ngIf=\\\"orgForm\\\">\\n          <form [formGroup]=\\\"orgForm\\\">\\n\\n            <div class=\\\"row\\\">\\n              <h4 class=\\\"input-header\\\"> Please select organization to share report <i class=\\\"material-icons info-icon\\\">\\n                  info\\n                </i></h4>\\n              <i class=\\\"material-icons form-icon\\\">\\n                business\\n              </i>\\n              <mat-form-field appearance=\\\"fill\\\" style=\\\"width:80%\\\">\\n                <mat-label>Select Organization</mat-label>\\n                <mat-select formControlName=\\\"organization\\\">\\n                  <mat-option (click)=\\\"selectOrg()\\\" *ngFor=\\\"let organization of organizations\\\" value=\\\"{{organization.id}}\\\">{{organization.name}}</mat-option>\\n                </mat-select>\\n                <mat-error>\\n                  Organization is <strong>required</strong>\\n                </mat-error>\\n              </mat-form-field>\\n            </div>\\n            <div class=\\\"row\\\">\\n\\n              <p class=\\\"create-new-text\\\">Organization not on the list? <span class=\\\"create-new-button\\\">Create New Organization </span></p>\\n            </div>\\n            <div class=\\\"buttons\\\">\\n              <button mat-button type='button' routerLink=\\\"../\\\">Cancel</button>\\n              <button mat-button type='button' mat-flat-button class=\\\"done primary\\\" [disabled]=\\\"!orgForm.valid\\\" [ngClass]=\\\"{'button-disabled': !orgForm.valid}\\\"\\n                matStepperNext>Next</button>\\n            </div>\\n          </form>\\n        </mat-step>\\n        <!-- ***** 2nd step: Selecting from list-->\\n        <mat-step *ngIf=\\\"reports && selectedOrg\\\">\\n          <!-- selecting report -->\\n          <form>\\n            <div class=\\\"row\\\">\\n              <h4 class=\\\"input-header\\\"> Please Select a report to share to {{selectedOrg.name}} </h4>\\n            </div>\\n            <div class=\\\"main-content-view\\\" style=\\\"padding:0\\\">\\n              <app-report-list [reports]=\\\"reports\\\" [allowAdd]=false (reportID)=\\\"selectReport($event)\\\" style=\\\"display:flex; width: 100%; margin-bottom: 10px;\\\"></app-report-list>\\n            </div>\\n            <div class=\\\"buttons\\\">\\n              <button mat-button matStepperPrevious>Cancel</button><button [disabled]=\\\"!selectedReport\\\" [ngClass]=\\\"{'button-disabled': !selectedReport}\\\"\\n                (click)=\\\"selectStep(2)\\\" class=\\\"done primary\\\" mat-flat-button>Next</button>\\n            </div>\\n          </form>\\n        </mat-step>\\n\\n        <mat-step *ngIf=\\\"selectedReport && selectedOrg\\\">\\n          <form *ngIf=\\\"selectedReport\\\">\\n\\n            <div class=\\\"row\\\">\\n              <h4 class=\\\"input-header\\\">New Report for {{selectedOrg.name}}</h4>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <p style=\\\"margin:0\\\">This report is currently being used by \\\"2\\\" other organizations:</p>\\n              <ul>\\n                <li>\\n                  Org 1\\n                </li>\\n                <li>\\n                  Org 2\\n                </li>\\n              </ul>\\n            </div>\\n            <div class=\\\"main-content-view\\\" style=\\\"padding:0\\\">\\n              <div style=\\\"max-width:700px; width: 100%; margin-bottom: 10px;\\\">\\n                <div class=\\\"list\\\">\\n                  <div class=\\\"card\\\">\\n                    <div class=\\\"container\\\">\\n                      <h4 class=\\\"title\\\"><strong> {{selectedReport.name}}</strong></h4>\\n                      <p class=\\\"secondary\\\">{{selectedReport.organization.name}}</p>\\n                      <p class=\\\"content\\\"> {{selectedReport.date | date}} </p>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"buttons\\\">\\n              <button mat-button matStepperPrevious>Cancel</button><button class=\\\"done primary\\\" mat-flat-button>Done</button>\\n            </div>\\n          </form>\\n        </mat-step>\\n      </mat-horizontal-stepper>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \".create-new-button:hover {\\n  cursor: pointer; }\\n\\n::ng-deep .mat-horizontal-stepper-header-container {\\n  display: none !important; }\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport * as ReportViewModel from '../../shared/view-models/report.viewmodel';\nimport { ReportService } from 'src/app/shared/services/report.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { OrganizationService } from 'src/app/shared/services/organization.service';\nimport * as OrganizationViewModel from './../../shared/view-models/organization.viewmodel';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport * as DataViewModel from '../../shared/view-models/data.viewmodel';\nimport { DatarulesService } from 'src/app/shared/services/datarules.service';\nimport { MatStepper } from '@angular/material';\n\n@Component({\n  selector: 'app-share-report',\n  templateUrl: './share-report.component.html',\n  styleUrls: ['./share-report.component.scss']\n})\nexport class ShareReportComponent  implements OnInit {\n  @ViewChild('stepper')\n  stepper: MatStepper;\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private reportService: ReportService,\n    private organizationService: OrganizationService,\n    private formBuilder: FormBuilder,\n    private datarulesService: DatarulesService\n  ) {}\n  reports: ReportViewModel.SimpleReport[];\n  organizations: OrganizationViewModel.SimpleOrganization[];\n  orgForm: FormGroup;\n  selectTypeForm: FormGroup;\n\n  datasources: DataViewModel.DataSource[];\n  selectedReport: ReportViewModel.SimpleReport;\n  selectedOrg;\n  organizationID;\n  sub: any;\n\n  async ngOnInit() {\n    try {\n      this.reports = await this.reportService.getReportByOrganization('orgID');\n      this.organizations = await this.organizationService.getAllOrganizationsWithNoDetails();\n      this.datasources = await this.datarulesService.getAllDataSourceForOrganization(\n        'id'\n      );\n      this.orgForm = this.formBuilder.group({\n        organization: ['', Validators.required]\n      });\n      this.sub = this.route.params.subscribe(params => {\n        this.organizationID = params['id'];\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  selectReport(id) {\n    this.selectedReport = this.reports.find(report => {\n      return report.id === id;\n    });\n  }\n\n  selectStep(id) {\n    this.stepper.selectedIndex = id;\n  }\n\n  selectOrg() {\n   this.selectedOrg = this.organizations.find(org => {\n     return org.id === this.orgForm.value.organization;\n   });\n  }\n}\n","module.exports = \"<div *ngIf=\\\"organization != null && user != null\\\">\\r\\n\\r\\n  <div class=\\\"breadcrumb-container\\\">\\r\\n    <!-- Breadcrumbs for user details under user list-->\\r\\n    <div *ngIf=\\\"this.orgID === undefined\\\">\\r\\n      <div class=\\\"breadcrumb\\\"> <span routerLink=\\\"../../\\\"><i class=\\\"material-icons\\\">\\r\\n            person_outline </i> User List </span> &nbsp;&nbsp; <i class=\\\"material-icons arrow\\\"> keyboard_arrow_right </i> <i style=\\\"margin-left: -14px\\\"\\r\\n          class=\\\"material-icons arrow\\\"> keyboard_arrow_right </i>&nbsp;&nbsp; <span class=\\\"active\\\"> {{user.firstName}} {{user.lastName}}  </span> </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- Breadcrumbs for user details under organization list-->\\r\\n    <div *ngIf=\\\"this.orgID != undefined\\\">\\r\\n      <div class=\\\"breadcrumb\\\"> <span routerLink=\\\"../../../\\\"><i class=\\\"material-icons\\\">\\r\\n            business </i> Organization List </span> &nbsp;&nbsp; <i class=\\\"material-icons arrow\\\"> keyboard_arrow_right </i> <i style=\\\"margin-left: -14px\\\"\\r\\n          class=\\\"material-icons arrow\\\"> keyboard_arrow_right </i>&nbsp;&nbsp; <span routerLink=\\\"../../\\\"> {{organization.name}}</span>\\r\\n        &nbsp;&nbsp; <i class=\\\"material-icons arrow\\\"> keyboard_arrow_right </i> <i style=\\\"margin-left: -14px\\\" class=\\\"material-icons arrow\\\">\\r\\n          keyboard_arrow_right </i>&nbsp;&nbsp; <span class=\\\"active\\\"> {{user.firstName}} {{user.lastName}} </span> </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"main-content-view\\\">\\r\\n    <div class=\\\"full-content-view\\\">\\r\\n\\r\\n\\r\\n      <div class=\\\"details\\\">\\r\\n        <div class=\\\"more-button\\\">\\r\\n          <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\">\\r\\n            <mat-icon color=\\\"more-color\\\">more_vert</mat-icon>\\r\\n          </button>\\r\\n\\r\\n          <mat-menu #menu=\\\"matMenu\\\">\\r\\n            <button mat-menu-item>Edit</button>\\r\\n            <button mat-menu-item>Delete</button>\\r\\n          </mat-menu>\\r\\n        </div>\\r\\n        <div class=\\\"card\\\">\\r\\n          <div class=\\\"container\\\">\\r\\n            <h2 class=\\\"title\\\"> {{user.firstName}} {{user.lastName}}</h2>\\r\\n            <h4 class=\\\"secondary\\\">Viewer</h4>\\r\\n            <p class=\\\"content\\\">Email: {{user.googleId}}</p>\\r\\n            <p class=\\\"content\\\">Secondary Email: {{user.secondaryEmail }}}</p>\\r\\n            <p class=\\\"content\\\"> Accesses: <span *ngFor=\\\"let org of user.organizations\\\"> {{org.name}} </span></p>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div>\\r\\n        <h3 class=\\\"list-title\\\">Report List</h3>\\r\\n        <app-report-list style=\\\"display:flex; width: 100%;\\\" [reports]=\\\"reports\\\" (reportID)=\\\"goToReport($event)\\\"></app-report-list>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"/* Tool bar top colour */\\n/* Main content colour */\\n/*************** SIDE NAVIGATION VARIABLES *******************/\\n/* Side nav color */\\n/********* ORGANIZATION DETAILS VARIABLES **********/\\n/*********** LIST CARD VARIABLES  ***********/\\n/********* BREADCRUMBS STYLING ******/\\n/******* FORMS STYLING & FILTERS ******/\\n/***** Filter Card ***/\\n/****** Buttons Colors  **/\\n.list-title {\\n  color: #3e3e3e;\\n  margin-bottom: 5px; }\\n\"","import { ReportService} from './../../shared/services/report.service';\r\nimport { OrganizationService } from './../../shared/services/organization.service';\r\nimport { UserService } from './../../shared/services/user.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport * as UserViewModel from '../../shared/view-models/user.viewmodel';\r\nimport * as OrganizationViewModel from '../../shared/view-models/organization.viewmodel';\r\nimport * as ReportViewModel from '../../shared/view-models/report.viewmodel';\r\n\r\n\r\n@Component({\r\n  selector: 'app-user-details',\r\n  templateUrl: './user-details.component.html',\r\n  styleUrls: ['./user-details.component.scss']\r\n})\r\nexport class UserDetailsComponent implements OnInit {\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private userService: UserService,\r\n    private organizationService: OrganizationService,\r\n    private reportService: ReportService\r\n  ) {}\r\n\r\n  sub: any;\r\n  userID: string;\r\n  orgID: string;\r\n  reports: ReportViewModel.SimpleReport[];\r\n\r\n  organization: OrganizationViewModel.SimpleOrganization; // Name of the org from previous view for breadcrumbs purposes\r\n  user: UserViewModel.User;\r\n\r\n async ngOnInit() {\r\n   try{\r\n    this.sub =  this.route.params.subscribe(params => {\r\n      this.orgID = params['id'];\r\n      this.userID =  params['userID'];\r\n    });\r\n    this.organization = await this.organizationService.getOrganizationById(this.orgID);\r\n    this.user = await this.userService.getUser(this.userID);\r\n    this.reports = await this.reportService.getReportByOrganizations(['orgIDs']);\r\n   } catch (error) {\r\n     console.log(error);\r\n   }\r\n\r\n  }\r\n\r\n  // Gets the name of the organization for breadcrumbs & user acceses\r\n  private getOrganization(id) {\r\n    return this.organizationService.getOrganizationById(id);\r\n  }\r\n\r\n   // Gets the user details\r\n  private getUserDetails(id) {\r\n    return this.userService.getUser(id);\r\n  }\r\n\r\n\r\n  public goToReport(reportID) {\r\n    this.router.navigate(['./r', reportID], { relativeTo: this.route });\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"<div class=\\\"left-main-content-view\\\">\\r\\n  <div *ngIf=\\\"reports != null \\\">\\r\\n    <div class=\\\"list\\\">\\r\\n      <div *ngFor=\\\"let report of reports | reportList: searchName: selectedOrganization : sortValue :  pagination.currentPage\\\" class=\\\"card\\\">\\r\\n        <div class=\\\"container\\\" (click)=\\\"reportClicked(report.id)\\\">\\r\\n          <h4 class=\\\"title\\\"><strong> {{report.name}}</strong></h4>\\r\\n          <p class=\\\"secondary\\\">{{report.organization.name}}</p>\\r\\n          <p class=\\\"content\\\"> {{report.date | date}} </p>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <p class=\\\"pagination\\\" *ngIf=\\\"this.pagination\\\" style=\\\"text-align: center\\\"> <button mat-mini-fab (click)=\\\"previousPage()\\\" color=\\\"white\\\"\\r\\n    [disabled]=\\\"pagination.currentPage===1\\\"> <i class=\\\"material-icons\\\">\\r\\n      chevron_left\\r\\n    </i> </button>\\r\\n  {{this.pagination.currentPage}}/{{this.pagination.totalPages}} <button mat-mini-fab active (click)=\\\"nextPage() \\\" [disabled]=\\\"pagination.currentPage === pagination.totalPages\\\"\\r\\n    color=\\\"white\\\"> <i class=\\\"material-icons\\\">\\r\\n      chevron_right\\r\\n    </i> </button>\\r\\n</p>\\r\\n\\r\\n</div>\\r\\n<div class=\\\"right-main-content-view\\\" *ngIf=\\\"formInitialize\\\">\\r\\n  <div class=\\\"filter\\\">\\r\\n    <form [formGroup]=\\\"filterForm\\\" (ngSubmit)=\\\"onSearch()\\\">\\r\\n      <button class=\\\"reset\\\" mat-stroked-button (click)=\\\"searchFormReset()\\\">RESET</button>\\r\\n      <p class=\\\"title\\\"> Filter by</p>\\r\\n      <mat-form-field appearance=\\\"outline\\\" class=\\\"search\\\">\\r\\n        <mat-label class=\\\"label-color\\\">Name</mat-label>\\r\\n        <input matInput type=\\\"text\\\" placeholder=\\\"Search Name\\\" formControlName=\\\"name\\\">\\r\\n      </mat-form-field>\\r\\n      <p class=\\\"title\\\" *ngIf=\\\"organizations.length > 1\\\"> Organization</p>\\r\\n      <mat-form-field appearance=\\\"outline\\\" class=\\\"select\\\" *ngIf=\\\"organizations.length > 1\\\">\\r\\n        <mat-select formControlName=\\\"selectedOrganization\\\">\\r\\n          <mat-option value=\\\"All\\\">All</mat-option>\\r\\n          <mat-option *ngFor=\\\"let organization of organizations\\\" value=\\\"{{organization.id}}\\\">{{organization.name}}</mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n      <br>\\r\\n      <button mat-raised-button class=\\\"search\\\" type=\\\"submit\\\">Search</button>\\r\\n    </form>\\r\\n  </div>\\r\\n  <div class=\\\"sort\\\">\\r\\n    <p class=\\\"title\\\"> Sort By</p>\\r\\n    <mat-radio-group class=\\\"example-radio-group\\\" [(ngModel)]=\\\"sortValue\\\">\\r\\n      <mat-radio-button *ngFor=\\\"let sort of sorts\\\" value=\\\"{{sort}}\\\" (click)=\\\"changeSort(sort)\\\" class=\\\"radio\\\">\\r\\n        {{sort}}\\r\\n      </mat-radio-button>\\r\\n    </mat-radio-group>\\r\\n  </div>\\r\\n\\r\\n\\r\\n  <div class=\\\"add-button\\\" *ngIf=\\\"allowAdd\\\">\\r\\n    <button mat-fab class=\\\"button-fab\\\" color=\\\"primary-button\\\" *ngIf=\\\"organizationID\\\" routerLink='new-report'> <i class=\\\"material-icons plus-icon\\\">\\r\\n      add\\r\\n    </i>\\r\\n    <i class=\\\"material-icons back-icon\\\">\\r\\n      assessment\\r\\n    </i></button>\\r\\n    <button mat-fab class=\\\"button-fab\\\" color=\\\"primary-button\\\" *ngIf=\\\"!organizationID\\\" routerLink='../new-report'> <i class=\\\"material-icons plus-icon\\\">\\r\\n      add\\r\\n    </i>\\r\\n    <i class=\\\"material-icons back-icon\\\">\\r\\n      assessment\\r\\n    </i></button>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"\"","import { ActivatedRoute } from '@angular/router';\r\nimport { OrganizationService } from './../../services/organization.service';\r\nimport { Subscription } from 'rxjs';\r\nimport {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  OnDestroy,\r\n  OnChanges\r\n} from '@angular/core';\r\nimport * as ReportViewModel from '../../view-models/report.viewmodel';\r\nimport { PaginationService } from '../../services/pagination.service';\r\nimport * as OrganizationViewModel from '../../view-models/organization.viewmodel';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-report-list',\r\n  templateUrl: './report-list.component.html',\r\n  styleUrls: ['./report-list.component.scss']\r\n})\r\nexport class ReportListComponent implements OnInit, OnDestroy, OnChanges {\r\n  constructor(\r\n    private paginationService: PaginationService,\r\n    private organizationService: OrganizationService,\r\n    private route: ActivatedRoute\r\n  ) {}\r\n  @Input()\r\n  reports: ReportViewModel.SimpleReport[];\r\n  @Input()\r\n  allowAdd: boolean;\r\n  @Output()\r\n  reportID = new EventEmitter<string>();\r\n  sub: any;\r\n  pageSubscription: Subscription;\r\n  organizations: OrganizationViewModel.SimpleOrganization[] = [];\r\n  pagination;\r\n  sorts = ['Latest', 'Alphabetical'];\r\n  selectedOrganization = '';\r\n  sortValue = this.sorts[0];\r\n  organizationID;\r\n  searchName;\r\n  filterForm = new FormGroup({\r\n    name: new FormControl('')\r\n  });\r\n  formInitialize = false;\r\n  userID;\r\n\r\n  async ngOnInit() {\r\n    try {\r\n      this.paginationService.resetPage();\r\n      this.sub = this.route.params.subscribe(params => {\r\n        this.organizationID = params['id'];\r\n        this.userID = params['userID'];\r\n      });\r\n      this.pageSubscription = this.paginationService.paginationChanged.subscribe(\r\n        pagination => {\r\n          this.pagination = pagination;\r\n        }\r\n      );\r\n      this.paginationService.getPagination();\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  async ngOnChanges() {\r\n    if (this.reports != null && this.organizations != null) {\r\n      for (const report of this.reports) {\r\n        if (!this.organizations.includes(report.organization)) {\r\n          this.organizations.push(report.organization);\r\n        }\r\n      }\r\n      if (this.organizations.length > 1) {\r\n        this.filterForm.addControl(\r\n          'selectedOrganization',\r\n          new FormControl('All')\r\n        );\r\n      }\r\n      this.formInitialize = true;\r\n    }\r\n  }\r\n\r\n  reportClicked(id: string) {\r\n    this.reportID.emit(id);\r\n  }\r\n\r\n  changeSort(sort) {\r\n    this.paginationService.resetPage();\r\n    this.sortValue = sort;\r\n  }\r\n\r\n  onSearch() {\r\n    this.paginationService.resetPage();\r\n    const temp = this.filterForm.value;\r\n    this.searchName = temp.name;\r\n    this.selectedOrganization = temp.selectedOrganization;\r\n  }\r\n\r\n  searchFormReset() {\r\n    this.filterForm.reset();\r\n    this.filterForm.patchValue({ selectedOrganization: 'All' });\r\n    this.paginationService.resetPage();\r\n  }\r\n\r\n  // Pagination Methods\r\n  nextPage() {\r\n    if (this.pagination.currentPage < this.pagination.totalPages) {\r\n      this.paginationService.changePage(this.pagination.currentPage + 1);\r\n    }\r\n  }\r\n  // Pagination Methods\r\n  previousPage() {\r\n    if (this.pagination.currentPage > 1) {\r\n      this.paginationService.changePage(this.pagination.currentPage - 1);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.pageSubscription.unsubscribe();\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"left-main-content-view\\\">\\r\\n  <div *ngIf=\\\"users != null\\\">\\r\\n    <div class=\\\"list\\\">\\r\\n      <div *ngFor=\\\"let user of users | userList: searchName: selectedRole: selectedOrganization : sortValue :  pagination.currentPage\\\"\\r\\n        class=\\\"card\\\">\\r\\n        <div class=\\\"container\\\" (click)=\\\"userClicked(user.id)\\\">\\r\\n          <h4 class=\\\"title\\\" style=\\\"font-weight: bold\\\">{{user.firstName}} {{user.lastName}}</h4>\\r\\n          <p class=\\\"secondary\\\"> Viewer : <span *ngFor=\\\"let org of user.organizations; let i = index\\\">\\r\\n              {{org.name}}<span *ngIf=\\\"i < user.organizations.length-1\\\">, </span> </span> </p>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <p class=\\\"pagination\\\" *ngIf=\\\"this.pagination\\\" style=\\\"text-align: center\\\"> <button mat-mini-fab (click)=\\\"previousPage()\\\" color=\\\"white\\\"\\r\\n    [disabled]=\\\"pagination.currentPage===1\\\"> <i class=\\\"material-icons\\\">\\r\\n      chevron_left\\r\\n    </i> </button>\\r\\n  {{this.pagination.currentPage}}/{{this.pagination.totalPages}} <button mat-mini-fab active (click)=\\\"nextPage() \\\" [disabled]=\\\"pagination.currentPage === pagination.totalPages\\\"\\r\\n    color=\\\"white\\\"> <i class=\\\"material-icons\\\">\\r\\n      chevron_right\\r\\n    </i> </button>\\r\\n</p>\\r\\n</div>\\r\\n<div class=\\\"right-main-content-view\\\" *ngIf=\\\"formInitialize\\\">\\r\\n  <div class=\\\"filter\\\">\\r\\n    <form [formGroup]=\\\"filterForm\\\" (ngSubmit)=\\\"onSearch()\\\">\\r\\n      <button class=\\\"reset\\\" mat-stroked-button (click)=\\\"searchFormReset()\\\">RESET</button>\\r\\n      <p class=\\\"title\\\"> Filter by</p>\\r\\n      <mat-form-field appearance=\\\"outline\\\" class=\\\"search\\\">\\r\\n        <mat-label class=\\\"label-color\\\">Name</mat-label>\\r\\n        <input matInput type=\\\"text\\\" placeholder=\\\"Search Name\\\" formControlName=\\\"name\\\">\\r\\n      </mat-form-field>\\r\\n      <p class=\\\"title\\\" *ngIf=\\\"!organizationID\\\"> Role</p>\\r\\n      <mat-form-field appearance=\\\"outline\\\" class=\\\"select\\\" *ngIf=\\\"!organizationID\\\">\\r\\n        <mat-select formControlName=\\\"selectedRole\\\">\\r\\n          <mat-option value=\\\"All\\\">All</mat-option>\\r\\n          <mat-option value=\\\"Admin\\\">Admin</mat-option>\\r\\n          <mat-option value=\\\"Viewer\\\">Viewer</mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n      <p class=\\\"title\\\" *ngIf=\\\"!organizationID\\\"> Organization</p>\\r\\n      <mat-form-field class=\\\"select\\\" appearance=\\\"outline\\\" *ngIf=\\\"!organizationID\\\">\\r\\n        <mat-select formControlName=\\\"selectedOrganization\\\">\\r\\n          <mat-option value=\\\"All\\\">All</mat-option>\\r\\n          <mat-option *ngFor=\\\"let organization of organizations\\\" value=\\\"{{organization.id}}\\\">{{organization.name}}</mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n      <br>\\r\\n      <button mat-raised-button class=\\\"search\\\" type=\\\"submit\\\">Search</button>\\r\\n    </form>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"sort\\\">\\r\\n    <p class=\\\"title\\\"> Sort By</p>\\r\\n    <mat-radio-group class=\\\"example-radio-group\\\" [(ngModel)]=\\\"sortValue\\\">\\r\\n      <mat-radio-button *ngFor=\\\"let sort of sorts\\\" value=\\\"{{sort}}\\\" (click)=\\\"changeSort(sort)\\\" class=\\\"radio\\\">\\r\\n        {{sort}}\\r\\n      </mat-radio-button>\\r\\n    </mat-radio-group>\\r\\n\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"add-button\\\">\\r\\n    <button  *ngIf=\\\"organizationID\\\" routerLink=\\\"./new-user\\\" mat-fab class=\\\"button-fab\\\" color=\\\"primary-button\\\"> <i class=\\\"material-icons plus-icon\\\">\\r\\n      add\\r\\n    </i>\\r\\n    <i class=\\\"material-icons back-icon\\\">\\r\\n      person_outline\\r\\n    </i></button>\\r\\n    <button  *ngIf=\\\"!organizationID\\\" routerLink=\\\"../new-user\\\" mat-fab class=\\\"button-fab\\\" color=\\\"primary-button\\\"> <i class=\\\"material-icons plus-icon\\\">\\r\\n      add\\r\\n    </i>\\r\\n    <i class=\\\"material-icons back-icon\\\">\\r\\n      person_outline\\r\\n    </i></button>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"\"","import { OrganizationService } from './../../services/organization.service';\r\nimport { Component, OnInit, EventEmitter, Input, Output, OnDestroy } from '@angular/core';\r\nimport * as UserViewModel from '../../view-models/user.viewmodel';\r\nimport * as OrganizationViewModel from '../../view-models/organization.viewmodel';\r\nimport { PaginationService } from '../../services/pagination.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-user-list',\r\n  templateUrl: './user-list.component.html',\r\n  styleUrls: ['./user-list.component.scss']\r\n})\r\nexport class UserListComponent implements OnInit, OnDestroy {\r\n  constructor(\r\n    private organizationService: OrganizationService,\r\n    private paginationService: PaginationService,\r\n    private route: ActivatedRoute\r\n  ) {}\r\n\r\n  @Input()\r\n  users: UserViewModel.SimpleUserView[];\r\n  @Output()\r\n  userID = new EventEmitter<string>();\r\n  sub: any;\r\n  pageSubscription: Subscription;\r\n  selectedOrganization = '';\r\n  selectedRole = '';\r\n  organizations: OrganizationViewModel.SimpleOrganization[];\r\n  sorts = ['First Name', 'Last Name'];\r\n  sortValue = this.sorts[0];\r\n  organizationID;\r\n  searchName;\r\n  filterForm = new FormGroup({\r\n    name: new FormControl(''),\r\n    selectedRole: new FormControl('All')\r\n  });\r\n  pagination;\r\n  formInitialize = false;\r\n\r\n\r\n  async ngOnInit() {\r\n    try {\r\n      this.paginationService.resetPage();\r\n      this.sub = this.route.params.subscribe(params => {\r\n        this.organizationID = params['id'];\r\n      });\r\n      this.pageSubscription = this.paginationService.paginationChanged.subscribe(\r\n        pagination => {\r\n          this.pagination = pagination;\r\n        }\r\n      );\r\n      this.paginationService.getPagination();\r\n      if (!this.organizationID) {\r\n        this.organizations = await this.organizationService.getAllOrganizationsWithNoDetails();\r\n        this.filterForm.addControl(\r\n          'selectedOrganization',\r\n          new FormControl('All')\r\n        );\r\n      }\r\n      this.formInitialize = true;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  userClicked(id: string) {\r\n    this.userID.emit(id);\r\n  }\r\n\r\n  changeSort(sort) {\r\n    this.paginationService.resetPage();\r\n    this.sortValue = sort;\r\n  }\r\n\r\n  onSearch() {\r\n    console.log(this.filterForm.value);\r\n    this.paginationService.resetPage();\r\n    const temp = this.filterForm.value;\r\n    this.searchName = temp.name;\r\n    this.selectedOrganization = temp.selectedOrganization;\r\n    this.selectedRole = temp.selectedRole;\r\n  }\r\n\r\n  searchFormReset() {\r\n    this.filterForm.reset();\r\n    this.filterForm.patchValue({ selectedRole: 'All' });\r\n    this.filterForm.patchValue({ selectedOrganization: 'All' });\r\n    this.paginationService.resetPage();\r\n  }\r\n\r\n\r\n  // Pagination Methods\r\n  nextPage() {\r\n    if (this.pagination.currentPage < this.pagination.totalPages) {\r\n      this.paginationService.changePage(this.pagination.currentPage + 1);\r\n    }\r\n  }\r\n  // Pagination Methods\r\n  previousPage() {\r\n    if (this.pagination.currentPage > 1) {\r\n      this.paginationService.changePage(this.pagination.currentPage - 1);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.pageSubscription.unsubscribe();\r\n  }\r\n}\r\n\r\n","import { Pipe, PipeTransform, OnInit, OnDestroy } from '@angular/core';\r\nimport { PaginationService } from '../services/pagination.service';\r\n@Pipe({\r\n  name: 'datarulesList'\r\n})\r\nexport class DataRulesListPipe implements PipeTransform {\r\n\r\n  constructor(private paginationService: PaginationService) {}\r\n\r\n  transform(\r\n    rules: any,\r\n    searchName: string,\r\n    datasource: string,\r\n    sort: string,\r\n    page: number,\r\n  ): any {\r\n    if (rules) {\r\n      let currentList = rules;\r\n\r\n      // If there's a search\r\n      if (searchName) {\r\n        searchName = searchName.toLowerCase();\r\n        currentList = currentList.filter(\r\n          (el: any) => el.name.toLowerCase().indexOf(searchName) > -1\r\n        );\r\n      }\r\n\r\n      // if there's a organization\r\n      if (datasource) {\r\n        if (datasource !== 'All') {\r\n          currentList = currentList.filter(\r\n            element => element.datasource.id === datasource\r\n          );\r\n        }\r\n      }\r\n     // if there's a sort\r\n     if (sort) {\r\n      if (sort === 'Alphabetical') {\r\n        const sorted = currentList.sort(\r\n          (a, b) => (a.name > b.name ? 1 : a.name === b.name ? 0 : -1)\r\n        );\r\n        if (sort.charAt(0) === '-') {\r\n          sorted.reverse();\r\n        }\r\n        currentList = sorted;\r\n      }\r\n      if (sort === 'Latest') {\r\n        const sorted = currentList.sort(\r\n          (a, b) =>\r\n            new Date(a.date) < new Date(b.date)\r\n              ? 1\r\n              : new Date(a.date) === new Date(b.date)\r\n                ? 0\r\n                : -1\r\n        );\r\n        currentList = sorted;\r\n      }\r\n    }\r\n      this.paginationService.changeTotalPages(\r\n        Math.ceil(\r\n          currentList.length / this.paginationService.pagination.itemsPerPage\r\n        )\r\n      );\r\n\r\n      return currentList.slice(\r\n        this.paginationService.pagination.currentPage *\r\n          this.paginationService.pagination.itemsPerPage -\r\n          this.paginationService.pagination.itemsPerPage,\r\n        this.paginationService.pagination.itemsPerPage *\r\n          this.paginationService.pagination.currentPage\r\n      );\r\n\r\n    }\r\n    return rules;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform, OnInit, OnDestroy } from '@angular/core';\r\nimport { PaginationService } from '../services/pagination.service';\r\n@Pipe({\r\n  name: 'orgList'\r\n})\r\nexport class OrgListPipe implements PipeTransform {\r\n\r\n  constructor(private paginationService: PaginationService) {}\r\n\r\n  transform(\r\n    organization: any,\r\n    searchName: string,\r\n    categories: string[],\r\n    sort: string,\r\n    page: number,\r\n  ): any {\r\n    if (organization) {\r\n      let currentList = organization;\r\n\r\n      // If there's a search\r\n      if (searchName) {\r\n        searchName = searchName.toLowerCase();\r\n        currentList = currentList.filter(\r\n          (el: any) => el.name.toLowerCase().indexOf(searchName) > -1\r\n        );\r\n      }\r\n\r\n      // If there's a category\r\n      if (categories.length > 0) {\r\n        currentList = currentList.filter(element =>\r\n          categories.every(temp => element.categories.indexOf(temp) >= 0)\r\n        );\r\n      }\r\n      // If there's a sort\r\n      if (sort) {\r\n\r\n        if (sort === 'Alphabetical') {\r\n          const sorted = currentList.sort(\r\n            (a, b) => (a.name > b.name ? 1 : a.name === b.name ? 0 : -1)\r\n          );\r\n          if (sort.charAt(0) === '-') {\r\n            sorted.reverse();\r\n          }\r\n          currentList = sorted;\r\n        }\r\n        if (sort === 'Most Reports') {\r\n          const sorted = currentList.sort(\r\n            (a, b) =>\r\n              Number(a.reportsCount) < Number(b.reportsCount)\r\n                ? 1\r\n                : Number(a.reportsCount) === Number(b.reportsCount)\r\n                  ? 0\r\n                  : -1\r\n          );\r\n          currentList = sorted;\r\n        }\r\n        if (sort === 'Most Users') {\r\n          const sorted = currentList.sort(\r\n            (a, b) =>\r\n              Number(a.usersCount) < Number(b.usersCount)\r\n                ? 1\r\n                : Number(a.usersCount) === Number(b.usersCount)\r\n                  ? 0\r\n                  : -1\r\n          );\r\n          currentList = sorted;\r\n        }\r\n        if (sort === 'Most Data Rules') {\r\n          const sorted = currentList.sort(\r\n            (a, b) =>\r\n              Number(a.datarulesCount) < Number(b.datarulesCount)\r\n                ? 1\r\n                : Number(a.datarulesCount) === Number(b.datarulesCount)\r\n                  ? 0\r\n                  : -1\r\n          );\r\n          currentList = sorted;\r\n        }\r\n      }\r\n\r\n      this.paginationService.changeTotalPages(\r\n        Math.ceil(\r\n          currentList.length / this.paginationService.pagination.itemsPerPage\r\n        )\r\n      );\r\n\r\n      return currentList.slice(\r\n        this.paginationService.pagination.currentPage *\r\n          this.paginationService.pagination.itemsPerPage -\r\n          this.paginationService.pagination.itemsPerPage,\r\n        this.paginationService.pagination.itemsPerPage *\r\n          this.paginationService.pagination.currentPage\r\n      );\r\n\r\n    }\r\n    return organization;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { PaginationService } from '../services/pagination.service';\r\n@Pipe({\r\n  name: 'pagination'\r\n})\r\nexport class PaginationPipe implements PipeTransform {\r\n  constructor(private paginationService: PaginationService) {}\r\n\r\n  transform(currentList: object[], page: number): any {\r\n\r\n    console.log('pagination called');\r\n\r\n    this.paginationService.changeTotalPages(\r\n      Math.ceil(\r\n        currentList.length / this.paginationService.pagination.itemsPerPage\r\n      )\r\n    );\r\n\r\n    return currentList.slice(\r\n      this.paginationService.pagination.currentPage *\r\n        this.paginationService.pagination.itemsPerPage -\r\n        this.paginationService.pagination.itemsPerPage,\r\n      this.paginationService.pagination.itemsPerPage *\r\n        this.paginationService.pagination.currentPage\r\n    );\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { PaginationService } from '../services/pagination.service';\r\n@Pipe({\r\n  name: 'reportList'\r\n})\r\nexport class ReportListPipe implements PipeTransform {\r\n  constructor(private paginationService: PaginationService) {}\r\n  transform(\r\n    reportList: any[],\r\n    searchName: string,\r\n    organization: string,\r\n    sort: string,\r\n    page: number\r\n  ): any {\r\n    let currentList = reportList;\r\n    // If there's a reportList\r\n    if (reportList) {\r\n      // If there's a search\r\n      if (searchName) {\r\n        searchName = searchName.toLowerCase();\r\n        currentList = currentList.filter(\r\n          (el: any) => el.name.toLowerCase().indexOf(searchName) > -1\r\n        );\r\n      }\r\n\r\n      // if there's a organization\r\n      if (organization) {\r\n        if (organization !== 'All') {\r\n          currentList = currentList.filter(\r\n            element => element.organization.id === organization\r\n          );\r\n        }\r\n      }\r\n      // if there's a sort\r\n      if (sort) {\r\n        if (sort === 'Alphabetical') {\r\n          const sorted = currentList.sort(\r\n            (a, b) => (a.name > b.name ? 1 : a.name === b.name ? 0 : -1)\r\n          );\r\n          if (sort.charAt(0) === '-') {\r\n            sorted.reverse();\r\n          }\r\n          currentList = sorted;\r\n        }\r\n        if (sort === 'Latest') {\r\n          const sorted = currentList.sort(\r\n            (a, b) =>\r\n              new Date(a.date) < new Date(b.date)\r\n                ? 1\r\n                : new Date(a.date) === new Date(b.date)\r\n                  ? 0\r\n                  : -1\r\n          );\r\n          currentList = sorted;\r\n        }\r\n      }\r\n      this.paginationService.changeTotalPages(\r\n        Math.ceil(\r\n          currentList.length / this.paginationService.pagination.itemsPerPage\r\n        )\r\n      );\r\n\r\n      return currentList.slice(\r\n        this.paginationService.pagination.currentPage *\r\n          this.paginationService.pagination.itemsPerPage -\r\n          this.paginationService.pagination.itemsPerPage,\r\n        this.paginationService.pagination.itemsPerPage *\r\n          this.paginationService.pagination.currentPage\r\n      );\r\n    }\r\n\r\n    return currentList;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'searchName'\n})\nexport class SearchNamePipe implements PipeTransform {\n  transform(value: any[], input: string) {\n    console.log('searchName');\n\n    if (value) {\n      if (input) {\n        input = input.toLowerCase();\n        const temp = value.filter(\n          (el: any) => el.name.toLowerCase().indexOf(input) > -1\n        );\n        console.log(temp.length);\n        return temp;\n      }\n      return value;\n    }\n    return value;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { PaginationService } from '../services/pagination.service';\r\n@Pipe({\r\n  name: 'userList'\r\n})\r\nexport class UserListPipe implements PipeTransform {\r\n  constructor(private paginationService: PaginationService) {}\r\n  transform(\r\n    userList: any[],\r\n    searchName: string,\r\n    role: string,\r\n    organization: string,\r\n    sort: string,\r\n    page: number\r\n  ): any {\r\n    let currentList = userList;\r\n    // If there's a reportList\r\n    if (userList) {\r\n      // If there's a search\r\n      if (searchName) {\r\n        searchName = searchName.toLowerCase();\r\n        currentList = currentList.filter(\r\n          (el: any) =>\r\n            (el.firstName + ' ' + el.lastName)\r\n              .toLowerCase()\r\n              .indexOf(searchName) > -1\r\n        );\r\n      }\r\n\r\n      // if there's a organization\r\n      if (organization) {\r\n        if (organization !== 'All') {\r\n          currentList = currentList.filter(function(element) {\r\n            return element.organizations.filter(function(org) {\r\n                console.log(org);\r\n                return org.id === organization;\r\n              }).length > 0;\r\n          });\r\n        }\r\n      }\r\n\r\n      // checks for role\r\n      if (role !== 'All' && role) {\r\n        currentList = currentList.filter(element => element.role === role);\r\n      }\r\n\r\n\r\n      // if there's a sort\r\n      if (sort) {\r\n        if (sort === 'First Name') {\r\n          const sorted = currentList.sort(\r\n            (a, b) =>\r\n              a.firstName > b.firstName\r\n                ? 1\r\n                : a.firstName === b.firstName\r\n                  ? 0\r\n                  : -1\r\n          );\r\n          currentList = sorted;\r\n        }\r\n        if (sort === 'Last Name') {\r\n          const sorted = currentList.sort(\r\n            (a, b) =>\r\n              a.lastName > b.lastName ? 1 : a.lastName === b.lastName ? 0 : -1\r\n          );\r\n          currentList = sorted;\r\n        }\r\n      }\r\n      this.paginationService.changeTotalPages(\r\n        Math.ceil(\r\n          currentList.length / this.paginationService.pagination.itemsPerPage\r\n        )\r\n      );\r\n\r\n      return currentList.slice(\r\n        this.paginationService.pagination.currentPage *\r\n          this.paginationService.pagination.itemsPerPage -\r\n          this.paginationService.pagination.itemsPerPage,\r\n        this.paginationService.pagination.itemsPerPage *\r\n          this.paginationService.pagination.currentPage\r\n      );\r\n    }\r\n\r\n    return currentList;\r\n  }\r\n}\r\n","import { CreateNewDataRule } from './../view-models/data.viewmodel';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport * as DataViewModel from '../view-models/data.viewmodel';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DatarulesService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  dataRules: DataViewModel.DataRule[];\r\n  URL = '../../../assets/example-data/';\r\n\r\n  /**\r\n   * Gets all the data source for a specific organization\r\n   * @param organizationID - ID of the organization you want to get the data source for\r\n   */\r\n  public async getDataRules(\r\n    organizationID: string\r\n  ): Promise<DataViewModel.DataRule[]> {\r\n    return await this.http\r\n      .get<DataViewModel.DataRule[]>( this.URL +\r\n        'datarules.mockdata.json'\r\n      )\r\n      .toPromise();\r\n  }\r\n\r\n  /**\r\n   * Getting the list of all Datasource for specific organization\r\n   * @param orgID - ID of organization you want to get all available data source for it\r\n   */\r\n  public async getAllDataSourceForOrganization(\r\n    orgID: string\r\n  ): Promise<DataViewModel.DataSource[]> {\r\n    return await this.http\r\n      .get<DataViewModel.DataSource[]>(this.URL +\r\n        'datasources.mockdata.json'\r\n      )\r\n      .toPromise();\r\n  }\r\n\r\n  /**\r\n   * Create new data rule\r\n   * @param datarule - datarule object\r\n   */\r\n  public async CreateNewDataRule(datarule: DataViewModel.CreateNewDataRule) {\r\n    return await null;\r\n  }\r\n\r\n  /**\r\n   * Edit data rule\r\n   * @param datarule - datarule object\r\n   */\r\n  public async EditDataRule(datarule: DataViewModel.EditDataRule) {\r\n    return await null;\r\n  }\r\n\r\n  /**\r\n   * Delete Data rule\r\n   * @param dataruleID - id of the data rule you want to delete\r\n   */\r\n  public async DeleteDataRule(dataruleID: string) {\r\n    return await null;\r\n  }\r\n}\r\n"],"sourceRoot":""}