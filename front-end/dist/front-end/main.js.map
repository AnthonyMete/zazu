{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/angular-material/angular-material.module.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth/admin-guard.service.ts","webpack:///./src/app/auth/auth.service.ts","webpack:///./src/app/auth/login/login.component.html","webpack:///./src/app/auth/login/login.component.scss","webpack:///./src/app/auth/login/login.component.ts","webpack:///./src/app/shared/services/organization.service.ts","webpack:///./src/app/shared/services/pagination.service.ts","webpack:///./src/app/shared/services/report.service.ts","webpack:///./src/app/shared/services/user.service.ts","webpack:///./src/app/user/user.component.html","webpack:///./src/app/user/user.component.scss","webpack:///./src/app/user/user.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./admin/admin.module\": [\n\t\t\"./src/app/admin/admin.module.ts\",\n\t\t\"admin-admin-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\tvar module = __webpack_require__(ids[0]);\n\t\treturn module;\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { NgModule } from '@angular/core';\r\nimport {\r\n  MatAutocompleteModule,\r\n  MatBadgeModule,\r\n  MatBottomSheetModule,\r\n  MatButtonModule,\r\n  MatButtonToggleModule,\r\n  MatCardModule,\r\n  MatCheckboxModule,\r\n  MatChipsModule,\r\n  MatDatepickerModule,\r\n  MatDialogModule,\r\n  MatDividerModule,\r\n  MatExpansionModule,\r\n  MatGridListModule,\r\n  MatIconModule,\r\n  MatInputModule,\r\n  MatListModule,\r\n  MatMenuModule,\r\n  MatNativeDateModule,\r\n  MatPaginatorModule,\r\n  MatProgressBarModule,\r\n  MatProgressSpinnerModule,\r\n  MatRadioModule,\r\n  MatRippleModule,\r\n  MatSelectModule,\r\n  MatSidenavModule,\r\n  MatSliderModule,\r\n  MatSlideToggleModule,\r\n  MatSnackBarModule,\r\n  MatSortModule,\r\n  MatStepperModule,\r\n  MatTableModule,\r\n  MatTabsModule,\r\n  MatToolbarModule,\r\n  MatTooltipModule,\r\n  MatTreeModule,\r\n} from '@angular/material';\r\n\r\n@NgModule({\r\n  imports: [\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatStepperModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n\r\n\r\n  ],\r\n  exports: [\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatStepperModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n  ]\r\n})\r\nexport class AngularMaterialModule {}\r\n","import { AdminGuard } from './auth/admin-guard.service';\r\nimport { AppComponent } from './app.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { UserComponent } from './user/user.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AppComponent\r\n  },\r\n  {\r\n    path: 'admin',\r\n    loadChildren: './admin/admin.module#AdminModule',\r\n    canActivate: [AdminGuard]\r\n  },\r\n  {\r\n    path: 'user',\r\n    component: UserComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n  providers: []\r\n})\r\nexport class AppRoutingModule {}\r\n","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n\\n\\n\\n<div>\\n  <router-outlet></router-outlet>\\n</div>\\n<div class=\\\"row\\\" style=\\\"width: 50%; padding: 20px; margin: auto;\\\">\\n  <button mat-button routerLink=\\\"admin\\\" >Admin</button>\\n  <button mat-button routerLink=\\\"user\\\" >User</button>\\n</div>\\n\\n\\n\"","module.exports = \"\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'front-end';\n  panelOpenState = false;\n}\n","import { PaginationService } from './shared/services/pagination.service';\r\nimport { AdminGuard } from './auth/admin-guard.service';\r\nimport { AuthService } from './auth/auth.service';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AngularMaterialModule } from './../angular-material/angular-material.module';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { LoginComponent } from './auth/login/login.component';\r\nimport { UserComponent } from './user/user.component';\r\nimport { UserService } from './shared/services/user.service';\r\nimport { ReportService } from './shared/services/report.service';\r\nimport { OrganizationService } from './shared/services/organization.service';\r\n\r\n@NgModule({\r\n  declarations: [AppComponent, LoginComponent, UserComponent],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    AngularMaterialModule,\r\n    AppRoutingModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [\r\n    AuthService,\r\n    AdminGuard,\r\n    UserService,\r\n    ReportService,\r\n    OrganizationService,\r\n    PaginationService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { AuthService } from './auth.service';\r\n\r\n\r\n@Injectable()\r\nexport class AdminGuard implements CanActivate {\r\n  constructor(private authService: AuthService, private route: Router) {}\r\n\r\n  canActivate() {\r\n    if (this.authService.isAuthenticated() && this.authService.isAdmin()) {\r\n      console.log('You are admin, go through!');\r\n      return true;\r\n    }\r\n\r\n    // If Not admin, redirect to another page\r\n    /*\r\n    this.router.navigate([' Maybe Log in? 404? Access not found ? ']);\r\n    */\r\n   console.log('Not an Admin! Begoneeeee');\r\n    return false;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n@Injectable()\r\nexport class AuthService {\r\n  ADMIN = 'ADMIN';\r\n  VIEWACCESS = 'VIEWACCESS';\r\n\r\n  user = {\r\n    name: 'John Doe',\r\n    role: this.ADMIN\r\n  };\r\n\r\n  constructor() {}\r\n\r\n  public isAuthenticated(): boolean {\r\n    return true;\r\n  }\r\n\r\n  public isAdmin() {\r\n    return this.ADMIN === this.user.role;\r\n  }\r\n}\r\n","module.exports = \"<p>\\n  login works!\\n</p>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(private authService: AuthService, private router: Router) { }\n\n  ngOnInit() {\n    if (this.authService.isAuthenticated() && this.authService.isAdmin()) {\n      this.router.navigate(['/admin']);\n    }\n  }\n\n}\n","import { OrganizationDetails } from './../view-models/organization.viewmodel';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport * as OrganizationViewModel from '../view-models/organization.viewmodel';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OrganizationService {\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n\r\n  public async getAllOrganizationsWithNoDetails(): Promise<OrganizationViewModel.SimpleOrganization[]> {\r\n    return await ((this.http.get<OrganizationViewModel.OrganizationDetails[]>('../../../assets/example-data/organizations.mockdata.json')).toPromise());\r\n  }\r\n\r\n\r\n  /**\r\n   * Method for getting all of the organizations\r\n   */\r\n  public async getAllOrganizations(): Promise<OrganizationViewModel.OrganizationDetails[]> {\r\n    return await ((this.http.get<OrganizationViewModel.OrganizationDetails[]>('../../../assets/example-data/organizations.mockdata.json')).toPromise());\r\n  }\r\n\r\n  /**\r\n   *  Method for getting Organization object with ID\r\n   */\r\n  public async getOrganizationById(id): Promise<OrganizationViewModel.OrganizationDetails> {\r\n    return await  await ((this.http.get<OrganizationViewModel.OrganizationDetails>('../../../assets/example-data/single-organization.mockup.json')).toPromise());\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\nexport interface Pagination {\n  currentPage: number;\n  itemsPerPage:  number;\n  totalPages: number;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PaginationService {\n\n  constructor() { }\n\n  paginationChanged = new Subject <Pagination>();\n\n pagination: Pagination = {\n    currentPage: 1,\n    itemsPerPage: 3,\n    totalPages: 1\n  };\n\n  public getPagination() {\n    this.paginationChanged.next(this.pagination);\n  }\n\n  public changePage(currentPage: number) {\n    this.pagination.currentPage = currentPage;\n    this.paginationChanged.next(this.pagination);\n  }\n\n  public changeTotalPages(totalPages: number) {\n    this.pagination.totalPages = totalPages;\n    this.paginationChanged.next(this.pagination);\n  }\n\n  public resetPage() {\n    this.pagination.currentPage = 1;\n    this.paginationChanged.next(this.pagination);\n  }\n\n\n\n\n\n}\n","import { ReportWithMetaData } from './../view-models/report.viewmodel';\r\nimport { Injectable } from '@angular/core';\r\nimport * as ReportViewModel from '../view-models/report.viewmodel';\r\nimport { HttpClient } from '@angular/common/http';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ReportService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n\r\n  /**\r\n   * Gets all the reports for all organizations\r\n   */\r\n  public async getAllReports(): Promise<ReportViewModel.SimpleReport[]> {\r\n  return await (this.http.get<ReportViewModel.SimpleReport[]>('../../../assets/example-data/reports.mockdata.json')).toPromise();\r\n  }\r\n\r\n  /**\r\n   * Gets all the details(with meta data) for a specific report\r\n   * @param id - ID of the specific reprot\r\n   */\r\n  public async getReport(id): Promise<ReportViewModel.ReportWithMetaData> {\r\n    return await (this.http.get<ReportViewModel.ReportWithMetaData>('../../../assets/example-data/single-report-with-meta.mockdata.json')).toPromise();\r\n  }\r\n\r\n /**\r\n   *  Gets the reports for a specific organization. Can be more than one\r\n   * @param orgIDs ID of a specific organization\r\n   */\r\n  public async getReportByOrganization(orgIDs: string): Promise<ReportViewModel.SimpleReport[]> {\r\n    return await (this.http.get<ReportViewModel.SimpleReport[]>('../../../assets/example-data/reports.mockdata.json')).toPromise();\r\n  }\r\n\r\n\r\n  /**\r\n   *  Gets the reports for organization(s). Can be more than one\r\n   * @param orgIDs Array of the Organization IDs\r\n   */\r\n  public async getReportByOrganizations(orgIDs: string[]): Promise<ReportViewModel.SimpleReport[]> {\r\n    return await (this.http.get<ReportViewModel.SimpleReport[]>('../../../assets/example-data/reports.mockdata.json')).toPromise();\r\n  }\r\n\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport {\r\n  Injectable\r\n} from '@angular/core';\r\nimport * as UserViewModel from '../view-models/user.viewmodel';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  constructor(private http: HttpClient) {}\r\n  VIEWACCESS = 'VIEWACCESS';\r\n  ADMIN = 'ADMIN';\r\n\r\n  // Method for getting all users\r\n  public async getAllUsers(): Promise<UserViewModel.SimpleUserView[]> {\r\n    console.log('getting all users');\r\n    return await ((this.http.get<UserViewModel.SimpleUserView[]>('../../../assets/example-data/user-list.mockdata.json')).toPromise());\r\n  }\r\n\r\n  // Getting user with Id\r\n  public async getUser(id): Promise<UserViewModel.User> {\r\n    return await ((this.http.get<UserViewModel.User>('../../../assets/example-data/single-user.mockdata.json')).toPromise());\r\n  }\r\n\r\n  // Filtering users by organization\r\n  public async getUsersByOrganization(orgId): Promise<UserViewModel.SimpleUserView[]> {\r\n    return await ((this.http.get<UserViewModel.SimpleUserView[]>('../../../assets/example-data/user-list.mockdata.json')).toPromise());\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"<p>\\n  user works!\\n</p>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.scss']\n})\nexport class UserComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}