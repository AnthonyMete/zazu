{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/angular-material/angular-material.module.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth/admin-guard.service.ts","webpack:///./src/app/auth/auth.service.ts","webpack:///./src/app/auth/login/login.component.html","webpack:///./src/app/auth/login/login.component.scss","webpack:///./src/app/auth/login/login.component.ts","webpack:///./src/app/shared/pipes/report-list.pipe.ts","webpack:///./src/app/shared/services/organization.service.ts","webpack:///./src/app/shared/services/pagination.service.ts","webpack:///./src/app/shared/services/report.service.ts","webpack:///./src/app/shared/services/user.service.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/app/viewer/viewer-report-list/viewer-report-list.component.html","webpack:///./src/app/viewer/viewer-report-list/viewer-report-list.component.scss","webpack:///./src/app/viewer/viewer-report-list/viewer-report-list.component.ts","webpack:///./src/app/viewer/viewer-report/viewer-report.component.html","webpack:///./src/app/viewer/viewer-report/viewer-report.component.scss","webpack:///./src/app/viewer/viewer-report/viewer-report.component.ts","webpack:///./src/app/viewer/viewer.component.html","webpack:///./src/app/viewer/viewer.component.scss","webpack:///./src/app/viewer/viewer.component.ts","webpack:///./src/app/viewer/viewer.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./admin/admin.module\": [\n\t\t\"./src/app/admin/admin.module.ts\",\n\t\t\"admin-admin-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\tvar module = __webpack_require__(ids[0]);\n\t\treturn module;\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { NgModule } from '@angular/core';\r\nimport {\r\n  MatAutocompleteModule,\r\n  MatBadgeModule,\r\n  MatBottomSheetModule,\r\n  MatButtonModule,\r\n  MatButtonToggleModule,\r\n  MatCardModule,\r\n  MatCheckboxModule,\r\n  MatChipsModule,\r\n  MatDatepickerModule,\r\n  MatDialogModule,\r\n  MatDividerModule,\r\n  MatExpansionModule,\r\n  MatGridListModule,\r\n  MatIconModule,\r\n  MatInputModule,\r\n  MatListModule,\r\n  MatMenuModule,\r\n  MatNativeDateModule,\r\n  MatPaginatorModule,\r\n  MatProgressBarModule,\r\n  MatProgressSpinnerModule,\r\n  MatRadioModule,\r\n  MatRippleModule,\r\n  MatSelectModule,\r\n  MatSidenavModule,\r\n  MatSliderModule,\r\n  MatSlideToggleModule,\r\n  MatSnackBarModule,\r\n  MatSortModule,\r\n  MatStepperModule,\r\n  MatTableModule,\r\n  MatTabsModule,\r\n  MatToolbarModule,\r\n  MatTooltipModule,\r\n  MatTreeModule,\r\n} from '@angular/material';\r\n\r\n@NgModule({\r\n  imports: [\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatStepperModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n\r\n\r\n  ],\r\n  exports: [\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatStepperModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n  ]\r\n})\r\nexport class AngularMaterialModule {}\r\n","import { AdminGuard } from './auth/admin-guard.service';\r\nimport { AppComponent } from './app.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LoginComponent } from './auth/login/login.component';\r\nimport { ViewerComponent } from './viewer/viewer.component';\r\nimport { listener } from '@angular/core/src/render3/instructions';\r\nimport { ViewerReportListComponent } from './viewer/viewer-report-list/viewer-report-list.component';\r\nimport { ViewerReportComponent } from './viewer/viewer-report/viewer-report.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AppComponent,\r\n    children: [\r\n      {\r\n        path: '',\r\n        redirectTo: 'login',\r\n        pathMatch: 'full'\r\n      },\r\n      {\r\n        path: 'login',\r\n        component: LoginComponent\r\n      },\r\n      {\r\n        path: 'admin',\r\n        loadChildren: './admin/admin.module#AdminModule',\r\n        canActivate: [AdminGuard]\r\n      },\r\n      {\r\n        path: 'user',\r\n        component: ViewerComponent,\r\n        children: [\r\n          { path: '', redirectTo: 'list', pathMatch: 'full'},\r\n          { path: 'list', component: ViewerReportListComponent},\r\n          { path: ':reportID', component: ViewerReportComponent}\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n  providers: []\r\n})\r\nexport class AppRoutingModule {}\r\n","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n\\n\\n\\n<div>\\n  <router-outlet></router-outlet>\\n</div>\\n\\n\\n\\n\"","module.exports = \"\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'front-end';\n  panelOpenState = false;\n}\n","import { PaginationService } from './shared/services/pagination.service';\r\nimport { AdminGuard } from './auth/admin-guard.service';\r\nimport { AuthService } from './auth/auth.service';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AngularMaterialModule } from './../angular-material/angular-material.module';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { LoginComponent } from './auth/login/login.component';\r\nimport { UserService } from './shared/services/user.service';\r\nimport { ReportService } from './shared/services/report.service';\r\nimport { OrganizationService } from './shared/services/organization.service';\r\nimport { ViewerComponent } from './viewer/viewer.component';\r\nimport { ViewerReportListComponent } from './viewer/viewer-report-list/viewer-report-list.component';\r\nimport { ViewerReportComponent } from './viewer/viewer-report/viewer-report.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { ReportListPipe } from './shared/pipes/report-list.pipe';\r\nimport { SharedModule } from './shared/shared.module';\r\n\r\n@NgModule({\r\n  declarations: [AppComponent, LoginComponent,  ViewerComponent, ViewerReportListComponent, ViewerReportComponent],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    AngularMaterialModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SharedModule\r\n  ],\r\n  providers: [\r\n    AuthService,\r\n    AdminGuard,\r\n    UserService,\r\n    ReportService,\r\n    OrganizationService,\r\n    PaginationService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { AuthService } from './auth.service';\r\n\r\n\r\n@Injectable()\r\nexport class AdminGuard implements CanActivate {\r\n  constructor(private authService: AuthService, private route: Router) {}\r\n\r\n  canActivate() {\r\n    if (this.authService.isAuthenticated() && this.authService.isAdmin()) {\r\n      console.log('You are admin, go through!');\r\n      return true;\r\n    }\r\n\r\n    // If Not admin, redirect to another page\r\n    /*\r\n    this.router.navigate([' Maybe Log in? 404? Access not found ? ']);\r\n    */\r\n   console.log('Not an Admin! Begoneeeee');\r\n    return false;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n@Injectable()\r\nexport class AuthService {\r\n  ADMIN = 'ADMIN';\r\n  VIEWACCESS = 'VIEWACCESS';\r\n\r\n  user = {\r\n    name: 'John Doe',\r\n    role: this.ADMIN\r\n  };\r\n\r\n  constructor() {}\r\n\r\n  public isAuthenticated(): boolean {\r\n    return true;\r\n  }\r\n\r\n  public isAdmin() {\r\n    return this.ADMIN === this.user.role;\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"row\\\" style=\\\"width: 50%; padding: 20px; margin: auto;\\\">\\n    <button mat-button routerLink=\\\"../admin\\\" >Admin</button>\\n    <button mat-button routerLink=\\\"../user\\\" >Viewer</button>\\n  </div>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(private authService: AuthService, private router: Router) { }\n\n  ngOnInit() {\n    /*\n    if (this.authService.isAuthenticated() && this.authService.isAdmin()) {\n      this.router.navigate(['/admin']);\n    }\n    */\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { PaginationService } from '../services/pagination.service';\r\n@Pipe({\r\n  name: 'reportList'\r\n})\r\nexport class ReportListPipe implements PipeTransform {\r\n  constructor(private paginationService: PaginationService) {}\r\n  transform(\r\n    reportList: any[],\r\n    searchName: string,\r\n    organization: string,\r\n    sort: string,\r\n    page: number\r\n  ): any {\r\n    let currentList = reportList;\r\n    // If there's a reportList\r\n    if (reportList) {\r\n      // If there's a search\r\n      if (searchName) {\r\n        searchName = searchName.toLowerCase();\r\n        currentList = currentList.filter(\r\n          (el: any) => el.name.toLowerCase().indexOf(searchName) > -1\r\n        );\r\n      }\r\n\r\n      // if there's a organization\r\n      if (organization) {\r\n        if (organization !== 'All') {\r\n          currentList = currentList.filter(\r\n            element => element.organization.id === organization\r\n          );\r\n        }\r\n      }\r\n      // if there's a sort\r\n      if (sort) {\r\n        if (sort === 'Alphabetical') {\r\n          const sorted = currentList.sort(\r\n            (a, b) => (a.name > b.name ? 1 : a.name === b.name ? 0 : -1)\r\n          );\r\n          if (sort.charAt(0) === '-') {\r\n            sorted.reverse();\r\n          }\r\n          currentList = sorted;\r\n        }\r\n        if (sort === 'Latest') {\r\n          const sorted = currentList.sort(\r\n            (a, b) =>\r\n              new Date(a.date) < new Date(b.date)\r\n                ? 1\r\n                : new Date(a.date) === new Date(b.date)\r\n                  ? 0\r\n                  : -1\r\n          );\r\n          currentList = sorted;\r\n        }\r\n      }\r\n      this.paginationService.changeTotalPages(\r\n        Math.ceil(\r\n          currentList.length / this.paginationService.pagination.itemsPerPage\r\n        )\r\n      );\r\n\r\n      return currentList.slice(\r\n        this.paginationService.pagination.currentPage *\r\n          this.paginationService.pagination.itemsPerPage -\r\n          this.paginationService.pagination.itemsPerPage,\r\n        this.paginationService.pagination.itemsPerPage *\r\n          this.paginationService.pagination.currentPage\r\n      );\r\n    }\r\n\r\n    return currentList;\r\n  }\r\n}\r\n","import { OrganizationDetails } from './../view-models/organization.viewmodel';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport * as OrganizationViewModel from '../view-models/organization.viewmodel';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OrganizationService {\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  URL = '../../../assets/example-data/';\r\n\r\n  /**\r\n   *  Method for getting all organizations with just name and ID\r\n   *  Primarily used in filters and breadcrumbs\r\n   */\r\n  public async getAllOrganizationsWithNoDetails(): Promise<OrganizationViewModel.SimpleOrganization[]> {\r\n    return await ((this.http.get<OrganizationViewModel.OrganizationDetails[]>( this.URL + 'organizations.mockdata.json')).toPromise());\r\n  }\r\n\r\n\r\n  /**\r\n   * Method for getting all of the organizations with all the details\r\n   */\r\n  public async getAllOrganizations(): Promise<OrganizationViewModel.OrganizationDetails[]> {\r\n    return await ((this.http.get<OrganizationViewModel.OrganizationDetails[]>( this.URL + 'organizations.mockdata.json')).toPromise());\r\n  }\r\n\r\n /**\r\n  * Method for getting details of a specific organization\r\n  * @param id - ID of the organization\r\n  */\r\n  public async getOrganizationById(id): Promise<OrganizationViewModel.OrganizationDetails> {\r\n    return await  await ((this.http.get<OrganizationViewModel.OrganizationDetails>( this.URL + 'single-organization.mockup.json')).toPromise());\r\n  }\r\n\r\n  /**\r\n   * Method for getting all current directory\r\n   */\r\n  public async getAllCategories(): Promise<string[]> {\r\n    const categories = [];\r\n    const orgs = await this.getAllOrganizations();\r\n    orgs.forEach(org => {\r\n      org.categories.forEach(category => {\r\n        if (!categories.includes(category)) {\r\n          categories.push(category);\r\n        }\r\n      });\r\n    });\r\n    return categories;\r\n  }\r\n\r\n  /**\r\n   * Method for creating new orgnization\r\n   * @param organization - organization object\r\n   */\r\n  public async CreateNewOrganization(organization: OrganizationViewModel.CreateNewOrganization) {\r\n    console.log('Organization Created');\r\n    console.log(organization);\r\n    return await null;\r\n  }\r\n\r\n  /**\r\n   * Method for editing organization\r\n   * @param organization - organiztion object\r\n   */\r\n  public async EditOrganization(organization: OrganizationViewModel.EditOrganization) {\r\n    console.log('Organization Edit: ');\r\n    console.log(organization);\r\n    return await null;\r\n  }\r\n\r\n  /**\r\n   * Method for deleting organization\r\n   * @param organizationID - ID of the organization you want to delete\r\n   */\r\n  public async DeleteOrganization(organizationID: string) {\r\n    console.log('Organization Delete: ' + organizationID);\r\n    return await null;\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\nexport interface Pagination {\r\n  currentPage: number;\r\n  itemsPerPage:  number;\r\n  totalPages: number;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\n/**\r\n * This is a service used for paginating the list\r\n */\r\nexport class PaginationService {\r\n\r\n  constructor() { }\r\n\r\n  paginationChanged = new Subject <Pagination>();\r\n\r\n  // Max number of items in list per page\r\n  // Edit this to show more items in list\r\n  ITEMS_PER_PAGE = 5;\r\n\r\n  pagination: Pagination = {\r\n    currentPage: 1,\r\n    itemsPerPage: this.ITEMS_PER_PAGE,\r\n    totalPages: 1\r\n  };\r\n\r\n  public getPagination() {\r\n    this.paginationChanged.next(this.pagination);\r\n  }\r\n\r\n  public changePage(currentPage: number) {\r\n    this.pagination.currentPage = currentPage;\r\n    this.paginationChanged.next(this.pagination);\r\n  }\r\n\r\n  public changeTotalPages(totalPages: number) {\r\n    this.pagination.totalPages = totalPages;\r\n    this.paginationChanged.next(this.pagination);\r\n  }\r\n\r\n  public resetPage() {\r\n    this.pagination.currentPage = 1;\r\n    this.paginationChanged.next(this.pagination);\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport * as ReportViewModel from '../view-models/report.viewmodel';\r\nimport { HttpClient } from '@angular/common/http';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ReportService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n  URL = '../../../assets/example-data/';\r\n\r\n  /**\r\n   * Gets all the reports for all organizations\r\n   */\r\n  public async getAllReports(): Promise<ReportViewModel.SimpleReport[]> {\r\n  return await (this.http.get<ReportViewModel.SimpleReport[]>( this.URL + 'reports.mockdata.json')).toPromise();\r\n  }\r\n\r\n  /**\r\n   * Gets all the details(with meta data) for a specific report\r\n   * @param id - ID of the specific reprot\r\n   */\r\n  public async getReport(id): Promise<ReportViewModel.ReportWithMetaData> {\r\n    return await (this.http.get<ReportViewModel.ReportWithMetaData>( this.URL + 'single-report-with-meta.mockdata.json')).toPromise();\r\n  }\r\n\r\n\r\n  /**\r\n   * Gets a specific report with no metadata\r\n   * @param id - ID of the specific reprot\r\n   */\r\n  public async getReportNoMetaData(id): Promise<ReportViewModel.ReportWithMetaData> {\r\n    return await (this.http.get<ReportViewModel.ReportWithMetaData>( this.URL + 'single-report-with-meta.mockdata.json')).toPromise();\r\n  }\r\n\r\n /**\r\n   *  Gets the reports for a specific organization. Can be more than one\r\n   * @param orgIDs ID of a specific organization\r\n   */\r\n  public async getReportByOrganization(orgIDs: string): Promise<ReportViewModel.SimpleReport[]> {\r\n    return await (this.http.get<ReportViewModel.SimpleReport[]>( this.URL + 'reports.mockdata.json')).toPromise();\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Get all reports for this user\r\n   */\r\n  public async getReportByUser(userID: string): Promise<ReportViewModel.SimpleReport[]> {\r\n    return await (this.http.get<ReportViewModel.SimpleReport[]>( this.URL + 'reports.mockdata.json')).toPromise();\r\n  }\r\n\r\n\r\n  /**\r\n   *  Gets the reports for organization(s). Can be more than one\r\n   * @param orgIDs Array of the Organization IDs\r\n   */\r\n  public async getReportByOrganizations(orgIDs: string[]): Promise<ReportViewModel.SimpleReport[]> {\r\n    return await (this.http.get<ReportViewModel.SimpleReport[]>( this.URL + 'reports.mockdata.json')).toPromise();\r\n  }\r\n\r\n  /**\r\n   * Create new Report\r\n   * @param report - report object\r\n   */\r\n  public async CreateNewReport(report: ReportViewModel.Report) {\r\n    return await null;\r\n  }\r\n\r\n  /**\r\n   * Editing Report\r\n   * @param report - report object\r\n   */\r\n  public async EditReport(report: ReportViewModel.EditReport) {\r\n    return await null;\r\n  }\r\n\r\n  /**\r\n   * Delete Report\r\n   * @param reportID - ID of the report you want to delete\r\n   */\r\n  public async deleteReport(reportID: string) {\r\n    console.log('Report Deleted: ' + reportID);\r\n    return await null;\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport {\r\n  Injectable\r\n} from '@angular/core';\r\nimport * as UserViewModel from '../view-models/user.viewmodel';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  constructor(private http: HttpClient) {}\r\n  VIEWACCESS = 'VIEWACCESS';\r\n  ADMIN = 'ADMIN';\r\n  URL = '../../../assets/example-data/';\r\n\r\n  /**\r\n   *  Method for getting all users for all organizations\r\n   */\r\n  public async getAllUsers(): Promise<UserViewModel.SimpleUserView[]> {\r\n    console.log('getting all users');\r\n    return await ((this.http.get<UserViewModel.SimpleUserView[]>( this.URL + 'user-list.mockdata.json')).toPromise());\r\n  }\r\n\r\n  /**\r\n   * Getting specific user using user ID\r\n   * @param id - id of the user you want to get information\r\n   */\r\n  public async getUser(id): Promise<UserViewModel.User> {\r\n    return await ((this.http.get<UserViewModel.User>( this.URL +  'single-user.mockdata.json')).toPromise());\r\n  }\r\n\r\n  /**\r\n   * Getting all user for specific organization\r\n   * @param orgId -  ID of the organization you want to get all users\r\n   */\r\n  public async getUsersByOrganization(orgId): Promise<UserViewModel.SimpleUserView[]> {\r\n    return await ((this.http.get<UserViewModel.SimpleUserView[]>(this.URL + 'user-list.mockdata.json')).toPromise());\r\n  }\r\n\r\n  /**\r\n   * Create new user\r\n   * @param user - user object for creating new user\r\n   */\r\n  public async createNewUser(user: UserViewModel.CreateNewUser) {\r\n    return await null;\r\n  }\r\n\r\n  /**\r\n   * Edit user\r\n   * @param user - user object for editing user\r\n   */\r\n  public async editUser(user: UserViewModel.EditUser) {\r\n    return await null;\r\n  }\r\n\r\n  /**\r\n   * Delete user\r\n   * @param userID - ID of the user you want to delete\r\n   */\r\n  public async deleteUser(userID: string) {\r\n    console.log('User Deleted: ' + userID);\r\n    return await null;\r\n  }\r\n}\r\n","import { ReportListPipe } from './pipes/report-list.pipe';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n  ],\r\n  declarations: [ReportListPipe],\r\n  exports: [\r\n    ReportListPipe\r\n  ]\r\n})\r\n\r\nexport class SharedModule {}\r\n","module.exports = \"<div class=\\\"breadcrumb-container\\\">\\n  <div class=\\\"breadcrumb\\\"> <span class=\\\"active\\\"><i class=\\\"material-icons\\\">\\n        assessment </i> Report List</span></div>\\n</div>\\n<div class=\\\"main-content-view\\\">\\n  <div class=\\\"left-main-content-view\\\" *ngIf=\\\"initialized\\\">\\n      <h2 *ngIf=\\\"selectedOrganization && organizations.length > 1\\\" style=\\\"width: 100%\\\" ><span *ngIf=\\\"selectedOrganization !== 'All'\\\">{{selectedOrgName.name}}</span><span\\n        *ngIf=\\\"selectedOrganization === 'All'\\\"> All Organizations</span> </h2>\\n    <div *ngIf=\\\"reports != null \\\">\\n      <div class=\\\"list\\\">\\n        <div *ngFor=\\\"let report of reports | reportList: searchName: selectedOrganization : sortValue :  pagination.currentPage\\\" class=\\\"card\\\">\\n          <div class=\\\"container\\\" (click)=\\\"reportClicked(report.id)\\\">\\n            <h4 class=\\\"title\\\"><strong> {{report.name}}</strong></h4>\\n            <p class=\\\"secondary\\\">{{report.organization.name}}</p>\\n            <p class=\\\"content\\\"> {{report.date | date}} </p>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <p class=\\\"pagination\\\" *ngIf=\\\"this.pagination\\\" style=\\\"text-align: center\\\"> <button mat-mini-fab (click)=\\\"previousPage()\\\" color=\\\"white\\\"\\n        [disabled]=\\\"pagination.currentPage===1\\\"> <i class=\\\"material-icons\\\">\\n          chevron_left\\n        </i> </button>\\n      {{this.pagination.currentPage}}/{{this.pagination.totalPages}} <button mat-mini-fab active (click)=\\\"nextPage() \\\" [disabled]=\\\"pagination.currentPage === pagination.totalPages\\\"\\n        color=\\\"white\\\"> <i class=\\\"material-icons\\\">\\n          chevron_right\\n        </i> </button>\\n    </p>\\n\\n  </div>\\n\\n  <div class=\\\"right-main-content-view\\\" *ngIf=\\\"initialized\\\">\\n    <div class=\\\"filter\\\">\\n      <form [formGroup]=\\\"filterForm\\\" (ngSubmit)=\\\"onSearch()\\\">\\n        <button class=\\\"reset\\\" mat-stroked-button (click)=\\\"searchFormReset()\\\">RESET</button>\\n        <p class=\\\"title\\\"> Filter by</p>\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"search\\\">\\n          <mat-label class=\\\"label-color\\\">Name</mat-label>\\n          <input matInput type=\\\"text\\\" placeholder=\\\"Search Name\\\" formControlName=\\\"name\\\">\\n        </mat-form-field>\\n        <p class=\\\"title\\\" *ngIf=\\\"organizations.length > 1\\\"> Organization</p>\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"select\\\" *ngIf=\\\"organizations.length > 1\\\">\\n          <mat-select formControlName=\\\"selectedOrganization\\\">\\n            <mat-option value=\\\"All\\\">All</mat-option>\\n            <mat-option *ngFor=\\\"let organization of organizations\\\" value=\\\"{{organization.id}}\\\">{{organization.name}}</mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n        <br>\\n        <button mat-raised-button class=\\\"search\\\" type=\\\"submit\\\">Search</button>\\n      </form>\\n    </div>\\n    <div class=\\\"sort\\\">\\n      <p class=\\\"title\\\"> Sort By</p>\\n      <mat-radio-group class=\\\"example-radio-group\\\" [(ngModel)]=\\\"sortValue\\\">\\n        <mat-radio-button *ngFor=\\\"let sort of sorts\\\" value=\\\"{{sort}}\\\" (click)=\\\"changeSort(sort)\\\" class=\\\"radio\\\">\\n          {{sort}}\\n        </mat-radio-button>\\n      </mat-radio-group>\\n    </div>\\n  </div>\\n\\n\\n\\n  <div *ngIf=\\\"!initialized\\\" style=\\\"margin:auto; padding-top: 50px;\\\">\\n    <mat-spinner></mat-spinner>\\n    <p style=\\\"text-align: center;\\\">Loading...</p>\\n  </div>\\n</div>\\n\"","module.exports = \"\"","import { PaginationService } from './../../shared/services/pagination.service';\nimport { ViewerService } from './../viewer.service';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport * as ReportViewModel from '../../shared/view-models/report.viewmodel';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport * as OrganizationViewModel from '../../shared/view-models/organization.viewmodel';\n\n@Component({\n  selector: 'app-viewer-report-list',\n  templateUrl: './viewer-report-list.component.html',\n  styleUrls: ['./viewer-report-list.component.scss']\n})\nexport class ViewerReportListComponent implements OnInit, OnDestroy {\n  constructor(private viewerService: ViewerService, private router: Router,  private paginationService: PaginationService, private route: ActivatedRoute) {}\n  reports: ReportViewModel.SimpleReport[];\n  organizations = [];\n  initialized = false;\n  filterForm = new FormGroup({\n    name: new FormControl('')\n  });\n  sub: any;\n  pageSubscription: Subscription;\n  selectedOrganization = 'All';\n  sorts = ['Latest', 'Alphabetical'];\n  sortValue = this.sorts[0];\n  organizationID;\n  searchName;\n  pagination;\n  selectedOrgName;\n  async ngOnInit() {\n    try {\n      this.paginationService.resetPage();\n      this.pageSubscription = this.paginationService.paginationChanged.subscribe(\n        pagination => {\n          this.pagination = pagination;\n        }\n      );\n      this.paginationService.getPagination();\n      this.reports = await this.viewerService.getReports();\n      if (this.reports.length === 1) {\n        // navigate to just report view\n      }\n      const temp = [];\n      for (const report of this.reports) {\n        if (this.organizations.filter(e => e.id === report.organization.id).length === 0) {\n          this.organizations.push(report.organization);\n        }\n       console.log(this.organizations);\n      }\n      if (this.organizations.length === 1) {\n        // Only One Organization\n      } else {\n        this.filterForm.addControl(\n          'selectedOrganization',\n          new FormControl('All')\n        );\n      }\n      this.initialized = true;\n\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  initializeOrg() {\n\n  }\n\n  reportClicked(reportID: string) {\n      this.router.navigate(['../', reportID], { relativeTo: this.route });\n  }\n\n  changeSort(sort) {\n    this.paginationService.resetPage();\n    this.sortValue = sort;\n  }\n\n  onSearch() {\n    this.paginationService.resetPage();\n    const temp = this.filterForm.value;\n    this.searchName = temp.name;\n    this.selectedOrganization = temp.selectedOrganization;\n    this.selectedOrgName = this.organizations.find(org => {\n      return org.id === temp.selectedOrganization;\n    });\n    console.log(temp.selectedOrganization);\n  }\n\n  searchFormReset() {\n    this.filterForm.reset();\n    this.filterForm.patchValue({ selectedOrganization: 'All' });\n    this.paginationService.resetPage();\n  }\n\n  // Pagination Methods\n  nextPage() {\n    if (this.pagination.currentPage < this.pagination.totalPages) {\n      this.paginationService.changePage(this.pagination.currentPage + 1);\n    }\n  }\n  // Pagination Methods\n  previousPage() {\n    if (this.pagination.currentPage > 1) {\n      this.paginationService.changePage(this.pagination.currentPage - 1);\n    }\n  }\n\n  ngOnDestroy() {\n    this.pageSubscription.unsubscribe();\n  }\n}\n","module.exports = \"<div class=\\\"breadcrumb-container\\\">\\n  <!-- Breadcrumbs for report when navigation from report list -->\\n  <div class=\\\"breadcrumb\\\"> <span routerLink=\\\"../list\\\"> <i class=\\\"material-icons\\\">\\n        assessment </i> Report List </span>\\n    &nbsp;&nbsp; <i class=\\\"material-icons arrow\\\"> keyboard_arrow_right </i> <i style=\\\"margin-left: -14px\\\" class=\\\"material-icons arrow\\\">\\n      keyboard_arrow_right </i>&nbsp;&nbsp; <span class=\\\"active\\\"> {{report.name}} ({{report.organization.name}})</span> </div>\\n</div>\\n\\n\\n<div class=\\\"main-content-view\\\">\\n  <div class=\\\"left-main-content-view\\\">\\n    <iframe class=\\\"report\\\" src=\\\"https://datastudio.google.com/embed/reporting/1XuwM0G2Rx55jEWX_Rus05td2IHN0PnQI/page/1M\\\" frameborder=\\\"0\\\"\\n      style=\\\"border:0\\\" allowfullscreen></iframe>\\n  </div>\\n  <div class=\\\"right-main-content-view\\\">\\n    <div class=\\\"filter information\\\">\\n      <div class=\\\"more-button\\\" style=\\\"margin-top: -10px\\\">\\n        <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\">\\n          <mat-icon color=\\\"more-color\\\">more_vert</mat-icon>\\n        </button>\\n        <mat-menu #menu=\\\"matMenu\\\">\\n          <button mat-menu-item routerLink=\\\"./edit-report\\\">Edit</button>\\n          <button mat-menu-item (click)=\\\"openDialog()\\\">Delete</button>\\n        </mat-menu>\\n      </div>\\n      <h4 class=\\\"info-title\\\"> Report Information</h4>\\n      <p> Name: <span class=\\\"info\\\">{{report.name}} </span></p>\\n      <p>Organization: <span class=\\\"info\\\">{{report.organization.name}} </span></p>\\n      <p>Date: <span class=\\\"info\\\"> {{report.date | date }}</span> </p>\\n      <p>Datastudio Link: <span class=\\\"info\\\"> {{report.link}}</span></p>\\n      <p>Datasources: </p>\\n      <div *ngFor=\\\"let datasource of report.datasources; let i = index\\\">\\n        <p>&nbsp;&nbsp;&nbsp;&bull;<span class=\\\"info\\\"> {{datasource.name}} </span> </p>\\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\\n\"","module.exports = \".report {\\n  width: 100%;\\n  height: calc(100vh - 150px);\\n  background-color: white; }\\n\\n.information .info-title, .metadata .info-title {\\n  margin: 0;\\n  margin-bottom: 10px;\\n  font-weight: 500;\\n  color: initial; }\\n\\n.information p, .metadata p {\\n  font-size: 15px;\\n  margin: 2px 0;\\n  font-weight: 400;\\n  color: #979797; }\\n\\n.information p .info, .metadata p .info {\\n    color: #4a4a4a;\\n    font-weight: 500; }\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ReportService } from 'src/app/shared/services/report.service';\nimport { ActivatedRoute } from '@angular/router';\nimport * as ReportViewModel from '../../shared/view-models/report.viewmodel';\n\n@Component({\n  selector: 'app-viewer-report',\n  templateUrl: './viewer-report.component.html',\n  styleUrls: ['./viewer-report.component.scss']\n})\nexport class ViewerReportComponent implements OnInit, OnDestroy {\n  constructor(\n    private reportService: ReportService,\n    private route: ActivatedRoute\n  ) {}\n\n  sub: any;\n  reportID;\n  report: ReportViewModel.Report;\n  async ngOnInit() {\n    this.sub = this.route.params.subscribe(params => {\n      this.reportID = params['reportID'];\n    });\n    this.report = await this.reportService.getReport('reportID');\n\n  }\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n}\n","module.exports = \"<mat-toolbar class=\\\"toolbar\\\">\\n  <div class=\\\"company\\\">\\n    <div class=\\\"icon-container\\\">\\n      <div class=\\\"icon\\\">\\n        <img src=\\\"../../assets/company-icon.png\\\" alt=\\\"Smiley face\\\">\\n      </div>\\n    </div>\\n    <span class=\\\"name\\\"> Company </span>\\n  </div>\\n</mat-toolbar>\\n\\n<div class=\\\"viewer-container\\\">\\n\\n  <div class=\\\"viewer-content\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\\n\"","module.exports = \"/* Tool bar top colour */\\n/* Main content colour */\\n/*************** SIDE NAVIGATION VARIABLES *******************/\\n/* Side nav color */\\n/********* ORGANIZATION DETAILS VARIABLES **********/\\n/*********** LIST CARD VARIABLES  ***********/\\n/********* BREADCRUMBS STYLING ******/\\n/******* FORMS STYLING & FILTERS ******/\\n/***** Filter Card ***/\\n/****** Buttons Colors  **/\\n.toolbar {\\n  background-color: #616161;\\n  color: white;\\n  z-index: 20;\\n  position: fixed; }\\n.toolbar .menu-icon {\\n    min-width: unset;\\n    padding: 0; }\\n.toolbar .menu-icon i {\\n      font-size: 2.5em; }\\n.company {\\n  height: 64px; }\\n.company .icon-container {\\n    height: 64px;\\n    width: 64px;\\n    position: relative; }\\n.company .icon-container img {\\n      height: 45px;\\n      width: 45px;\\n      position: absolute;\\n      right: 0;\\n      left: -30px;\\n      top: 0;\\n      bottom: 5px;\\n      margin: auto auto; }\\n.company .name {\\n    position: absolute;\\n    top: 15px;\\n    font-size: 25px;\\n    font-weight: bold;\\n    color: white;\\n    left: 65px; }\\n.viewer-container {\\n  background-color: #f5f5f5;\\n  min-height: calc(100vh - 64px);\\n  padding-top: 64px;\\n  height: auto; }\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-viewer',\n  templateUrl: './viewer.component.html',\n  styleUrls: ['./viewer.component.scss']\n})\nexport class ViewerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport * as ReportViewModel from '../shared/view-models/report.viewmodel';\nimport { ReportService } from '../shared/services/report.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ViewerService {\n\n  constructor(private http: HttpClient, private reportService: ReportService) { }\n  userID: string;\n\n  setUserID(id) {\n    this.userID = id;\n  }\n\n  async getReports(): Promise<ReportViewModel.SimpleReport[]> {\n      return this.reportService.getReportByUser(this.userID);\n  }\n\n  async getReport(reportID): Promise<ReportViewModel.Report> {\n      return this.reportService.getReportNoMetaData(reportID);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}